{"version":3,"sources":["helpers/authorization/validateToken.js","helpers/common/get.js","helpers/authorization/login.js","helpers/authorization/WECClogin.js","helpers/authorization/WECCPost.js","components/StatusMessage.js","views/Authentication/Login.js","views/Dashboard/DrawerContents.js","views/Dashboard/AppBar.js","views/Dashboard/Main.js","helpers/common/post.js","views/Dashboard/StartABooklet.js","views/Dashboard/StartACollection.js","helpers/common/patch.js","helpers/reports/reports.js","views/Dashboard/Booklet.js","helpers/models/AlertType.js","components/AlertMessage.js","views/Reports/LineChart.js","views/Reports/Summary/Interests.js","views/Reports/Summary/FamilyFriendsNeighbours.js","views/Reports/Summary/CommunityParticipation.js","views/Reports/Summary/PH_GAUGE.js","views/Reports/Summary/MH_Gauge.js","views/Reports/Summary/HeathToday_Gauge.js","views/Reports/Summary/HealthStatus.js","views/Reports/Summary/HealthSupportServices.js","views/Reports/Summary/PersonalWellbeing_Gauge.js","views/Reports/Summary/PersonalWellBeing.js","views/Reports/Summary/Goals.js","views/Reports/Summary.js","views/Reports/ConcernAlerts/CommunityParticipationAlert.js","views/Reports/ConcernAlerts/HealthAlert.js","views/Reports/ConcernAlerts/LonelinessAlert.js","views/Reports/ConcernAlerts/PersonalWellBeingAlert.js","views/Reports/ConcernAlerts/SocialContactAlert.js","views/Reports/ConcernAlerts/SupportAvailabilityAlert.js","views/Reports/PossibleConcerns.js","views/Reports/Suggestions/CommunityParticipationSuggestion.js","views/Reports/Suggestions/HealthSuggestion.js","views/Reports/Suggestions/LonelinessSuggesiton.js","views/Reports/Suggestions/SocialContactSuggestion.js","views/Reports/Suggestions/SocialSupportSuggesiton.js","views/Reports/Suggestions/WellBeingSuggestion.js","views/Reports/Suggestions.js","views/Reports/Summary/DashbordPie.js","views/Reports/ContactInfo.js","views/Reports/Summary/DashboardCombo.js","views/Reports/ReportDashboard.js","views/Reports/Reports.js","views/Reports/ClientReports.js","views/Dashboard/YourPatients.js","views/Dashboard/Search.js","components/TextInput.js","views/Profiles/View.js","views/Administration/Users/Management.js","views/Administration/Users/Components/UserTable/UserTableHead.js","views/Administration/Users/Components/UserTable/UserTableToolbar.js","views/Administration/Users/Components/UserTable/UserTable.js","views/Administration/Users/Components/UsersManagementControlPanel/UsersManagementControlPanel.js","views/Administration/Users/Dialog/AssignUserDialog.js","views/Administration/Users/Dialog/CreateUserDialog.js","helpers/common/delete.js","views/Administration/Users/Dialog/DeleteUserDialog.js","views/Administration/Users/Pages/UsersManagement.js","views/Administration/Users/Dialog/ChangesUserDialog.js","views/Administration/Collections/Components/CollectionTable/CollectionTableHead.js","views/Administration/Collections/Components/CollectionTable/CollectionTableToolbar.js","views/Administration/Collections/Components/CollectionTable/CollectionTable.js","views/Administration/Collections/Components/CollectionsManagementControlPanel/CollectionsManagementControlPanel.js","views/Administration/Collections/Dialog/ExportCollectionDialog.js","views/Administration/Collections/Dialog/CreateCollectionTemplateDialog.js","views/Administration/Collections/Dialog/DeleteCollectionDialog.js","views/Administration/Users/Components/UserCollectionsTab/UserCollectionsTab.js","views/Administration/Users/Components/UserCommunityTab/UserCommunityTab.js","helpers/common/put.js","views/Administration/Users/Components/UserNotesTab/UserNotesTab.js","views/Administration/Users/Components/UserInformationTab/UserInformationTab.js","views/Administration/Users/Components/UserGeneralPropertiesTab/UserGeneralPropertiesTab.js","views/Administration/Users/Pages/ViewUser.js","views/Administration/Users/EditPerson.js","views/Administration/Users/EnableDisablePerson.js","views/Administration/Users/Research.js","views/Administration/Booklets/Dialog/PullChapterDialog.js","views/Administration/Booklets/Dialog/SaveChapterDialog.js","views/Administration/Booklets/Management/EditChapterTemplate.js","views/Administration/Booklets/Management/ViewChapterTemplate.js","views/Administration/Booklets/Management/EditChapterUser.js","views/Administration/Booklets/Management/ViewChapterUser.js","views/Administration/Booklets/Management/ManagementControlPanel.js","views/Administration/Booklets/Dialog/CreateChapterTemplateDialog.js","views/Administration/Booklets/Dialog/CreateChapterUserDialog.js","views/Administration/Booklets/Dialog/ExportChapterDialog.js","views/Administration/Booklets/Dialog/DeleteChapterDialog.js","views/Administration/Booklets/ChapterTable/ChapterTableHead.js","views/Administration/Booklets/ChapterTable/ChapterTableToolbar.js","views/Administration/Booklets/ChapterTable/ChapterTable.js","views/Administration/Booklets/Pages/Management.js","views/Dashboard/404.js","views/Administration/Collections/Dialog/CreateMemberCollectionTemplate.js","views/Administration/Collections/Dialog/AssignMemberDialog.js","views/Administration/Collections/Dialog/AssignProjectDialog.js","views/Administration/Collections/Pages/CollectionsManagement.js","views/Administration/Collections/Components/LinearProgressWithLabel/LinearProgressWithLabel.js","views/Administration/Collections/Components/CircularProgressWithLabel/CircularProgressWithLabel.js","views/Administration/Collections/Pages/ViewCollection.js","views/Administration/Projects/Components/ProjectManagementControlPanel/ProjectManagementControlPanel.js","views/Administration/Projects/Components/ProjectTable/ProjectTableHead.js","views/Administration/Projects/Components/ProjectTable/ProjectTableToolbar.js","views/Administration/Projects/Components/ProjectTable/ProjectTable.js","views/Administration/Projects/Dialog/CreateProjectDialog.js","views/Administration/Projects/Dialog/AssignMemberDialog.js","views/Administration/Projects/Dialog/AssignServiceDialog.js","views/Administration/Projects/Dialog/DeleteProjectDialog.js","views/Administration/Projects/Pages/ProjectsManagement.js","views/Dashboard/Dashboard.js","Theme.js","App.js","serviceWorker.js","index.js"],"names":["validateToken","token","callback","axios","method","url","headers","timeout","then","response","catch","error","_get","login","data","JSON","stringify","weccLogin","weccPost","StatusMessage","props","children","color","Typography","component","className","Login","handleEmailChange","event","setState","email","target","value","handlePasswordChange","password","handleLogin","state","loginValidText","authenticating","status","user","handleWECCLogin","WECClogin","success","WECCPost","redirectTo","redirect","classes","this","main","CssBaseline","Paper","paper","Avatar","avatar","variant","form","FormControl","margin","required","fullWidth","InputLabel","htmlFor","Input","id","name","autoComplete","onChange","autoFocus","type","Button","submit","disabled","onClick","CircularProgress","size","spinner","Component","withStyles","theme","width","display","marginLeft","spacing","marginRight","breakpoints","up","marginTop","flexDirection","alignItems","padding","backgroundColor","palette","secondary","green","position","left","DrawerContents","toggleUsersCollapseMenuOpen","managementCollapseMenuOpen","toggleChaptersCollapseMenuOpen","chaptersCollapseMenuOpen","toggleCollectionsCollapseMenuOpen","collectionsCollapseMenuOpen","toggleReportsCollapseMenuOpen","reportsCollapseMenuOpen","appState","List","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","role","Collapse","in","unmountOnExit","disablePadding","nested","paddingLeft","usersColors","colorGreen","chapterColors","collectionColors","AppBarContent","handleAccountMenuOpen","accountMenuAnchor","currentTarget","accountMenuOpen","handleAccountMenuClose","handleMenuClose","renderAccountMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem","fontSize","Logout","Divider","AppBar","appBar","Toolbar","IconButton","aria-label","toggleDrawerOpen","menuButton","grow","noWrap","sectionDesktop","aria-owns","undefined","aria-haspopup","root","zIndex","drawer","flexGrow","styles","bullet","transform","Main","checkAuth","setTimeout","ToggleDrawerClose","CheckAuthenticationValidity","tokenValid","render","checkClientSurveys","_id","get","console","log","clientData","clientSurvey","surveys","componentDidMount","bull","Grid","container","rootGrid","direction","justifyContent","item","xs","Box","mx","my","align","gutterBottom","Card","raised","CardContent","boxShadow","message","href","style","pos","CardActions","_post","StartABooklet","users","library","length","booklets","getAllAssignedPatients","query","patients","loadError","patientID","$in","post","count","populateUserData","getAllBooklets","populateBookletData","index","info","createdAt","surveyJSON","updatedAt","handleChange","handleStartBooklet","bookletIndex","patientId","templateId","responseJSON","approved","createdBy","modifiedBy","startError","starting","memberSurveyID","memberSurvey","createRow","renderSelect","patientRows","bookletRows","push","formControl","Select","inputProps","map","row","assigning","card","title","alignLeftSpacer","Tooltip","startIcon","StartACollection","buttonIcon","flexWrap","getAllCollections","handleStartCollection","_patch","calculateCompleteness","survey","getAllQuestions","totalQuestions","finishedQuestions","forEach","question","getType","isReadOnly","hasOwnProperty","propertyHash","rows","Array","isArray","subQuestionsLength","answeredSubQuestions","Object","keys","columns","subQuestionCellLength","rowCount","items","test","String","parseInt","completePercentage","Math","round","Booklet","loadSurvey","Survey","applyTheme","handleBackToMemberButton","history","goBack","match","params","booklet","currentSurveyJSON","currentSurveyResponseJSON","parse","window","showPageNumbers","showNavigationButtons","showPageTitles","showTitle","showPrevButton","sendResultOnPageNext","onComplete","add","result","saveSurvey","onPartialSend","surveyApproved","removeMessages","completeStatus","patch","saveError","saveSuccess","approveSurvey","exportToPDF","surveyPDF","SurveyPDF","format","margins","right","top","bot","replace","save","canApprove","tooltip","placement","buttonMargin","model","alignLeftSpacerRoot","AlertType","severity","useStyles","makeStyles","height","AlertMessage","alert","setParentAlert","useState","show","setShow","closeHandler","useCallback","useEffect","timer","clearTimeout","Alert","action","defaultProps","LineChart","chartRef","React","createRef","findValue","str","walking","care","activities","usual","pain","anxiety","anxious","ctx","current","getContext","Chart","options","plugins","text","scales","y","min","max","labels","datasets","label","borderColor","fill","ref","Interests","m","mb","reports","collection","meaningful_activities","FCP_STRINGS_COMB","challenging_activities","FamilyFriendsNeighbours","household_size","total_children","total_relatives","total_close_friends","total_well_known_neighbours","frequency_of_contact_family","frequency_of_contact_friends","frequency_of_contact_neighbours","CommunityParticipation","frequency_of_participation_religion","frequency_of_participation_recreation","frequency_of_participation_education","frequency_of_participation_associations","frequency_of_participation_volunteering","frequency_of_participation_informal_help","frequency_of_participation_music","frequency_of_participation_computer","PH_GAUGE","indexAxis","legend","x","MH_Gauge","HealthToday_Gauge","HealthStatus","PH_QofL2_SD","MH_QofL2_SD","HT_QofL2_SD","problem_walking","problem_washing_dressing","problem_usual_activities","problem_pain_discomfort","problem_anxious_depressed","HealthSupportServices","support_wellness_program","support_healthcare","support_home_healthcare","support_private_healthcare","support_informal","PersonalWellbeing_Gauge","PersonalWellBeing","PWI_QofL3_COMB","Goals","goals","Summary","CommunityParticipationAlert","ISA_INT","ISA_DM_STRINGS","HealthAlert","M_QofL2_SD","PC_QofL2_SD","UA_QofL2_SD","PD_QofL2_SD","AD_QofL2_SD","HU_ED_QofL2_SD","HU_HNum_QofL2_SD","HU_EMS_QofL2_SD","HU_UC_QofL2_SD","access_to_family_doctor","LonelinessAlert","PL_QofL1_COMB_often_count","PL_QofL1_COMB_sometimes_count","PL_QofL1_COMB","PersonalWellBeingAlert","SL_QofL3_SD","YH_QofL3_SD","AL_QofL3_SD","PR_QofL3_SD","HSF_QofL3_SD","FPC_QofL3_SD","FS_QofL3_SD","SR_QofL3_SD","PAG_QofL1_SD","SocialContactAlert","frequency_get_together_family","frequency_get_together_friends","frequency_get_together_neighbours","frequency_of_social_contacts_month_phone_computer","QSC_QofL1_COMB","SupportAvailabilityAlert","PSS_QofL1_COMB","AFH_QofL1_SD","PossibleConcerns","CommunityParticipationSuggestion","HealthSuggestion","Loneliness","SocialContactSuggesiton","SocialSupportSuggesiton","WellBeingSuggestion","Suggestions","DashboardPie","findColour","score","isComplete","health_colour","mentalHealth_colour","wellBeing_colour","lifeSatisfaction_colour","loneliness_colour","health_zero","mentalHealth","wellBeing","lifeSatisfaction","loneliness","font","enabled","DashboardCombo","scoreAverage","scoreArray","sum","validScores","i","calculateBalance","rotation","circumference","ReportDashboard","findDashboardValues","health","LS_QofL3_SD","Reports","setAlert","reportsData","setReportsData","patientData","setPatientData","localStorage","getItem","currentPatient","setCurrentPatient","currentReportIndex","setCurrentReportIndex","getPatients","http_query","err","res","getNeighbours","userId","patientSelectHandler","reportsPaginationHandler","page","selectEmpty","labelId","defaultValue","Pagination","SRVNum_PRF_SD","showFirstButton","showLastButton","getPrototypeOf","prototype","light","ClientReports","YourPatients","a","UpdateUser","getUsers","populateStateData","patientIndex","includes","createUserCard","renderCards","userCardRoot","Date","sm","md","lg","xl","CardHeader","getMonth","getDate","getFullYear","Search","membersurveys","getMemberSurveys","populateMemberSurveyData","populateSurveyData","memberSurveys","patientName","createMemberSurveysRow","createSurveysRow","renderMemberSurveysList","mRows","mLength","bRows","bLength","filteredSurveys","filter","inputDate","date","toLowerCase","indexOf","search","toString","approval","updateSearch","bind","Table","TableHead","TableRow","TableCell","TableBody","userProfileURL","bookletURL","renderError","TextInput","buttonView","buttonEdit","colorBlue","buttonDelete","colorRed","DialogTitle","borderBottom","divider","closeButton","grey","disableTypography","DialogContent","MuiDialogContent","DialogActions","borderTop","MuiDialogActions","TabContainer","ViewProfile","currentBooklet","profileID","workers","componentDidUpdate","newProfileID","loadUserInformation","userError","userResponse","createStickyNote","noteName","noteMessage","newNote","level","noteCreating","noteError","noteCreationDialogOpen","location","reload","createBookletRow","approvedBy","approvedByName","dateCreated","createdByName","dateLastModified","lastMofifiedBy","lastMofifiedByName","createStickyNoteRow","createUserRow","handleTabChange","tabValue","HandleChange","handleBookletDialogOpen","bookletDialogOpen","handleBookletDialogClose","handlePreviousVersionNumber","handlePreviousVersionsOpen","previousVersionDialogOpen","previousVersions","handlePreviousVersionsClose","handleNoteCreationDialogOpen","handleNoteCreationDialogClose","renderBookletTab","sort","b","approvedByname","modifiedByName","recent","endIcon","renderPreviousVersions","Dialog","aria-labelledby","previousVersion","renderStickyNotesTab","stickyNotes","renderUserTab","renderInfoTab","TextField","readOnly","phone","currentAddress","street","city","code","country","renderBookletDialog","renderNoteCreationDialog","tabRoot","Tabs","Tab","UsersManagement","background","rightIcon","visuallyHidden","border","clip","overflow","headCellsUserChapters","numeric","UserTableHead","onSelectAllClick","order","orderBy","numSelected","onRequestSort","headCells","createSortHandler","property","Checkbox","indeterminate","checked","headCell","sortDirection","TableSortLabel","active","paddingRight","highlight","lighten","dark","flex","UserTableToolbar","selectedDataItemsList","setParentDeleteUserDialog","viewUrl","setViewUrl","toolNone","setToolNone","toolOne","setToolOne","toolMultiple","setToolMultiple","toolHandler","deleteHandler","viewUserBaseLinkAdministration","viewUserBaseLinkStaff","clsx","descendingComparator","getComparator","stableSort","array","comparator","stabilizedThis","el","tableRow","cursor","UserTable","isDense","searchFilteredDataList","setParentExportChapterDialog","setSelectedDataItemsList","setOrder","setOrderBy","setPage","rowsPerPage","setRowsPerPage","emptyRows","handleRequestSort","handleSelectAllClick","newSelecteds","elem","handleClick","selectedIndex","newSelected","concat","slice","isSelected","handleChangePage","newPage","handleChangeRowsPerPage","TableContainer","table","isItemSelected","hover","aria-checked","tabIndex","selected","scope","sequenceId","colSpan","TablePagination","rowsPerPageOptions","onPageChange","pageNumber","onRowsPerPageChange","selectFilterOptions","key","UsersManagementControlPanel","mode","setIsDense","dataList","getParentData","setSearchFilteredDataList","setCreateUserDialog","setAssignUserDialog","selectSearchFilterOption","setSelectSearchFilterOption","searchFilter","setSearchFilter","pullHandler","createUserHandler","assignUserHandler","compactHandler","selectSearchHandler","searchHandler","tempFilter","toUpperCase","tempArray","FormControlLabel","control","Switch","labelPlacement","minWidth","autoWidth","AssignUserDialog","selectedUserList","assignUserDialog","assignUserDialogExecuting","setAssignUserDialogExecuting","currentManagementUser","setCurrentManagementUser","selectedManagementUserList","setSelectedManagementUserList","managementUserList","setManagementUserList","currentClientUser","setCurrentClientUser","selectedClientUserList","setSelectedClientUserList","clientUserList","setClientUserList","userList","setUserList","populateUsers","assignSelectedUsers","selectedManagementUserListFormatted","selectedClientUserListFormatted","managementUser","patchData","ClientUser","createHandler","selectManagementHandler","selectClientHandler","addManagementButtonHandler","tempUserObject","find","addClientButtonHandler","removeManagementButtonHandler","tempList","splice","findIndex","oldItem","removeClientButtonHandler","tempManagementUserList","tempClientUserList","tempSelectedManagementUserList","tempSelectedClientUserList","maxWidth","DialogContentText","emailRegex","passwordRegex","streetRegex","postalCodeRegex","CreateUserDialog","createUserDialog","createUserDialogExecuting","setCreateUserDialogExecuting","setEmail","emailError","setEmailError","setPassword","passwordError","setPasswordError","confirmPassword","setConfirmPassword","confirmPasswordError","setConfirmPasswordError","firstName","setFirstName","firstNameError","setFirstNameError","lastName","setLastName","lastNameError","setLastNameError","dateOfBirth","setDateOfBirth","setDateOfBirthError","gender","setGender","setGenderError","gender2","setGender2","isGender2","setIsGender2","gender2Error","setGender2Error","language","setLanguage","setLanguageError","language2","setLanguage2","isLanguage2","setIsLanguage2","language2Error","setLanguage2Error","setRole","setRoleError","setStreet","streetError","setStreetError","postalCode","setPostalCode","postalCodeError","setPostalCodeError","setCity","cityError","setCityError","province","setProvince","setProvinceError","setCountry","setCountryError","createUser","sanatized_firstName","trim","charAt","sanatized_lastName","sanatized_language2","sanatized_gender2","sanatized_city","facilityId","address","resetCreateForm","navigateBack","navigateNext","emailHandler","passwordHandler","confirmPasswordHandler","firstNameHandler","lastNameHandler","dateOfBirthHandler","genderHandler","gender2Handler","languageHandler","language2Handler","roleHandler","streetHandler","cityHandler","provinceHandler","postalCodeHandler","countryHandler","select","InputLabelProps","shrink","toISOString","split","ButtonGroup","_delete","DeleteUserDialog","deleteUserDialog","setDeleteUserDialog","deleteUserDialogExecuting","setDeleteUserDialogExecuting","deleteUserSelected","del","setDataList","populateList","collections","research","ChangesUserDialog","toBePanelIndex","setPanelIndex","changesUserDialog","setChangesUserDialog","changesUserDialogExecuting","setChangesUserDialogExecuting","saveHandler","headCellTitlesCollectionTemplate","headCellTitlesMemberCollection","headCellTitlesMemberCollectionClient","CollectionTableHead","userID","isTemplates","setHeadCells","CollectionTableToolbar","setParentDeleteCollectionDialog","setParentExportCollectionDialog","exportHandler","viewCollectionBaseLinkAdministration","viewCollectionBaseLinkStaff","viewCollectionBaseLinkClient","CollectionTable","collectionTemplate","projectList","memberList","memberCollectionList","surveyList","subItem","completeness","member","memberSurveyList","toLocaleDateString","toLocaleTimeString","mr","selectFilterOptionsTemplate","selectFilterOptionsMember","selectFilterOptionsMemberClient","CollectionsManagementControlPanel","setIsTemplates","setCreateCollectionTemplateDialog","setCreateMemberCollectionDialog","setAssignMemberDialog","setAssignProjectDialog","createCollectionTemplateHandler","createMemberCollectionHandler","collectionTemplateButtonHandler","AssignMemberHandler","AssignProjectHandler","memberCollectionButtonHandler","surveyTemplates","defaultPdfWidth","defaultPdfHeight","pdfDimensions","ExportCollectionDialog","exportCollectionDialog","setExportCollectionDialog","exportCollectionDialogExecuting","setExportCollectionDialogExecuting","pdfWidth","setPdfWidth","pdfHeight","setPdfHeight","totalExported","setTotalExported","exportCollectionChapters","Error","promises","Promise","resolve","reject","call","pdfOptions","getTime","surveyTemplate","all","widthHandler","heightHandler","InputProps","CreateCollectionDialog","createCollectionTemplateDialog","createCollectionTemplateDialogExecuting","setCreateCollectionTemplateDialogExecuting","surveyTemplatesList","setSurveyTemplatesList","selectedSurveyTemplate","setSelectedSurveyTemplate","selectedSurveyTemplatesList","setSelectedSurveyTemplatesList","collectionTemplateName","setCollectionTemplateName","getSurveyTemplates","createCollection","tempSelectedSurveyTemplatesList","collectionTemplateNameHandler","selectSurveyTemplateHandler","addSurveyTemplateHandler","tempSurveyObject","removeSurveyTemplateHandler","DeleteCollectionDialog","deleteCollectionDialog","setDeleteCollectionDialog","deleteCollectionDialogExecuting","setDeleteCollectionDialogExecuting","deleteCollectionSelected","deleteMemberCollectionSelected","UserCollectionsTab","panelId","panelIndex","userOriginal","createCollectionDialog","setCreateCollectionDialog","createCollectionDialogExecuting","setCreateCollectionDialogExecuting","chapterTemplates","memberChapters","overallCompleteness","getUserCollections","hidden","CreateCollectionTemplateDialog","viewUserLinkAdministration","viewUserLinkStaff","UserCommunityTab","getParentInfo","userEdit","setUserEdit","resetInformationProperties","dense","link","ListItemAvatar","ListItemSecondaryAction","edge","_put","UserNotesTab","userData","setUserData","setValue","note","setNote","notesList","saveNote","noteData","resetNote","arr","obj","admins","coordinators","volunteers","userSelectHandler","handleNoteStatus","noteId","put","getFormattedDate","d","getMonthName","getHours","getUTCMinutes","getNotes","foundNotes","renderRow","subheader","ListSubheader","senderId","multiline","placeholder","phoneRegex","wordsRegex","UserInformationTab","editable","setEditable","changedInformationProperties","setChangedInformationProperties","setName","nameError","setNameError","dateOfBirthError","genderError","languageError","setPhone","phoneError","setPhoneError","provinceError","countryError","editablePropertiesHandler","nameHandler","phoneHandler","saveInformationProperties","updateData","sequence_id","prefix","UserGeneralPropertiesTab","changedGeneralProperties","setChangedGeneralProperties","setEnabled","resetGeneralProperties","saveGeneralProperties","ViewUser","setUserOriginal","setToBePanelIndex","getUser","panelHandler","newValue","aria-controls","EditPerson","saveUserInformation","renderForm","saving","EnableDisablePerson","justify","Research","createResearchId","enableDisableResearchId","full","PullChapterDialog","chapter","setParentLoadChapter","pullChapterDialog","setPullChapterDialog","pullChapterDialogExecuting","setPullChapterDialogExecuting","SaveChapterDialog","isTemplate","chapterID","saveChapterDialog","setSaveChapterDialog","saveChapterDialogExecuting","setSaveChapterDialogExecuting","saveChapter","updateBody","surveyCreatorOptions","showLogicTab","showToolbox","showPropertyGrid","surveyContainerID","SurveyCreator","widgets","SurveyKo","EditChapterTemplate","surveyCreator","useRef","ChapterID","chapterOriginal","setChapterOriginal","chapterCopy","setChapterCopy","surveyJSloading","setSurveyJSLoading","loadChapter","restoreHandler","publicHandler","isPublic","toLocaleString","ViewChapterTemplate","setSurvey","json","EditChapterUser","progress","setProgress","completeHandler","hasErrors","pageChangeHandler","hasPageErrors","restartHandler","clear","mergeData","progressHandler","tempSurvey","showProgressBar","__v","onCurrentPageChanged","onValueChanged","valueChangeHandler","surveyStyle","ViewChapterUser","selectFilterOptionsSurvey","selectFilterOptionsMemberSurvey","ManagementControlPanel","setCreateChapterTemplateDialog","setCreateChapterUserDialog","createTemplateHandler","chapterTemplatesButtonHandler","userChaptersButtonHandler","memberCollection","CreateChapterTemplateDialog","createChapterTemplateDialog","createChapterTemplateDialogExecuting","setCreateChapterTemplateDialogExecuting","chapterName","setChapterName","createChapterTemplate","HttpDataObject","CreateChapterUserDialog","createChapterUserDialog","createChapterUserDialogExecuting","setCreateChapterUserDialogExecuting","selectedMember","setSelectedMember","surveyTemplateList","setSurveyTemplateList","setMemberList","populateSurveyTemplateList","populateMemberList","getMembers","MongoQuery","createMemberSurvey","postBody","templateHandler","clientHandler","ExportChapterDialog","exportChapterDialog","setExportChapterDialog","exportChapterDialogExecuting","setExportChapterDialogExecuting","exportChapter","DeleteChapterDialog","deleteChapterDialog","setDeleteChapterDialog","deleteChapterDialogExecuting","setDeleteChapterDialogExecuting","deleteChapterSelected","headCellsChapterTemplates","ChapterTableHead","editChapterBaseLink","viewChapterBaseLink","ChapterTableToolbar","setParentDeleteChapterDialog","editUrl","setEditUrl","ChapterTable","Management","getUserChapters","getTemplates","getData","Dashboard404","CreateMemberCollectionDialog","createMemberCollectionDialog","createMemberCollectionDialogExecuting","setCreateMemberCollectionDialogExecuting","selectedProject","selectedProjectList","collectionTemplateList","setCollectionTemplateList","selectedCollectionTemplate","setSelectedCollectionTemplate","selectedCollectionTemplateList","setSelectedCollectionTemplateList","selectedMemberList","setSelectedMemberList","collectionList","getCollectionTemplateList","getMemberList","queryBody","createMemberCollection","selectCollectionTemplateHandler","selectMemberHandler","addCollectionTemplateHandler","addMemberHandler","removeCollectionTemplateHandler","removeMemberHandler","AssignMemberDialog","assignMemberDialog","assignMemberDialogExecuting","setAssignMemberDialogExecuting","currentCollection","setCurrentCollection","selectedCollectionList","setSelectedCollectionList","setCollectionList","currentMember","setCurrentMember","MemberList","populateCollections","getCollections","assignMembers","selectedMemberIdList","collectionId","selectCollectionHandler","addCollectionButtonHandler","addMemberButtonHandler","removeCollectionButtonHandler","removeMemberButtonHandler","AssignProjectDialog","assignProjectDialog","assignProjectDialogExecuting","setAssignProjectDialogExecuting","currentService","setCurrentService","selectedServiceList","setSelectedServiceList","ServiceList","setServiceList","currentProject","setCurrentProject","setSelectedProjectList","ProjectList","setProjectList","populateProjects","populateServices","getProjects","getServices","assignProjects","selectedProjectIdList","patchBody","selectProjectHandler","selectServiceHandler","addProjectButtonHandler","addServiceButtonHandler","removeProjectButtonHandler","removeServiceButtonHandler","CollectionsManagement","getCollectionTemplates","getMemberCollections","LinearProgressWithLabel","LinearProgress","CircularProgressWithLabel","bottom","editUserChapterBaseLinkStaff","ViewCollection","CollectionID","collectionOriginal","setCollectionOriginal","collectionEdit","setCollectionEdit","getCollection","selectFilterOptionsProjects","ProjectsManagementControlPanel","setCreateProjectDialog","setAssignServiceDialog","createProjectHandler","AssignServiceHandler","headCellTitlesProject","ProjectTableHead","ProjectTableToolbar","setParentDeleteProjectDialog","ProjectTable","CreateProjectDialog","createProjectDialog","createProjectDialogExecuting","setCreateProjectDialogExecuting","selectedCollectionTemplatesList","projectName","setProjectName","createProject","projectNameHandler","project","projectId","AssignServiceDialog","assignServiceDialog","assignServiceDialogExecuting","setAssignServiceDialogExecuting","assignServices","selectedServiceIdList","DeleteProjectDialog","deleteProjectDialog","setDeleteProjectDialog","deleteProjectDialogExecuting","setDeleteProjectDialogExecuting","deleteSelectedProjects","ProjectsManagement","ProjectManagementControlPanel","Dashboard","drawerOpen","toggleDrawerClose","toggleExportRender","renderForPDF","Drawer","anchor","drawerPaper","toolbar","classNames","content","contentShift","exact","path","collectionID","bookletID","flexShrink","whiteSpace","mixins","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","createTheme","pink","contrastText","purple","tertiary","unit","marginBottom","blue","red","typography","useNextVariants","App","CheckAuthentication","facilityName","_token","authenticated","setItem","removeItem","Theme","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","require","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.098c1d1d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nfunction validateToken(token, callback)\r\n{\r\n    axios({\r\n        method: 'get',\r\n        url: '/api/users/validate',\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + token\r\n        },\r\n        timeout: 5000\r\n    })\r\n    .then(response => {\r\n        callback(null, response);\r\n    })\r\n    .catch(error => {\r\n        callback(error, null);\r\n    });\r\n}\r\n\r\nexport default validateToken;","// ============================================\r\n// Sends a GET request to server using axios\r\n// ============================================\r\nimport axios from 'axios';\r\n\r\nfunction _get(url, token, callback)\r\n{\r\n    axios({\r\n        method: 'get',\r\n        url: '/api/' + url,\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + token\r\n        },\r\n        timeout: 5000\r\n    })\r\n    .then(response => {\r\n        callback(null, response);\r\n    })\r\n    .catch(error => {\r\n        callback(error, null);\r\n    });\r\n}\r\n\r\nexport default _get;","// ============================================\r\n// Send POST request for login authorization\r\n// using login information input by user\r\n// ============================================\r\nimport axios from 'axios';\r\n\r\nfunction login(data, callback)\r\n{\r\n    axios({\r\n        method: 'post',\r\n        url: '/api/users/login',\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n        },\r\n        data: JSON.stringify(data),\r\n        timeout: 5000\r\n    })\r\n    .then(response => {\r\n        callback(null, response);\r\n    })\r\n    .catch(error => {\r\n        callback(error.response, null);\r\n    });\r\n}\r\n\r\nexport default login;","// ============================================\r\n// Send POST request for WECCC login authorization\r\n// using login information input by user\r\n// ============================================\r\nimport axios from 'axios';\r\n\r\nfunction weccLogin(data, callback)\r\n{\r\n    axios({\r\n        method: 'post',\r\n        url: 'https://weccc.dev/api/users/login',\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n        },\r\n        data: JSON.stringify(data),\r\n        timeout: 5000\r\n    })\r\n    .then(response => {\r\n        callback(null, response);\r\n    })\r\n    .catch(error => {\r\n        callback(error, null);\r\n    });\r\n}\r\n\r\nexport default weccLogin;","import axios from 'axios';\r\n\r\nfunction weccPost(url, data, callback)\r\n{\r\n    axios({\r\n        method: 'post',\r\n        url: '/api/users/wecc',\r\n        headers: { \r\n            'Content-Type': 'application/json'            \r\n        },\r\n        data: JSON.stringify(data),\r\n        timeout: 5000\r\n    })\r\n    .then(response => {\r\n        callback(null, response);\r\n    })\r\n    .catch(error => {\r\n        callback(error, null);\r\n    });\r\n}\r\n\r\nexport default weccPost;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst StatusMessage = props => {\r\n    let { children, color } = props;\r\n\r\n    return (\r\n        <Typography component=\"p\" className={color}>\r\n            {children}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nStatusMessage.propTypes = {\r\n    color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default StatusMessage;","// ================================================\r\n// Code associated with login page for app. Contains\r\n// normal login scenario and WECCC login scenario.\r\n// ================================================\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// ==================== Helpers ====================\r\nimport login from '../../helpers/authorization/login';\r\nimport WECClogin from '../../helpers/authorization/WECClogin';\r\nimport WECCPost from '../../helpers/authorization/WECCPost';\r\n\r\n// ==================== Components ====================\r\nimport StatusMessage from '../../components/StatusMessage';\r\n\r\n// ==================== MUI ====================\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// ==================== Icons ====================\r\nimport LockIcon from '@material-ui/icons/LockOutlined';\r\n\r\n// ==================== Colors ====================\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nconst styles = theme => ({\r\n    main: {\r\n        width: 'auto',\r\n        display: 'block', // Fix IE 11 issue.\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(400 + theme.spacing(6))]: {\r\n            width: 400,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    spinner: {\r\n        color: green[500],\r\n        position: 'absolute',\r\n        left: '50%',\r\n        marginTop: 0,\r\n        marginLeft: -12,\r\n    }\r\n});\r\n\r\nclass Login extends Component \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            loginValidText: \"\",\r\n            redirectTo: \"\",\r\n            authenticating: false,\r\n            redirect: false,\r\n        };\r\n    }\r\n\r\n    // Change state of user's email address\r\n    handleEmailChange = (event) =>\r\n    {\r\n        this.setState({\r\n            email: event.target.value,\r\n        });\r\n    }\r\n\r\n    // Change state of user's password\r\n    handlePasswordChange = (event) =>\r\n    {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    // Normal login scenario\r\n    handleLogin = () =>\r\n    {\r\n        let { email, password } = this.state;\r\n\r\n        if(email === \"\")\r\n        {\r\n            this.setState({\r\n                loginValidText: \"Please enter an email.\"\r\n            });\r\n\r\n            return;\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                loginValidText: \"\"\r\n            });\r\n        }\r\n\r\n        if(password === \"\")\r\n        {\r\n            this.setState({\r\n                loginValidText: \"Please enter your password.\"\r\n            });\r\n\r\n            return;\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                loginValidText: \"\"\r\n            });\r\n        }\r\n        \r\n        var data = {\r\n            email: email,\r\n            password: password\r\n        };\r\n\r\n        this.setState({\r\n            authenticating: true\r\n        });\r\n        \r\n        login(data, (error, response) => \r\n        {\r\n            if(error)\r\n            {\r\n                if(error.status === 401)\r\n                {\r\n                    this.setState({\r\n                        loginValidText: \"Your email or password is incorrect.\",\r\n                        authenticating: false\r\n                    });\r\n                }\r\n                else if(error.status === 400)\r\n                {\r\n                    this.setState({\r\n                        loginValidText: \"Your email or password is incorrect.\",\r\n                        authenticating: false\r\n                    });\r\n                }\r\n                else if(error.status === 500)\r\n                {\r\n                    this.setState({\r\n                        loginValidText: \"There was a problem contacting the server.  Please try again later.\",\r\n                        authenticating: false\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        loginValidText: \"There was a problem contacting the server.  Please try again later.\",\r\n                        authenticating: false\r\n                    });\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if((response.status === 200 || response.status === 304) && response)\r\n                {\r\n                    this.props.Login(response.data.token, response.data.user);\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        loginValidText: \"Either your email or password is incorrect, or your Account is Disabled.\",\r\n                        authenticating: false\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // WECCC login scenario\r\n    handleWECCLogin = () =>\r\n    {\r\n        let { email, password } = this.state;\r\n\r\n        if(email === \"\")\r\n        {\r\n            this.setState({\r\n                loginValidText: \"Please enter an email/username for WECC.\"\r\n            });\r\n\r\n            return;\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                loginValidText: \"\"\r\n            });\r\n        }\r\n\r\n        if(password === \"\")\r\n        {\r\n            this.setState({\r\n                loginValidText: \"Please enter your password.\"\r\n            });\r\n\r\n            return;\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                loginValidText: \"\"\r\n            });\r\n        }\r\n\r\n        var data = {\r\n            email: email,\r\n            password: password\r\n        };\r\n\r\n        this.setState({\r\n            authenticating: true\r\n        });\r\n\r\n        WECClogin(data, (error, response) => \r\n        {\r\n            if(error)\r\n            {\r\n                this.setState({\r\n                    loginValidText: \"There was a problem contacting the WECC server.  Please try again later.\",\r\n                    authenticating: false\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(response.status === 200 || response.status === 304)\r\n                {\r\n                    if(response.data.success)\r\n                    {\r\n                        var data = {\r\n                            token: response.data.token,\r\n                            email: email\r\n                        };\r\n\r\n                        WECCPost('users/wecc', data, (error, response) => \r\n                        {\r\n\r\n                            if(error)\r\n                            {\r\n                                if(error.response.status === 401)\r\n                                {\r\n                                    this.setState({\r\n                                        loginValidText: \"Your WECC email does not have an account associated with the Palliative IMS.\",\r\n                                        authenticating: false\r\n                                    });\r\n                                }\r\n                                else\r\n                                {\r\n                                    this.setState({\r\n                                        loginValidText: \"There was a problem verifying your WECC email.\",\r\n                                        authenticating: false\r\n                                    });\r\n                                }\r\n                            }\r\n                            else\r\n                            {\r\n                                if(response.status === 200 || response.status === 304)\r\n                                {\r\n                                    this.props.Login(response.data.token, response.data.user);\r\n                                }\r\n                                else\r\n                                {\r\n                                    this.setState({\r\n                                        loginValidText: \"Your WECC email does not have an account associated with the Palliative IMS.\",\r\n                                        authenticating: false\r\n                                    });\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else\r\n                    {\r\n                        this.setState({\r\n                            loginValidText: \"Either your WECC email or password is incorrect.\",\r\n                            authenticating: false\r\n                        });\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        loginValidText: \"Either your WECC email or password is incorrect.\",\r\n                        authenticating: false\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    render() \r\n    {\r\n        let { classes } = this.props;\r\n        let { email, loginValidText, password, authenticating } = this.state;\r\n\r\n        return(\r\n            <div className={classes.main}>\r\n                <CssBaseline />\r\n                <Paper className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        WECCC IMS\r\n                    </Typography>\r\n                    <div className={classes.form}>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\r\n                            <Input \r\n                                id=\"email\" \r\n                                name=\"email\" \r\n                                autoComplete=\"email\" \r\n                                value={email} \r\n                                onChange={this.handleEmailChange} \r\n                                autoFocus\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                            <Input \r\n                                name=\"password\" \r\n                                type=\"password\" \r\n                                id=\"password\"\r\n                                value={password} \r\n                                onChange={this.handlePasswordChange} \r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                        </FormControl>\r\n                        {loginValidText !== \"\" &&\r\n                            <StatusMessage color={''}>\r\n                                {loginValidText}\r\n                            </StatusMessage>\r\n                        }\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            disabled={authenticating}\r\n                            onClick={this.handleLogin}\r\n                        >\r\n                            Sign in\r\n                            {authenticating && <CircularProgress size={24} className={classes.spinner} />}\r\n                        </Button>\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Login);","// ================================================\r\n// Code for rendering dashboard side bar items\r\n// depending on the logged in user's authorization\r\n// level.\r\n// ================================================\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// ==================== MUI ====================\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// ==================== Icons ====================\r\nimport AddCircle from '@material-ui/icons/AddCircle';\r\nimport Assignment from '@material-ui/icons/Assignment';\r\nimport Ballot from '@material-ui/icons/Ballot';\r\nimport Book from '@material-ui/icons/Book';\r\nimport Dashboard from '@material-ui/icons/Dashboard';\r\nimport EventNote from '@material-ui/icons/EventNote';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport Mood from '@material-ui/icons/Mood';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\nimport PersonPin from '@material-ui/icons/PersonPin';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport BuildOutlinedIcon from '@material-ui/icons/BuildOutlined';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\n\r\nconst styles = theme => ({\r\n\tnested: {\r\n\t  \tpaddingLeft: theme.spacing(4),\r\n\t},\r\n\tusersColors: {\r\n\t\tcolor: theme.colorGreen\r\n\t},\r\n\tchapterColors: {\r\n\t\tcolor: theme.colorGreen\r\n\t},\r\n\tcollectionColors: {\r\n\t\tcolor: theme.colorGreen\r\n\t}\r\n});\r\n\r\nclass DrawerContents extends Component \r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tmanagementCollapseMenuOpen: false,\r\n\t\t\tchaptersCollapseMenuOpen: false,\r\n\t\t\tcollectionsCollapseMenuOpen: false,\r\n\t\t\treportsCollapseMenuOpen: false\r\n\t\t};\r\n\t}\r\n\r\n\ttoggleUsersCollapseMenuOpen = () =>\r\n\t{\r\n\t\tthis.setState({\r\n\t\t\tmanagementCollapseMenuOpen: !this.state.managementCollapseMenuOpen\r\n\t\t});\r\n\t}\r\n\r\n\ttoggleChaptersCollapseMenuOpen = () =>\r\n\t{\r\n\t\tthis.setState({\r\n\t\t\tchaptersCollapseMenuOpen: !this.state.chaptersCollapseMenuOpen\r\n\t\t});\r\n\t}\r\n\r\n\ttoggleCollectionsCollapseMenuOpen = () =>\r\n\t{\r\n\t\tthis.setState({\r\n\t\t\tcollectionsCollapseMenuOpen: !this.state.collectionsCollapseMenuOpen\r\n\t\t});\r\n\t}\r\n\r\n\ttoggleReportsCollapseMenuOpen = () =>\r\n\t{\r\n\t\tthis.setState({\r\n\t\t\treportsCollapseMenuOpen: !this.state.reportsCollapseMenuOpen\r\n\t\t});\r\n\t}\r\n\r\n\trender() \r\n\t{\r\n\t\tlet { appState, classes } = this.props;\r\n\r\n        return (\r\n\t\t\t<div>\r\n\t\t\t\t<List>\r\n\t\t\t\t\t<ListItem button component={Link} to=\"/\">\r\n\t\t\t\t\t\t<ListItemIcon><Dashboard color=\"primary\"/></ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText primary=\"Dashboard\"/>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t{appState.role !== \"Patient\" &&\r\n\t\t\t\t\t<ListItem button component={Link} to=\"/reports\">\r\n\t\t\t\t\t\t<ListItemIcon><AssessmentIcon color=\"primary\"/></ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText primary=\"Your Reports\" />\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{appState.role == \"Patient\" &&\r\n\t\t\t\t\t<ListItem button component={Link} to=\"/ClientReports\">\r\n\t\t\t\t\t\t<ListItemIcon><AssessmentIcon color=\"primary\"/></ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText primary=\"Your Reports\" />\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<ListItem button component={Link} to=\"/profile\">\r\n\t\t\t\t\t\t<ListItemIcon><AccountBoxIcon color=\"primary\"/></ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText>Your Profile</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t{appState.role !== \"Patient\" &&\r\n\t\t\t\t\t<ListItem button component={Link} to=\"/members\">\r\n\t\t\t\t\t\t<ListItemIcon><PeopleIcon color=\"primary\"/></ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText primary=\"Your Members\" />\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* <ListItem button component={Link} to=\"/search\" divider>\r\n\t\t\t\t\t\t<ListItemIcon><SearchIcon /></ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText primary=\"Search\" />\r\n\t\t\t\t\t</ListItem> */}\r\n\t\t\t\t</List>\r\n\t\t\t\t{(appState.role === \"Admin\" || appState.role === \"Coordinator\") &&\r\n\t\t\t\t<List>\r\n\t\t\t\t\t<ListItem button onClick={this.toggleUsersCollapseMenuOpen}>\r\n\t\t\t\t\t\t<ListItemIcon><EventNote color=\"secondary\" /></ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText primary=\"Management\" />\r\n\t\t\t\t\t\t{this.state.managementCollapseMenuOpen ? <ExpandLess /> : <ExpandMore />}\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t<Collapse in={this.state.managementCollapseMenuOpen} timeout=\"auto\" unmountOnExit>\r\n\t\t\t\t\t\t<List component=\"div\" disablePadding>\r\n\t\t\t\t\t\t\t<ListItem button component={Link} to=\"/administration/users/management\" className={classes.nested}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon><PeopleIcon /></ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText secondary=\"Users\" />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem button component={Link} to=\"/administration/booklets/management\" className={classes.nested}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon><Ballot /></ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText secondary=\"Chapters\" />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem button component={Link} to=\"/administration/services/management\" className={classes.nested}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon><LibraryBooksIcon /></ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText secondary=\"Services\" />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem button component={Link} to=\"/administration/projects/management\" className={classes.nested}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon><ListAltIcon /></ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText secondary=\"Projects\" />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<ListItem button component={Link} to=\"/administration/reports/management\" className={classes.nested}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon><AssessmentIcon /></ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText secondary=\"Reports\" />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n        \t\t\t</Collapse>\r\n\t\t\t\t</List>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(DrawerContents);","// ================================================\r\n// Code for top navigation bar of application.\r\n// Include profile tab, toggling side bar menu and\r\n// notifications.\r\n// ================================================\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// ==================== MUI ====================\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// ==================== Icons ====================\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MLink from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: 5,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'flex',\r\n    }\r\n});\r\n\r\nclass AppBarContent extends Component \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            accountMenuAnchor: null,\r\n            accountMenuOpen: false,\r\n            token: props.state\r\n        };\r\n    }\r\n\r\n    handleAccountMenuOpen = event =>\r\n    {\r\n        this.setState({\r\n            accountMenuAnchor: event.currentTarget,\r\n            accountMenuOpen: true\r\n        });\r\n    }\r\n\r\n    handleAccountMenuClose = () =>\r\n    {\r\n        this.setState({\r\n            accountMenuAnchor: null,\r\n            accountMenuOpen: false\r\n        });\r\n    }\r\n\r\n    handleMenuClose = () =>\r\n    {\r\n        this.setState({\r\n            accountMenuAnchor: null,\r\n            accountMenuOpen: false\r\n        });\r\n    }\r\n    \r\n    renderAccountMenu = () =>\r\n    {\r\n        return(\r\n            <Menu\r\n                anchorEl={this.state.accountMenuAnchor}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                open={this.state.accountMenuOpen}\r\n                onClose={this.handleMenuClose}\r\n            >\r\n                <MenuItem component={Link} to={`/profile/`} onClick={this.handleAccountMenuClose}>\r\n                    <ListItemIcon>\r\n                        <AccountBoxIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Your Profile\" />\r\n                </MenuItem>\r\n\r\n                <MenuItem onClick={this.props.Logout}>\r\n                    <ListItemIcon>\r\n                        <ExitToAppIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Logout\" />\r\n                </MenuItem>\r\n\r\n                <Divider />\r\n\r\n                <MenuItem onClick={this.handleAccountMenuClose}>\r\n                    <ListItemIcon>\r\n                        <CloseIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary=\"Close Menu\" />\r\n                </MenuItem>\r\n\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    render() \r\n    {\r\n        let { classes } = this.props;\r\n        \r\n        return (\r\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n                <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"Open drawer\"\r\n                    onClick={this.props.toggleDrawerOpen}\r\n                    className={classes.menuButton}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <div className={classes.grow}>\r\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                    <Button color=\"inherit\" component={Link} to=\"/\">\r\n                        Windsor Essex Community Compassion Care IMS   \r\n                    </Button>\r\n                </Typography>\r\n                </div>\r\n                <div className={classes.sectionDesktop}>\r\n                <IconButton color=\"inherit\">\r\n                    <NotificationsIcon />\r\n                </IconButton>\r\n                <IconButton \r\n                    color=\"inherit\" \r\n                    aria-owns={this.state.accountMenuOpen ? 'material-appbar' : undefined}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={this.handleAccountMenuOpen}\r\n                >\r\n                    <AccountCircle />\r\n                </IconButton>\r\n                {this.renderAccountMenu()}\r\n                </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n}\r\n\r\nAppBarContent.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n  \r\nexport default withStyles(styles)(AppBarContent);","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport get from '../../helpers/common/get';\r\n// ==================== MUI ====================\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Dashboard from '@material-ui/icons/Dashboard';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t\ttransform: 'scale(0.8)'\r\n\t}\r\n});\r\n\r\nclass Main extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\trender: false,\r\n\t\t\tclientData: [],\r\n\t\t\tclientSurvey: ''\r\n\t\t};\r\n\t}\r\n\r\n\tcheckAuth = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.props.ToggleDrawerClose();\r\n\t\t\tthis.props.CheckAuthenticationValidity(tokenValid => {\r\n\t\t\t\tif (tokenValid) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\trender: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, 200);\r\n\t};\r\n\r\n\tcheckClientSurveys = () => {\r\n\t\tlet { appState } = this.props;\r\n\r\n\t\tconst url = `users/client/${appState._id}`;\r\n\t\tconst token = appState.token;\r\n\r\n\t\tget(url, token, (error, response) => {\r\n\t\t\tif (error) return;\r\n\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\t// console.log(response.data.surveys[0]._id);\r\n\t\t\t\tconsole.log(response.data);\r\n\t\t\t\tthis.setState({ clientData: response.data });\r\n\t\t\t\tthis.setState({ clientSurvey: response.data.surveys[0]._id });\r\n\t\t\t\tconsole.log(this.state.clientData);\r\n\t\t\t}\r\n\t\t}); // call the get request.\r\n\t};\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tlet { appState } = this.props;\r\n\t\tthis.classes = styles();\r\n\t\tthis.bull = <span className={this.classes.bullet}>•</span>;\r\n\r\n\t\tif (appState.role === 'Patient') {\r\n\t\t\tthis.checkClientSurveys();\r\n\t\t}\r\n\r\n\t\tthis.checkAuth();\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet { appState, classes } = this.props;\r\n\r\n\t\tif (this.render) {\r\n\t\t\treturn (\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tclassName={classes.rootGrid}\r\n\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\tjustifyContent=\"flex-start\"\r\n\t\t\t\t\talignItems=\"stretch\"\r\n\t\t\t\t\tspacing={2}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t<Box mx={1} my={1}>\r\n\t\t\t\t\t\t\t<Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={2}>\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<Dashboard color=\"primary\" />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"h5\" color=\"secondary\" align=\"left\" gutterBottom={false}>\r\n\t\t\t\t\t\t\t\t\t\tDashboard\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t<Box mx={1} my={1}>\r\n\t\t\t\t\t\t\t{/* <AlertMessage alert={alert} setParentAlert={setAlert} /> */}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Card raised={true}>\r\n\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t<Box mx={1} my={1} boxShadow={0}>\r\n\t\t\t\t\t\t\t\t\t<Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" component=\"h2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tWelcome back, {appState.name}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\" component=\"h2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tLooks like there isnt much on the dashboard as of this moment. Please check in later to see\r\n\t\t\t\t\t\t\t\t\t\t\t\tchanges to your dashboard!\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{appState.role === 'Patient' && (\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<Card raised={true}>\r\n\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t<Box mx={1} my={1} boxShadow={0}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" component=\"h2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tSurvey to complete\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\" component=\"h2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.clientSurvey !== '' ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{this.state.clientData.message}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href={`/administration/booklets/user/view/${this.state.clientSurvey}`}>View Survey</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{this.state.clientData.message}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<Grid item xs={12} container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"stretch\" spacing={2}>\r\n\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Card variant=\"outlined\" style={{ backgroundColor: 'aliceblue' }}>\r\n\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\tWord of the Day\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"h6\" component=\"h2\">\r\n\t\t\t\t\t\t\t\t\t\tbe{this.bull}nev{this.bull}o{this.bull}lent\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.pos} color=\"textSecondary\">\r\n\t\t\t\t\t\t\t\t\t\tadjective\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\t\t\t\t\twell meaning and kindly.\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t{'\"a benevolent smile\"'}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t\t<Button size=\"small\">Learn More</Button>\r\n\t\t\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t\t\t<Card variant=\"outlined\" style={{ backgroundColor: 'whitesmoke' }}>\r\n\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t\tCalendar\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t\t<Button size=\"small\">Learn More</Button>\r\n\t\t\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn <CircularProgress />;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(Main);\r\n","// ============================================\r\n// Sends a POST request to server using axios\r\n// allowing the server to accept incoming data\r\n// ============================================\r\nimport axios from 'axios';\r\n\r\nfunction _post(url, token, data, callback)\r\n{\r\n    axios({\r\n        method: 'post',\r\n        url: '/api/' + url,\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + token\r\n        },\r\n        data: JSON.stringify(data),\r\n        timeout: 5000\r\n    })\r\n    .then(response => {\r\n        callback(null, response);\r\n    })\r\n    .catch(error => {\r\n        callback(error, null);\r\n    });\r\n}\r\n\r\nexport default _post;","// ================================================\r\n// Code associated with filling out an existing\r\n// survey for an existing patient user that will be\r\n// saved into the \"membersurveys\" collection in the\r\n// database.\r\n// ================================================\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// ==================== Helpers ====================\r\nimport get from '../../helpers/common/get';\r\nimport post from '../../helpers/common/post';\r\n\r\n// ==================== MUI ====================\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n// ==================== Icons ====================\r\nimport Ballot from '@material-ui/icons/Ballot';\r\nimport Description from '@material-ui/icons/Description';\r\nimport StatusMessage from '../../components/StatusMessage';\r\n\r\nconst styles = theme => ({\r\n    title: theme.title,\r\n    card: theme.card,\r\n    buttonIcon: {\r\n        marginLeft: 5\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    alignLeftSpacer: theme.alignLeftSpacer,\r\n    error: theme.error,\r\n    success: theme.success\r\n});\r\n\r\nclass StartABooklet extends Component \r\n{\t\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            patientID: \"\",\r\n            bookletIndex: \"\",\r\n            loadError: \"\",\r\n            startError: \"\",\r\n            render: false,\r\n            starting: false,\r\n            redirect: false,\r\n            redirectTo: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount = () =>\r\n    {\r\n        this.users = {};\r\n        this.users.library = {};\r\n        this.users.length = 0;\r\n\r\n        this.booklets = {};\r\n        this.booklets.library = {};\r\n        this.booklets.length = 0;\r\n\r\n        this.checkAuth();\r\n    }\r\n\r\n    checkAuth = () =>\r\n    {\r\n        setTimeout(() => {\r\n            this.props.ToggleDrawerClose();\r\n            this.props.CheckAuthenticationValidity((tokenValid) => \r\n            {\r\n                if(tokenValid)\r\n                {\r\n                    this.getAllAssignedPatients();\r\n                }\r\n            });\r\n        }, 200);\r\n    }\r\n\r\n    // Gets all patient users that are assigned to worker in the database\r\n    //Summer 2021 update: allows patient to access and start booklets on their own behalf\r\n    getAllAssignedPatients = () =>\r\n    {\r\n        let { appState } = this.props;\r\n\r\n        if(appState.patients.length <= 0 && appState.role !== 'Patient')\r\n        {\r\n            this.setState({\r\n                loadError: \"You do not have any patients assigned.  In order to start a booklet, you must first be assigned a member by an Administrator.\",\r\n                render: true\r\n            });\r\n        }\r\n\r\n        else \r\n        {\r\n            var query;\r\n\r\n            if(appState.role ===  'Patient'){\r\n                this.setState({\r\n                    patientID: appState._id\r\n                })\r\n    \r\n                this.users.length = 1;\r\n    \r\n                query = {\r\n                    _id: {\r\n                        $in: appState._id\r\n                    }\r\n                };\r\n            }\r\n\r\n            else{\r\n                this.users.length = appState.patients.length;\r\n\r\n                query = {\r\n                    _id: {\r\n                        $in: appState.patients\r\n                    }\r\n                };\r\n            }\r\n\r\n            post('users/query', appState.token, query, (error, response) => \r\n            {\r\n                if(error)\r\n                {\r\n                    if(error.response.status === 500)\r\n                    {\r\n                        this.setState({\r\n                            loadError: error.message,\r\n                            render: true\r\n                        });\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    if(response.status === 200 || response.status === 304)\r\n                    {\r\n                        this.users.length = response.data.response.count;\r\n                        this.populateUserData(response.data.response); \r\n                    }\r\n                    else\r\n                    {\r\n                        this.setState({\r\n                            loadError: \"You are not authorized to use this page.  If you think this is a mistake, please log out and try again.\",\r\n                            render: true\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // Gets all created booklets from the \"survey\" collection in the datbase\r\n    getAllBooklets = () =>\r\n    {\r\n        let { appState } = this.props;\r\n\r\n        get(\"surveys/\",  appState.token, (error, response) => \r\n        {\r\n            if(error)\r\n            {\r\n                this.setState({\r\n                    loadError: error.message,\r\n                    render: true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(response.status === 200)\r\n                {\r\n                    this.booklets.length = response.data.response.count;\r\n                    this.populateBookletData(response.data.response);\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        loadError: \"Unable to retrieve booklets.  Please refresh and try agian.\",\r\n                        render: true\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    populateUserData = (data) => \r\n    {\r\n        if(this.users.length === 0)\r\n        {\r\n            this.setState({\r\n                loadError: \"You do not have any members assigned.\",\r\n                render: true\r\n            });\r\n        }\r\n        else\r\n        {\r\n            for (let index = 0; index < data.count; index++) \r\n            {\r\n                this.users.library[index] = {\r\n                    _id: data.users[index]._id,\r\n                    name: data.users[index].info.name,\r\n                    role: data.users[index].role,\r\n                    email: data.users[index].email,\r\n                    createdAt: data.users[index].createdAt\r\n                };\r\n            }\r\n    \r\n            this.getAllBooklets();\r\n        }\r\n    }\r\n\r\n    populateBookletData = (data) => \r\n    {\r\n        if(this.booklets.length === 0)\r\n        {\r\n            this.setState({\r\n                loadError: \"No chapters have been created yet.\",\r\n                render: true\r\n            });\r\n        }\r\n        else\r\n        {\r\n            for (let index = 0; index < data.count; index++) \r\n            {\r\n                this.booklets.library[index] = {\r\n                    _id: data.surveys[index]._id,\r\n                    name: data.surveys[index].name,\r\n                    surveyJSON: data.surveys[index].surveyJSON,\r\n                    createdAt: data.surveys[index].createdAt,\r\n                    updatedAt: data.surveys[index].updatedAt\r\n                };\r\n            }\r\n\r\n            this.setState({\r\n                error: \"\",\r\n                render: true\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ \r\n            [event.target.name]: event.target.value \r\n        });\r\n    };\r\n\r\n    // Ask user to select patient assigned to them and a booklet,\r\n    // then create a new \"membersurvey\" document in the database\r\n    // and display the survey with the ability to fill it out.\r\n    handleStartBooklet = () =>\r\n    {\r\n        let { appState } = this.props;\r\n        let { bookletIndex, patientID } = this.state;\r\n\r\n        if(patientID === \"\")\r\n        {\r\n            this.setState({\r\n                startError: \"Please select a patient.\",\r\n                render: true\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if(bookletIndex === \"\")\r\n        {\r\n            this.setState({\r\n                startError: \"Please select a booklet.\",\r\n                render: true\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        var data = {\r\n            name: this.booklets.library[bookletIndex].name,\r\n            patientId: patientID,\r\n            templateId: this.booklets.library[bookletIndex]._id,\r\n            surveyJSON: this.booklets.library[bookletIndex].surveyJSON,\r\n            responseJSON: \"{}\",\r\n            approved: false,\r\n            createdBy: appState._id,\r\n            modifiedBy: appState._id\r\n        }\r\n\r\n        this.setState({\r\n            startError: \"\",\r\n            starting: true\r\n        });\r\n\r\n        post(\"membersurveys/\",  appState.token, data, (error, response) => \r\n        {\r\n            if(error)\r\n            {\r\n                this.setState({\r\n                    startError: error.message,\r\n                    starting: false\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(response.status === 201)\r\n                {\r\n                    const memberSurveyID = response.data.memberSurvey._id;\r\n\r\n                    this.setState({\r\n                        startError: \"\",\r\n                        starting: false,\r\n                        redirect: true,\r\n                        redirectTo: \"/booklet/\" + memberSurveyID\r\n                    });\r\n\r\n                    this.setState({ redirect: this.state.redirectTo });\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        startError: \"Unable to start the chapter. Please try again later.\",\r\n                        starting: false\r\n                    });\r\n                }\r\n            }\r\n        });   \r\n    }\r\n\r\n    createRow = (_id, name) =>\r\n    {\r\n        return { _id, name }\r\n    }\r\n\r\n    renderSelect = () =>\r\n    {\r\n        let { classes } = this.props;\r\n        var { bookletIndex, patientID } = this.state;\r\n\r\n        var patientRows = [];\r\n        var bookletRows = [];\r\n\r\n        for (let index = 0; index < this.users.length; index++) \r\n        {\r\n            patientRows.push(this.createRow(this.users.library[index]._id, this.users.library[index].name));\r\n        }\r\n\r\n        for (let index = 0; index < this.booklets.length; index++) \r\n        {\r\n            bookletRows.push(this.createRow(this.booklets.library[index]._id, this.booklets.library[index].name));\r\n        }\r\n\r\n        return(\r\n            <form className={classes.root} autoComplete=\"off\">\r\n                <FormControl className={classes.formControl} fullWidth>\r\n                    <InputLabel htmlFor=\"selectPatient\">Members</InputLabel>\r\n                    <Select\r\n                        value={patientID}\r\n                        onChange={this.handleChange}\r\n                        inputProps={{\r\n                            name: 'patientID',\r\n                            id: 'selectPatient',\r\n                        }}\r\n                    >\r\n                        <MenuItem value={\"\"}>\r\n                            <em>Select Member</em>\r\n                        </MenuItem>\r\n                        {\r\n                            patientRows.map((row, index) => \r\n                            {\r\n                                return(\r\n                                    <MenuItem value={row._id} key={index}>\r\n                                        {row.name}\r\n                                    </MenuItem>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl className={classes.formControl} fullWidth>\r\n                    <InputLabel htmlFor=\"selectChapter\">Chapters</InputLabel>\r\n                    <Select\r\n                        value={bookletIndex}\r\n                        onChange={this.handleChange}\r\n                        inputProps={{\r\n                            name: 'bookletIndex',\r\n                            id: 'selectChapter',\r\n                        }}\r\n                    >\r\n                        <MenuItem value={\"\"}>\r\n                            <em>Select Chapters</em>\r\n                        </MenuItem>\r\n                        {\r\n                            bookletRows.map((row, index) => \r\n                            {\r\n                                return(\r\n                                    <MenuItem value={index} key={index}>\r\n                                        {row.name}\r\n                                    </MenuItem>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n            </form>\r\n        );\r\n    }\r\n\r\n\trender()\r\n\t{\r\n        let { classes } = this.props;\r\n        let { assigning, loadError, render, redirect, redirectTo, startError } = this.state;\r\n\r\n        if(redirect)\r\n        {\r\n            return(<Redirect to={redirectTo} />);\r\n        }\r\n\r\n        if(render)\r\n        {\r\n            if(this.users.length === 0 || this.booklets.length === 0)\r\n            {\r\n                return(\r\n                    <Card className={classes.card}>\r\n                        <CardContent>\r\n                            <Typography component=\"p\" variant=\"h5\" className={classes.title}>\r\n                                Start a Chapter\r\n                            </Typography>\r\n                            {loadError !== \"\" &&\r\n                                <StatusMessage color={classes.error}>\r\n                                    {loadError}\r\n                                </StatusMessage>\r\n                            }\r\n                        </CardContent>\r\n                    </Card>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    <Grid container\r\n                        className={classes.rootGrid}\r\n                        direction=\"row\"\r\n                        justifyContent=\"flex-start\"\r\n                        alignItems=\"stretch\"\r\n                        spacing={2}\r\n                    >\r\n                        <Grid item xs={3}>\r\n                            <Box mx={1} my={1}>\r\n                                <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={2}>\r\n                                    <Grid item>\r\n                                        <Ballot color=\"primary\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <Typography variant=\"h5\" color=\"secondary\" align=\"left\" gutterBottom={false}>\r\n                                            Start a Chapter\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>                \r\n                            </Box> \r\n                        </Grid>\r\n                        <Grid item xs={9}>\r\n                            <Box mx={1} my={1}>\r\n                                {/* <AlertMessage alert={alert} setParentAlert={setAlert} /> */}\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Card raised={true}>\r\n                                <CardContent>\r\n                                <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction=\"column\"\r\n                                            justifyContent=\"flex-start\"\r\n                                            alignItems=\"stretch\"\r\n                                            spacing={1}\r\n                                        >\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"subtitle2\" component=\"h2\">\r\n                                                    Start a Chapter\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"body2\" component=\"h2\">\r\n                                                    Select a member and a chapter to begin conducting your questionairre.  If you wish to continue a chapter that has already been created, navigate to your members, click on the member profile and continue one of the 'In Progress' survey.\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box> \r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Card raised={true}>\r\n                                <CardContent>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction=\"column\"\r\n                                            justifyContent=\"flex-start\"\r\n                                            alignItems=\"stretch\"\r\n                                            spacing={1}\r\n                                        >\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"subtitle2\" component=\"h2\">\r\n                                                    Select your assigned Member &#38; Chapter\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                {this.renderSelect()}\r\n                                                {startError !== \"\" &&\r\n                                                    <Typography variant=\"body2\" color=\"error\" component=\"h2\">\r\n                                                        {startError}\r\n                                                    </Typography>\r\n                                                }\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <div className={classes.alignLeftSpacer}>\r\n                                        { assigning ? <CircularProgress className={classes.spinner}/> :\r\n                                            <Tooltip title=\"Start a Chapter\">\r\n                                                <Button size=\"small\" color=\"primary\" variant=\"contained\" startIcon={<Description />} onClick={this.handleStartBooklet}>\r\n                                                    Start\r\n                                                </Button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                    </div>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <CircularProgress />\r\n            );\r\n        }\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(StartABooklet);","// ================================================\r\n// Code associated with starting a collection\r\n//  for an existing patient user that will be\r\n// saved into the \"membersurveys\" collection in the\r\n// database.\r\n// ================================================\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// ==================== Helpers ====================\r\nimport get from '../../helpers/common/get';\r\nimport post from '../../helpers/common/post';\r\n\r\n// ==================== MUI ====================\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n// ==================== Icons ====================\r\nimport Ballot from '@material-ui/icons/Ballot';\r\nimport Description from '@material-ui/icons/Description';\r\nimport StatusMessage from '../../components/StatusMessage';\r\n\r\nconst styles = theme => ({\r\n    title: theme.title,\r\n    card: theme.card,\r\n    buttonIcon: {\r\n        marginLeft: 5\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    alignLeftSpacer: theme.alignLeftSpacer,\r\n    error: theme.error,\r\n    success: theme.success\r\n});\r\n\r\nclass StartACollection extends Component \r\n{\t\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            patientID: \"\",\r\n            loadError: \"\",\r\n            startError: \"\",\r\n            render: false,\r\n            starting: false,\r\n            redirect: false,\r\n            redirectTo: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount = () =>\r\n    {\r\n        this.users = {};\r\n        this.users.library = {};\r\n        this.users.length = 0;\r\n\r\n        this.checkAuth();\r\n    }\r\n\r\n    checkAuth = () =>\r\n    {\r\n        setTimeout(() => {\r\n            this.props.ToggleDrawerClose();\r\n            this.props.CheckAuthenticationValidity((tokenValid) => \r\n            {\r\n                if(tokenValid)\r\n                {\r\n                    this.getAllAssignedPatients();\r\n                }\r\n            });\r\n        }, 200);\r\n    }\r\n\r\n    // Gets all patient users that are assigned to worker in the database\r\n    //Summer 2021 update: allows patient to access and start booklets on their own behalf\r\n    getAllAssignedPatients = () =>\r\n    {\r\n        let { appState } = this.props;\r\n\r\n        if(appState.patients.length <= 0 && appState.role !== 'Patient')\r\n        {\r\n            this.setState({\r\n                loadError: \"You do not have any patients assigned.  In order to start a collection, you must first be assigned a member by an Administrator.\",\r\n                render: true\r\n            });\r\n        }\r\n\r\n        else \r\n        {\r\n            var query;\r\n\r\n            if(appState.role ===  'Patient'){\r\n                this.setState({\r\n                    patientID: appState._id\r\n                })\r\n    \r\n                this.users.length = 1;\r\n    \r\n                query = {\r\n                    _id: {\r\n                        $in: appState._id\r\n                    }\r\n                };\r\n            }\r\n\r\n            else{\r\n                this.users.length = appState.patients.length;\r\n\r\n                query = {\r\n                    _id: {\r\n                        $in: appState.patients\r\n                    }\r\n                };\r\n            }\r\n\r\n            post('users/query', appState.token, query, (error, response) => \r\n            {\r\n                if(error)\r\n                {\r\n                        this.setState({\r\n                            loadError: error.message,\r\n                            render: true\r\n                        });\r\n                }\r\n                else\r\n                {\r\n                    if(response.status === 200 || response.status === 304)\r\n                    {\r\n                        this.users.length = response.data.response.count;\r\n                        this.populateUserData(response.data.response); \r\n                    }\r\n                    else\r\n                    {\r\n                        this.setState({\r\n                            loadError: \"You are not authorized to use this page.  If you think this is a mistake, please log out and try again.\",\r\n                            render: true\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    populateUserData = (data) => \r\n    {\r\n        if(this.users.length === 0)\r\n        {\r\n            this.setState({\r\n                loadError: \"You do not have any members assigned.\",\r\n                render: true\r\n            });\r\n        }\r\n        else\r\n        {\r\n            for (let index = 0; index < data.count; index++) \r\n            {\r\n                this.users.library[index] = {\r\n                    _id: data.users[index]._id,\r\n                    name: data.users[index].info.name,\r\n                    role: data.users[index].role,\r\n                    email: data.users[index].email,\r\n                    createdAt: data.users[index].createdAt\r\n                };\r\n            }\r\n    \r\n            this.getAllCollections();\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ \r\n            [event.target.name]: event.target.value \r\n        });\r\n    };\r\n\r\n    // Ask user to select patient assigned to them and a booklet,\r\n    // then create a new \"membersurvey\" document in the database\r\n    // and display the survey with the ability to fill it out.\r\n    handleStartCollection = () =>\r\n    {\r\n        let { appState } = this.props;\r\n        let { patientID } = this.state;\r\n\r\n        if(patientID === \"\")\r\n        {\r\n            this.setState({\r\n                startError: \"Please select a patient.\",\r\n                render: true\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        var data = {\r\n            createdBy: appState._id,\r\n            modifiedBy: appState._id,\r\n            patientId: patientID\r\n        }\r\n\r\n        this.setState({\r\n            startError: \"\",\r\n            starting: true\r\n        });\r\n\r\n        post(\"collections/\",  appState.token, data, (error, response) => \r\n        {\r\n            if(error)\r\n            {\r\n                this.setState({\r\n                    startError: error.message,\r\n                    starting: false\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(response.status === 201)\r\n                {\r\n                    // const memberSurveyID = response.data.memberSurvey._id;\r\n\r\n                    this.setState({\r\n                        startError: \"\",\r\n                        starting: false,\r\n                        redirect: true,\r\n                        redirectTo: \"/administration/booklets/management\"\r\n                    });\r\n\r\n                    this.setState({ redirect: this.state.redirectTo });\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        startError: \"Unable to start the collection. Please try again later.\",\r\n                        starting: false\r\n                    });\r\n                }\r\n            }\r\n        });   \r\n    }\r\n\r\n    createRow = (_id, name) =>\r\n    {\r\n        return { _id, name }\r\n    }\r\n\r\n    renderSelect = () =>\r\n    {\r\n        let { classes } = this.props;\r\n        var { patientID } = this.state;\r\n\r\n        var patientRows = [];\r\n\r\n        for (let index = 0; index < this.users.length; index++) \r\n        {\r\n            patientRows.push(this.createRow(this.users.library[index]._id, this.users.library[index].name));\r\n        }\r\n\r\n        return(\r\n            <form className={classes.root} autoComplete=\"off\">\r\n                <FormControl className={classes.formControl} fullWidth>\r\n                    <InputLabel htmlFor=\"selectPatient\">Members</InputLabel>\r\n                    <Select\r\n                        value={patientID}\r\n                        onChange={this.handleChange}\r\n                        inputProps={{\r\n                            name: 'patientID',\r\n                            id: 'selectPatient',\r\n                        }}\r\n                    >\r\n                        <MenuItem value={\"\"}>\r\n                            <em>Select Member</em>\r\n                        </MenuItem>\r\n                        {\r\n                            patientRows.map((row, index) => \r\n                            {\r\n                                return(\r\n                                    <MenuItem value={row._id} key={index}>\r\n                                        {row.name}\r\n                                    </MenuItem>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n            </form>\r\n        );\r\n    }\r\n\r\n\trender()\r\n\t{\r\n        let { classes } = this.props;\r\n        let { assigning, loadError, render, redirect, redirectTo, startError } = this.state;\r\n\r\n        if(redirect)\r\n        {\r\n            return(<Redirect to={redirectTo} />);\r\n        }\r\n\r\n        if(render)\r\n        {\r\n            if(this.users.length === 0)\r\n            {\r\n                return(\r\n                    <Card className={classes.card}>\r\n                        <CardContent>\r\n                            <Typography component=\"p\" variant=\"h5\" className={classes.title}>\r\n                                Start a Collection\r\n                            </Typography>\r\n                            {loadError !== \"\" &&\r\n                                <StatusMessage color={classes.error}>\r\n                                    {loadError}\r\n                                </StatusMessage>\r\n                            }\r\n                        </CardContent>\r\n                    </Card>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    <Grid container\r\n                        className={classes.rootGrid}\r\n                        direction=\"row\"\r\n                        justifyContent=\"flex-start\"\r\n                        alignItems=\"stretch\"\r\n                        spacing={2}\r\n                    >\r\n                        <Grid item xs={3}>\r\n                            <Box mx={1} my={1}>\r\n                                <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={2}>\r\n                                    <Grid item>\r\n                                        <Ballot color=\"primary\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <Typography variant=\"h5\" color=\"secondary\" align=\"left\" gutterBottom={false}>\r\n                                            Start a Collection\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>                \r\n                            </Box> \r\n                        </Grid>\r\n                        <Grid item xs={9}>\r\n                            <Box mx={1} my={1}>\r\n                                {/* <AlertMessage alert={alert} setParentAlert={setAlert} /> */}\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Card raised={true}>\r\n                                <CardContent>\r\n                                <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction=\"column\"\r\n                                            justifyContent=\"flex-start\"\r\n                                            alignItems=\"stretch\"\r\n                                            spacing={1}\r\n                                        >\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"subtitle2\" component=\"h2\">\r\n                                                    Start a Collection\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"body2\" component=\"h2\">\r\n                                                    Select a member to begin a collection of public chapter templates.  If you wish to continue a fillable chapter within a collection that has already been created, navigate to your members, click on the member profile and continue one of the 'In Progress' chapters.\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box> \r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Card raised={true}>\r\n                                <CardContent>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction=\"column\"\r\n                                            justifyContent=\"flex-start\"\r\n                                            alignItems=\"stretch\"\r\n                                            spacing={1}\r\n                                        >\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"subtitle2\" component=\"h2\">\r\n                                                    Select your assigned Member &#38; Chapter\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                {this.renderSelect()}\r\n                                                {startError !== \"\" &&\r\n                                                    <Typography variant=\"body2\" color=\"error\" component=\"h2\">\r\n                                                        {startError}\r\n                                                    </Typography>\r\n                                                }\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <div className={classes.alignLeftSpacer}>\r\n                                        { assigning ? <CircularProgress className={classes.spinner}/> :\r\n                                            <Tooltip title=\"Start a Chapter\">\r\n                                                <Button size=\"small\" color=\"primary\" variant=\"contained\" startIcon={<Description />} onClick={this.handleStartCollection}>\r\n                                                    Start\r\n                                                </Button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                    </div>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <CircularProgress />\r\n            );\r\n        }\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(StartACollection);","// ============================================\r\n// Sends a PATCH request to server using axios\r\n// in order to modify already existing data\r\n// ============================================\r\nimport axios from 'axios';\r\n\r\nfunction _patch(url, token, data, callback)\r\n{\r\n    axios({\r\n        method: 'patch',\r\n        url: '/api/' + url,\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + token\r\n        },\r\n        data: JSON.stringify(data),\r\n        timeout: 5000\r\n    })\r\n    .then(response => {\r\n        callback(null, response);\r\n    })\r\n    .catch(error => {\r\n        callback(error, null);\r\n    });\r\n}\r\n\r\nexport default _patch;","const calculateCompleteness = (survey) => {\r\n\r\n    let totalSurveyItems = survey.getAllQuestions().length;\r\n    let totalQuestions = 0; \r\n    let finishedQuestions = 0;\r\n    let partiallyFinishedQuestions = 0;\r\n\r\n    survey.getAllQuestions().forEach( (question) => {\r\n        if(question.getType() != 'html' && !question.isReadOnly)    // SurveyJS Question types; we currently use HTML for Titles / Sub titles\r\n        {\r\n            totalQuestions += 1;\r\n\r\n            if(question.getType() == 'matrix')\r\n            {\r\n                // console.log('Matrix Item: ' + question.getType());\r\n                // console.log(question);\r\n\r\n                if(question.hasOwnProperty('propertyHash') && question.propertyHash)\r\n                {\r\n                    if(question.propertyHash.hasOwnProperty('rows') && question.propertyHash.rows && Array.isArray(question.propertyHash.rows)\r\n                        && question.propertyHash.hasOwnProperty('value') && question.propertyHash.value)\r\n                    {\r\n                        let subQuestionsLength = question.propertyHash.rows.length;\r\n                        let answeredSubQuestions = Object.keys(question.propertyHash.value).length;\r\n                        \r\n                        // ============= Check correlating Row Question to Answer =============\r\n\r\n                        // question.propertyHash.rows.forEach( (subQuestion) => {\r\n\r\n                        //     if(subQuestion.hasOwnProperty('propertyHash') && question.propertyHash)\r\n                        //     {\r\n                        //         if(subQuestion.propertyHash.hasOwnProperty('value') && subQuestion.propertyHash.value)\r\n                        //         {\r\n                        //             if(String(subQuestion.propertyHash.value) in question.propertyHash.value)\r\n                        //             {\r\n                        //                 console.log(\"-> Answered Sub Matrix Item\");\r\n                        //             }\r\n                        //             else\r\n                        //             {\r\n                        //                 console.log(\"-> Un-Answered Sub Matrix Item\");\r\n                        //             }\r\n                        //         }\r\n                        //     }\r\n                            \r\n                        // });\r\n\r\n                        if(answeredSubQuestions < subQuestionsLength)\r\n                        {\r\n                            // console.log('Partially-Completed Matrix Question');\r\n                            // console.log(question);\r\n                            partiallyFinishedQuestions += 1;\r\n                        }\r\n                        else if(answeredSubQuestions == subQuestionsLength)\r\n                        {\r\n                            // console.log('Finished Multiple Question Matrix');\r\n                            finishedQuestions += 1;\r\n                        }\r\n                    }    \r\n                }\r\n                \r\n            }\r\n            else if(question.getType() == 'matrixdynamic')\r\n            {\r\n                // console.log('Matrix Dynamic Item: ' + question.getType());\r\n                // console.log(question);\r\n\r\n                if(question.hasOwnProperty('propertyHash') && question.propertyHash)\r\n                {\r\n                    if(question.propertyHash.hasOwnProperty('rows') && question.propertyHash.rows && Array.isArray(question.propertyHash.rows)\r\n                        && question.propertyHash.hasOwnProperty('value') && question.propertyHash.value\r\n                        && question.propertyHash.hasOwnProperty('columns') && question.propertyHash.columns)\r\n                    {\r\n                        // Odd behaviour from dynamic questions\r\n                        let subQuestionCellLength = question.propertyHash.columns.length;\r\n                        let subQuestionsLength = question.propertyHash.rowCount;\r\n                        let answeredSubQuestions = 0;\r\n\r\n                        //Has an available row\r\n                        if(subQuestionsLength > 0)\r\n                        {\r\n                             // This calculation is based on if row fully fills cells within it's row. Does not take into account cell is required\r\n                            question.propertyHash.value.forEach(row => {\r\n                                if(Object.keys(row).length == subQuestionCellLength)\r\n                                    answeredSubQuestions += 1;\r\n                            });\r\n\r\n                            if(answeredSubQuestions < subQuestionsLength)\r\n                            {\r\n                                // console.log('Partially-Completed Dynamic Matrix Question');\r\n                                // console.log(question);\r\n                                partiallyFinishedQuestions += 1;\r\n                            }\r\n                            else if(answeredSubQuestions == subQuestionsLength)\r\n                            {\r\n                                // console.log('Finished Dynamic Matrix Question');\r\n                                finishedQuestions += 1;\r\n                            }\r\n                        }\r\n                        else\r\n                        {\r\n                            // console.log('Finished Dynamic Matrix Question');\r\n                            finishedQuestions += 1;\r\n                        }\r\n                       \r\n                    }    \r\n                }\r\n                \r\n            }\r\n            else if(question.getType() == 'multipletext')\r\n            {\r\n                // console.log('Multiple Text Item: ' + question.getType());\r\n                // console.log(question);\r\n\r\n                if(question.hasOwnProperty('propertyHash') && question.propertyHash)\r\n                {\r\n                    if(question.propertyHash.hasOwnProperty('items') && question.propertyHash.items && Array.isArray(question.propertyHash.items)\r\n                        && question.propertyHash.hasOwnProperty('value') && question.propertyHash.value)\r\n                    {\r\n                        let subQuestionsLength = question.propertyHash.items.length;\r\n                        let answeredSubQuestions = Object.keys(question.propertyHash.value).length;\r\n\r\n                        if(answeredSubQuestions < subQuestionsLength)\r\n                        {\r\n                            // console.log('Partially-Completed Multiple Text Question');\r\n                            // console.log(question);\r\n                            partiallyFinishedQuestions += 1;\r\n                        }\r\n                        else if(answeredSubQuestions == subQuestionsLength)\r\n                        {\r\n                            // console.log('Finished Dynamic Matrix Question');\r\n                            finishedQuestions += 1;\r\n                        }\r\n                    }    \r\n                }\r\n                \r\n            }\r\n            else if(question.getType() == 'checkbox')\r\n            {\r\n                // console.log('Checkbox Item: ' + question.getType());\r\n                // console.log(question);\r\n\r\n                if(question.hasOwnProperty('propertyHash') && question.propertyHash)\r\n                {\r\n                    if(question.propertyHash.hasOwnProperty('value') && question.propertyHash.value && Array.isArray(question.propertyHash.value))\r\n                    {\r\n                            if(question.propertyHash.value.length > 0)\r\n                            {\r\n                                // console.log('Finished Checkbox Question');\r\n                                finishedQuestions += 1;\r\n                            }\r\n                            else\r\n                            {\r\n                                // console.log('Partially-Completed Checkbox Question');\r\n                                // console.log(question);\r\n                            }\r\n                    }      \r\n                }\r\n            }\r\n            else if(question.getType() == 'text')\r\n            {\r\n                // console.log('Text Item: ' + question.getType());\r\n                // console.log(question);\r\n\r\n                if(question.hasOwnProperty('propertyHash') && question.propertyHash)\r\n                {\r\n                    if(question.propertyHash.hasOwnProperty('value') && question.propertyHash.value)\r\n                    {\r\n                            if(/\\S/.test(String(question.propertyHash.value)))\r\n                            {\r\n                                // console.log('Finished Text Question');\r\n                                finishedQuestions += 1;\r\n                            }\r\n                            else\r\n                            {\r\n                                // console.log('Partially-Completed Text Question');\r\n                                // console.log(question);\r\n                            }\r\n                    }      \r\n                }\r\n            }\r\n            else if(question.getType() == 'radiogroup')\r\n            {\r\n                // console.log('Radio Item: ' + question.getType());\r\n                // console.log(question);\r\n\r\n                if(question.hasOwnProperty('propertyHash') && question.propertyHash)\r\n                {\r\n                    if(question.propertyHash.hasOwnProperty('value') && question.propertyHash.value)\r\n                    {\r\n                            if(String(question.propertyHash.value))\r\n                            {\r\n                                // console.log('Finished Radio Question');\r\n                                finishedQuestions += 1;\r\n                            }\r\n                            else\r\n                            {\r\n                                // console.log('Partially-Completed Radio Group Question');\r\n                                // console.log(question);\r\n                            }\r\n                    }      \r\n                }\r\n            }\r\n            else if(question.getType() == 'rating')\r\n            {\r\n                // console.log('Rating Item: ' + question.getType());\r\n                // console.log(question);\r\n\r\n                if(question.hasOwnProperty('propertyHash') && question.propertyHash)\r\n                {\r\n                    if(question.propertyHash.hasOwnProperty('value') && question.propertyHash.value)\r\n                    {\r\n                            if(parseInt(question.propertyHash.value))\r\n                            {\r\n                                // console.log('Finished Rating Question');\r\n                                finishedQuestions += 1;\r\n                            }\r\n                            else\r\n                            {\r\n                                // console.log('Partially-Completed Rating Question');\r\n                                // console.log(question);\r\n                            }\r\n                    }      \r\n                }\r\n            }\r\n            else if(question.getType() == 'nouislider')\r\n            {\r\n                // console.log('NoUiSlider Item: ' + question.getType());\r\n                // console.log(question);\r\n\r\n                if(question.hasOwnProperty('propertyHash') && question.propertyHash)\r\n                {\r\n                    if(question.propertyHash.hasOwnProperty('value') && question.propertyHash.value)\r\n                    {\r\n                            if(parseInt(question.propertyHash.value))\r\n                            {\r\n                                // console.log('Finished Rating Question');\r\n                                finishedQuestions += 1;\r\n                            }\r\n                            else\r\n                            {\r\n                                // console.log('Partially-Completed Rating Question');\r\n                                // console.log(question);\r\n                            }\r\n                    }      \r\n                }\r\n            }\r\n            else\r\n            {\r\n                // console.log('Other Non HTML Item that was missed: ' + question.getType());\r\n                // console.log(question);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            // console.log('Title or Miscellaneous Item: ' + question.getType());\r\n            // console.log(question);\r\n        }\r\n    });\r\n\r\n    // console.log( 'Total Survey Items: ' + totalSurveyItems);\r\n    // console.log( 'Total Survey Questions: ' + totalQuestions);\r\n    // console.log( 'Finished Survey Questions: ' + finishedQuestions);\r\n    // console.log( 'Partially finished Survey Questions: ' + partiallyFinishedQuestions);\r\n\r\n    let completePercentage = Math.round(((finishedQuestions/totalQuestions)*100) * 100)/100;\r\n\r\n    // console.log( 'Complete Percentage: ' + completePercentage);\r\n    \r\n    if(!completePercentage)\r\n        return 0;\r\n    else\r\n        return completePercentage;\r\n\r\n};\r\n\r\nexport default calculateCompleteness;","// ================================================\r\n// Code associated with starting a booklet to be\r\n// filled out. Requires logged in user to have a\r\n// patient assigned to them and for a booklet to\r\n// exist within the database.\r\n// ================================================\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// ==================== Helpers ====================\r\nimport get from '../../helpers/common/get';\r\nimport patch from '../../helpers/common/patch';\r\n\r\nimport calculateCompleteness from '../../helpers/reports/reports';\r\n\r\n// ==================== Components ====================\r\nimport StatusMessage from '../../components/StatusMessage';\r\n\r\n// ==================== MUI ====================\r\nimport { Grid, Box } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport { CardActions } from '@material-ui/core';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\n\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos'\r\n\r\n// ==================== SurveyJS ====================\r\nimport * as Survey from \"survey-react\";\r\nimport * as SurveyPDF from 'survey-pdf';\r\nimport \"survey-react/survey.css\";\r\n\r\n// ==================== Styles ====================\r\nconst styles = theme => ({\r\n    title: theme.title,\r\n    card: theme.card,\r\n    success: theme.success,\r\n    error: theme.error,\r\n    alignLeftSpacer: theme.alignLeftSpacer,\r\n    alignLeftSpacerRoot: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    buttonMargin: {\r\n        marginLeft: 5\r\n    }\r\n});\r\n\r\nclass Booklet extends Component \r\n{\r\n\tconstructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loadError: \"\",\r\n            saveError: \"\",\r\n            saveSuccess: \"\",\r\n            surveyApproved: false,\r\n\t\t\trender: false,\r\n            currentSurveyJSON: null,\r\n            currentSurveyResponseJSON: null\r\n        };\r\n    }\r\n\r\n    componentDidMount = () =>\r\n    {\r\n        this.surveyJSON = {};\r\n        this.responseJSON = {};\r\n\r\n        setTimeout(() => {\r\n            this.props.CheckAuthenticationValidity((tokenValid) => \r\n            {\r\n                if(tokenValid)\r\n                {\r\n                    this.loadSurvey();\r\n                }\r\n            });\r\n        }, 200);\r\n        \r\n        Survey.StylesManager.applyTheme('default');\r\n    }\r\n\r\n    handleBackToMemberButton = () =>\r\n    {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    // Loads an existing survey from the database\r\n    loadSurvey = () =>\r\n    {\r\n        let { appState } = this.props;\r\n\r\n        const memberSurveyID = this.props.match.params.memberSurveyID;\r\n\r\n        if(memberSurveyID != null)\r\n        {\r\n            get(\"membersurveys/\" + memberSurveyID, appState.token, (error, response) => \r\n            {\r\n                if(error)\r\n                {\r\n                    this.setState({\r\n                        loadError: \"Unable to load the survey.  Please make sure your Booklet ID is correct and you have proper permissions.\",\r\n                        render: true\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    if(response.status === 200 || response.status === 304)\r\n                    {\r\n                        var booklet = response.data.memberSurvey;\r\n                        \r\n                        this.setState({\r\n                            currentSurveyJSON: booklet.surveyJSON,\r\n                            currentSurveyResponseJSON: booklet.responseJSON\r\n                        });\r\n\r\n                        this.surveyJSON = JSON.parse(booklet.surveyJSON);\r\n                        this.responseJSON = JSON.parse(booklet.responseJSON);\r\n\r\n                        window.survey = new Survey.Model(this.surveyJSON);\r\n                        window.survey.showPageNumbers = true;\r\n                        window.survey.showNavigationButtons = true;\r\n                        window.survey.showPageTitles = true;\r\n                        window.survey.showTitle = true;\r\n                        window.survey.showPrevButton = true;\r\n                        window.survey.data = this.responseJSON;\r\n                        window.survey.sendResultOnPageNext = true;\r\n                        window.survey.onComplete.add((result) => {\r\n                            this.saveSurvey(result);\r\n                        });\r\n                        window.survey.onPartialSend.add((result) => {\r\n                            this.saveSurvey(result);\r\n                        });\r\n\r\n                        this.setState({\r\n                            loadError: \"\",\r\n                            surveyApproved: booklet.approved,\r\n                            render: true\r\n                        });\r\n                    }\r\n                    else\r\n                    {\r\n                        this.setState({\r\n                            loadError: \"Unable to load the survey.  Please make sure your Booklet ID is correct and you have proper permissions.\",\r\n                            render: true\r\n                        });\r\n                    }\r\n                }\r\n\r\n                this.removeMessages();\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                loadError: \"Unable to load the survey.  Please make sure your Booklet ID is correct and you have proper permissions.\",\r\n                render: true\r\n            });\r\n\r\n            this.removeMessages();\r\n        }\r\n    }\r\n\r\n    // Saves the current state of the survey into the \"membersurveys\" collection in database\r\n    saveSurvey = (survey) =>\r\n    {\r\n        let { appState } = this.props;\r\n\r\n        const memberSurveyID = this.props.match.params.memberSurveyID;\r\n\r\n        var data = {\r\n            responseJSON: JSON.stringify(survey.data),\r\n            completeStatus: calculateCompleteness(survey)\r\n        };\r\n\r\n        // console.log(data);\r\n\r\n        this.setState({\r\n            currentSurveyResponseJSON: JSON.stringify(survey.data)\r\n        });\r\n\r\n        patch(\"membersurveys/\" + memberSurveyID, appState.token, data, (error, response) => \r\n        {\r\n            if(error)\r\n            {\r\n                this.setState({\r\n                    saveError: \"Cannot save survey.  Please try agian later.\",\r\n                    saveSuccess: \"\",\r\n                    render: true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(response.status === 200 || response.status === 304)\r\n                {\r\n                    this.setState({\r\n                        saveError: \"\",\r\n                        saveSuccess: \"Survey has been saved.\",\r\n                        render: true\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        saveError: \"Cannot save survey.  Please try agian later.\",\r\n                        saveSuccess: \"\",\r\n                        render: true\r\n                    });\r\n                }\r\n            }\r\n\r\n            this.removeMessages();\r\n        });\r\n    }\r\n\r\n    // Changes approval state for a completed survey by an administrator\r\n    approveSurvey = () =>\r\n    {\r\n        let { surveyApproved } = this.state;\r\n        let { appState } = this.props;\r\n        \r\n        const memberSurveyID = this.props.match.params.memberSurveyID;\r\n\r\n        if(surveyApproved)\r\n        {\r\n            return;\r\n        }\r\n\r\n        var data = {\r\n            approved: true\r\n        };\r\n\r\n        patch(\"membersurveys/\" + memberSurveyID, appState.token, data, (error, response) => \r\n        {\r\n            if(error)\r\n            {\r\n                this.setState({\r\n                    saveError: \"Cannot approve survey.  Please try agian later.\",\r\n                    saveSuccess: \"\",\r\n                    render: true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(response.status === 200 || response.status === 304)\r\n                {\r\n                    this.setState({\r\n                        saveError: \"\",\r\n                        saveSuccess: \"This survey has been approved.\",\r\n                        surveyApproved: true,\r\n                        render: true\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        saveError: \"Cannot approve survey.  Please try agian later.\",\r\n                        saveSuccess: \"\",\r\n                        render: true\r\n                    });\r\n                }\r\n            }\r\n\r\n            this.removeMessages();\r\n        });\r\n    }\r\n\r\n    // Exports saved/completed survey to be downloaded into a PDF\r\n    exportToPDF = () =>\r\n    {\r\n        // const memberSurveyID = this.props.match.params.memberSurveyID;\r\n\r\n        // window.exportWindow = window.open(\"/pdf/\" + memberSurveyID, \"_blank\", \"toolbar=no,scrollbars=yes,resizable=no,top=20,width=850,height=900\");\r\n\r\n        let surveyJSON = \"\";\r\n        let responseJSON = \"{}\";\r\n        \r\n        if(this.state.currentSurveyJSON)\r\n        {\r\n            surveyJSON = JSON.parse(this.state.currentSurveyJSON);\r\n        }\r\n        \r\n        if(this.state.currentSurveyResponseJSON)\r\n        {\r\n            responseJSON = JSON.parse(this.state.currentSurveyResponseJSON);\r\n        }\r\n\r\n        const pdfOptions = {\r\n            format: [210, 297],\r\n            fontSize: 14,\r\n            margins: {\r\n                left: 10,\r\n                right: 10,\r\n                top: 18,\r\n                bot: 10\r\n            }\r\n        };\r\n\r\n        let surveyPDF = new SurveyPDF.SurveyPDF(surveyJSON, pdfOptions);\r\n        \r\n        surveyPDF.data = responseJSON;\r\n\r\n        let name = this.props.match.url.replace(\"/\", \"-\");\r\n        surveyPDF.save(name + \".pdf\");\r\n    }    \r\n\r\n    removeMessages = () =>\r\n    {\r\n        setTimeout(() => {\r\n            this.setState({\r\n                saveError: \"\",\r\n                saveSuccess: \"\"\r\n            });\r\n        }, 7500);\r\n    }\r\n\r\n    render()\r\n    {\r\n        let { appState, classes } = this.props;\r\n        let { loadError, saveError, saveSuccess, render, surveyApproved } = this.state;\r\n        \r\n        var canApprove = true;\r\n        if(appState.role === \"Patient\") { \r\n            canApprove = false; //Summer 2021: block approval by patient users\r\n        }\r\n\r\n        var tooltip = \"This survey has already been approved.\";\r\n\r\n        if(appState.role === \"Volunteer\")\r\n        {\r\n            canApprove = false;\r\n        }\r\n\r\n        if(!surveyApproved)\r\n        {\r\n            tooltip = \"This survey is pending approval.\";\r\n        }\r\n\r\n        if(window.survey != null)\r\n        {\r\n            return(\r\n                <div>\r\n                    { render ?\r\n                       <Grid container\r\n                            className={classes.rootGrid}\r\n                            direction=\"row\"\r\n                            justifyContent=\"flex-start\"\r\n                            alignItems=\"stretch\"\r\n                            spacing={2}\r\n                        >\r\n                            <Grid item xs={3}>\r\n                                <Box mx={1} my={1}>\r\n                                    <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={2}>\r\n                                        <Grid item>\r\n                                            <ListAltIcon color=\"primary\"/>\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                            <Typography variant=\"h5\" color=\"secondary\" align=\"left\" gutterBottom={false}>\r\n                                                Completing Chapter\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Button\r\n                                                color=\"default\"\r\n                                                startIcon={<ArrowBackIosIcon />}\r\n                                                onClick={this.handleBackToMemberButton}\r\n                                            >\r\n                                                Back to Member\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>                \r\n                                </Box> \r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <Box mx={1} my={1}>\r\n                                    {/* <AlertMessage alert={alert} setParentAlert={setAlert} /> */}\r\n                                    {saveError !== \"\" &&\r\n                                        <StatusMessage>\r\n                                            {saveError}\r\n                                        </StatusMessage>\r\n                                    }\r\n                                    {saveSuccess !== \"\" &&\r\n                                        <StatusMessage>\r\n                                            {saveSuccess}\r\n                                        </StatusMessage>\r\n                                    }\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={12} container direction=\"column-reverse\" justifyContent=\"flex-start\" alignItems=\"stretch\">\r\n                                <Card raised={true}>\r\n                                    <CardContent>\r\n                                        <Box mx={1} my={1} boxShadow={0}>\r\n                                            <div className={classes.alignLeftSpacer}>\r\n                                                {canApprove &&\r\n                                                    <Tooltip title={tooltip} placement=\"left\">\r\n                                                        <Button \r\n                                                            className={classes.buttonMargin}\r\n                                                            size=\"small\" \r\n                                                            variant=\"contained\" \r\n                                                            color=\"secondary\"\r\n                                                            onClick={this.approveSurvey}\r\n                                                        >\r\n                                                            Approve this Chapter\r\n                                                        </Button>\r\n                                                    </Tooltip>\r\n                                                }\r\n                                                <Tooltip title=\"View Profile\">\r\n                                                    <Button size=\"small\" color=\"primary\" variant=\"contained\" startIcon={<SystemUpdateAltIcon />} onClick={this.exportToPDF}>\r\n                                                        Export Pdf\r\n                                                    </Button>\r\n                                                </Tooltip>\r\n                                            </div>\r\n                                        </Box> \r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={12} container direction=\"column-reverse\" justifyContent=\"flex-start\" alignItems=\"stretch\">\r\n                                <Card raised={true}>\r\n                                    <CardContent>\r\n                                        <Box mx={1} my={1} boxShadow={0}>\r\n                                            <Survey.Survey \r\n                                                model={window.survey}\r\n                                            />\r\n                                        </Box> \r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>           \r\n                        </Grid>\r\n                    :\r\n                        <CircularProgress />\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <div>\r\n                    { render &&\r\n                        <Card>\r\n                            {loadError !== \"\" &&\r\n                                <StatusMessage color={classes.error}>\r\n                                    {loadError}\r\n                                </StatusMessage>\r\n                            }\r\n                        </Card>\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nBooklet.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Booklet);","export default class AlertType {\r\n\r\n    constructor(message, severity) {\r\n        this.severity = severity || 'info'; //Based on Material-ui Alert Tag severities: error / warning / info / success\r\n        this.message = message || '';       //String message you want the user to see\r\n    }\r\n\r\n}","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../helpers/models/AlertType';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// ==================== MUI Icons ====================\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst AlertMessage = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { alert, setParentAlert } = props;\r\n\r\n        // show collapse Tag that controls the viewing of the alert\r\n        const [show, setShow] = useState(false);\r\n\r\n\r\n    // Functions ===\r\n\r\n        const closeHandler = useCallback(() => {\r\n            setShow(false);\r\n        }, [ ]);\r\n\r\n    // Hooks ===\r\n\r\n        // First Render only because of the [ ] empty array tracking with the useEffect\r\n        useEffect( () =>\r\n        {       \r\n                const collapseHandler = () => {\r\n                    if(alert !== null) {\r\n                        if(alert.message !== '') {\r\n                            setShow(true);\r\n                        }\r\n                        else {\r\n                            setShow(false);\r\n                        }\r\n                    }\r\n                    else {\r\n                        setShow(false);\r\n                    }\r\n                };\r\n\r\n                setShow(false);\r\n\r\n                let timer = setTimeout( () => \r\n                {\r\n                    collapseHandler();\r\n                }, 400);\r\n\r\n                return () => \r\n                {\r\n                    clearTimeout(timer); //This return function covers for when your component unmounts, clearing the timeout\r\n                }    \r\n                \r\n        }, [ alert ]);\r\n\r\n        useEffect( () => {\r\n\r\n            if(show)\r\n            {\r\n                let timer = setTimeout( () => \r\n                {\r\n                    closeHandler();\r\n                }, 5000);\r\n\r\n                return () => \r\n                {\r\n                    clearTimeout(timer); //This return function covers for when your component unmounts, clearing the timeout\r\n                }\r\n            }\r\n        }, [ show, closeHandler ]);\r\n\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                <Collapse in={show}>\r\n                    {alert.message !== ''? (\r\n                        <Alert\r\n                            severity={alert.severity}\r\n                            action={\r\n                                <IconButton\r\n                                    aria-label=\"close\"\r\n                                    color=\"inherit\"\r\n                                    size=\"small\"\r\n                                    onClick={() => {\r\n                                        closeHandler();\r\n                                    }}\r\n                                    onClose={() => { setParentAlert(new AlertType('', 'success')); }}\r\n                                >\r\n                                    <CloseIcon fontSize=\"inherit\" />\r\n                                </IconButton>\r\n                            }\r\n                        >\r\n                            {alert.message}\r\n                        </Alert>\r\n                    ) : (\r\n                        null\r\n                    )}\r\n                </Collapse>\r\n            </>\r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nAlertMessage.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    alert: PropTypes.instanceOf(AlertType).isRequired,\r\n    setParentAlert: PropTypes.func.isRequired\r\n}\r\n\r\nAlertMessage.defaultProps = \r\n{\r\n    alert: {},\r\n    setParentAlert: () => {}\r\n}\r\n\r\nexport default AlertMessage;  // You can even shorthand this line by adding this at the function [Component] declaration stage","import React, {Component} from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default class LineChart extends Component {\r\n\r\n\tchartRef = React.createRef();\r\n\r\n\tfindValue = (str) =>{\r\n\t\tconsole.log(str);\r\n\t\tif(str == \"No Problem\") {return 0}\r\n\t\tif(str == \"Slight Problem\") {return 1;}\r\n\t\tif(str == \"Moderate Problem\") {return 2;}\r\n\t\tif(str == \"Severe Problem\") {return 3;}\r\n\t}\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\t//find numeric value for walking\r\n\t\t\twalking: this.findValue(this.props.walking),\r\n\t\t\t//find numeric value for personal care\r\n\t\t\tcare: this.findValue(this.props.care),\r\n\t\t\t//find numeric value for usual activities\r\n\t\t\tactivities: this.findValue(this.props.usual),\r\n\t\t\t//find numeric value for pain/discomfort\r\n\t\t\tpain: this.findValue(this.props.pain),\r\n\t\t\t//find numeric value for anxiety/depression\r\n\t\t\tanxiety: this.findValue(this.props.anxious)\r\n\t\t}\r\n\t\t// console.log(this.state.care);\r\n\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst ctx = this.chartRef.current.getContext(\"2d\");\r\n\t\t\r\n\t\tnew Chart(ctx, {\r\n\t\t\ttype: \"bar\",\r\n\t\t\toptions: {\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\ttext: \"Levels of Difficulties with various activities\"\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tscales: {\r\n\t\t\t\t\ty: {\r\n\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\tmax: 3\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdata: {\r\n\t\t\t\tlabels: [\"Walking around\", \"Personal Care\", \"Usual Activities\", \"Pain/Discomfort\", \"Anxiety/Depression\"],\r\n\t\t\t\tdatasets: [{ \r\n\t\t\t\t\tdata: [this.state.walking,this.state.care,this.state.activities,this.state.pain,this.state.anxiety],\r\n\t\t\t\t\tlabel: \"I have problems with\",\r\n\t\t\t\t\tborderColor: \"#3e95cd\",\r\n\t\t\t\t\tbackgroundColor: \"#e91e62\",\r\n\t\t\t\t\tfill: false,\r\n\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{\"width\" : \"50%\"}}>\r\n\t\t\t\t<canvas\r\n\t\t\t\tid=\"myChart\"\r\n\t\t\t\tref={this.chartRef}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\nexport default class Interests extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Typography variant=\"h6\" color=\"secondary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\tInterests\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Box m={1} mb={2}>\r\n\t\t\t\t\t{this.props.reports.activities[this.props.collection] !== 999 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Typography variant=\"subtitle1\" color=\"textSecondary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tEnjoys the following activities:\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography display=\"initial\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t\t\t{this.props.reports.activities[this.props.collection].map((item, index) => \r\n\t\t\t\t\t\t\t\t<li key={`activities_${index}`}>\r\n\t\t\t\t\t\t\t\t\t{item} \r\n\t\t\t\t\t\t\t\t</li>)}\r\n\t\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.meaningful_activities[this.props.collection] !== 999 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Typography variant=\"subtitle1\" color=\"textSecondary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tMost meaningful activities:\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography display=\"initial\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t\t\t{this.props.reports.meaningful_activities[this.props.collection].map((item, index) => \r\n\t\t\t\t\t\t\t\t<li key={`activities_meaningful${index}`}>\r\n\t\t\t\t\t\t\t\t\t{item} \r\n\t\t\t\t\t\t\t\t</li>)}\r\n\t\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.FCP_STRINGS_COMB[this.props.collection] !== 999 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Typography variant=\"subtitle1\" color=\"textSecondary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tI would like to do more:\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography display=\"initial\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t\t\t{this.props.reports.FCP_STRINGS_COMB[this.props.collection].map((item, index) => \r\n\t\t\t\t\t\t\t\t<li key={`activities_do_more_${index}`}>\r\n\t\t\t\t\t\t\t\t\t{item} \r\n\t\t\t\t\t\t\t\t</li>)}\r\n\t\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.challenging_activities[this.props.collection] !== 999 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Typography variant=\"subtitle1\" color=\"textSecondary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tChallenges include:\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography display=\"initial\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t\t\t{this.props.reports.challenging_activities[this.props.collection].map((item, index) => \r\n\t\t\t\t\t\t\t\t<li key={`activities_challenges_${index}`}>\r\n\t\t\t\t\t\t\t\t\t{item} \r\n\t\t\t\t\t\t\t\t</li>)}\r\n\t\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Box>\r\n\t\t\t</>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default class FamilyFriendsNeighbours extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Typography variant=\"h6\" color=\"secondary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\tSocial Contact\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Box m={1} mb={2}>\r\n\t\t\t\t\t{this.props.reports.household_size[this.props.collection] !== 999 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\tHousehold size:&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t{this.props.reports.household_size[this.props.collection]}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.total_children[this.props.collection] !== 999 && this.props.reports.total_relatives[this.props.collection] !== 999 && this.props.reports.total_close_friends[this.props.collection] !== 999 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\tI have:&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t{this.props.reports.total_children[this.props.collection]}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body2\" component=\"div\" color=\"textSecondary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t&nbsp;children,&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t{this.props.reports.total_relatives[this.props.collection]}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body2\" component=\"div\" color=\"textSecondary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t&nbsp;relatives, and&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t\t{this.props.reports.total_close_friends[this.props.collection]}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body2\" component=\"div\" color=\"textSecondary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t&nbsp;close friends\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.total_well_known_neighbours[this.props.collection] !== 999 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\tI know:&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t{this.props.reports.total_well_known_neighbours[this.props.collection]}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body2\" component=\"div\" color=\"textSecondary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t&nbsp;neighbours well\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.frequency_of_contact_family[this.props.collection] !== 999 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t👪 I see my family&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t{this.props.reports.frequency_of_contact_family[this.props.collection]}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.frequency_of_contact_friends[this.props.collection] !== 999 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t🧓 I see my friends&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t{this.props.reports.frequency_of_contact_friends[this.props.collection]}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.frequency_of_contact_neighbours[this.props.collection] !== 999 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t🏡 I see my neighbours&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t{this.props.reports.frequency_of_contact_neighbours[this.props.collection]}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Box>\r\n\t\t\t</>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default class CommunityParticipation extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\t\t\r\n\t\t\t\t<Typography variant=\"h6\" color=\"secondary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\tCommunity Participation\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Box m={1} mb={2}>\r\n\t\t\t\t\t{this.props.reports.frequency_of_participation_religion[this.props.collection] !== 999 &&\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t⛪️ Religion&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t{this.props.reports.frequency_of_participation_religion[this.props.collection]}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.frequency_of_participation_recreation[this.props.collection] !== 999 &&\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t🎣 Recreation/hobby&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t{this.props.reports.frequency_of_participation_recreation[this.props.collection]}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.frequency_of_participation_education[this.props.collection] !== 999 &&\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t🎓 Education/culture&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t{this.props.reports.frequency_of_participation_education[this.props.collection]}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.frequency_of_participation_associations[this.props.collection] !== 999 &&\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t🎭  Associations/clubs&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t{this.props.reports.frequency_of_participation_associations[this.props.collection]}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.frequency_of_participation_volunteering[this.props.collection] !== 999 &&\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t🤝 Volunteering&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t{this.props.reports.frequency_of_participation_volunteering[this.props.collection]}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.frequency_of_participation_informal_help[this.props.collection] !== 999 &&\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t⚕️ Informal help&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t{this.props.reports.frequency_of_participation_informal_help[this.props.collection]}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.frequency_of_participation_music[this.props.collection] !== 999 &&\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t🎵 Music&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t{this.props.reports.frequency_of_participation_informal_help[this.props.collection]}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.frequency_of_participation_computer[this.props.collection] !== 999 &&\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t🖥 Computer&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t{this.props.reports.frequency_of_participation_computer[this.props.collection]}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Box>\r\n\t\t\t</>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default class PH_GAUGE extends Component {\r\n\r\n\tchartRef = React.createRef();\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst ctx = this.chartRef.current.getContext(\"2d\");\r\n\t\t\r\n\t\tnew Chart(ctx, {\r\n\t\t\ttype: \"bar\",\r\n      options: {\r\n        indexAxis: 'y',\r\n\t\tplugins: {\r\n\t\t\ttitle: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\ttext: \"Your self rated physical health\"\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false\r\n\t\t\t},\r\n\t\t},\r\n        scales: {\r\n\t\t\tx: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 5\r\n\t\t\t}\r\n\t\t}\r\n      },\r\n\t\t\t\r\n\t\t\tdata: {\r\n\t\t\t\tlabels: [\"Self rated physical health\"],\r\n\t\t\t\tdatasets: [{ \r\n\t\t\t\t\tdata: [this.props.data],\r\n\t\t\t\t\tborderColor: \"#3e95cd\",\r\n\t\t\t\t\tbackgroundColor: \"#e91e62\",\r\n\t\t\t\t\tfill: false,\r\n\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n      \r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{\"width\" : \"50%\"}}>\r\n\t\t\t\t<canvas\r\n\t\t\t\tid=\"myChart\"\r\n\t\t\t\tref={this.chartRef}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default class MH_Gauge extends Component {\r\n\r\n\tchartRef = React.createRef();\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst ctx = this.chartRef.current.getContext(\"2d\");\r\n\t\t\r\n\t\tnew Chart(ctx, {\r\n\t\t\ttype: \"bar\",\r\n      options: {\r\n        indexAxis: 'y',\r\n\t\tplugins: {\r\n            title: {\r\n                display: true,\r\n                text: \"Your self rated mental health\"\r\n            },\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false\r\n\t\t\t},\r\n\t\t},\r\n        scales: {\r\n\t\t\tx: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 5\r\n\t\t\t}\r\n\t\t}\r\n      },\r\n\t\t\t\r\n\t\t\tdata: {\r\n\t\t\t\tlabels: [\"Self rated mental  health\"],\r\n\t\t\t\tdatasets: [{ \r\n\t\t\t\t\tdata: [this.props.data],\r\n\t\t\t\t\tborderColor: \"#3e95cd\",\r\n\t\t\t\t\tbackgroundColor: \"#e91e62\",\r\n\t\t\t\t\tfill: false,\r\n\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n      \r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{\"width\" : \"50%\"}}>\r\n\t\t\t\t<canvas\r\n\t\t\t\tid=\"myChart\"\r\n\t\t\t\tref={this.chartRef}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default class HealthToday_Gauge extends Component {\r\n\r\n\tchartRef = React.createRef();\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst ctx = this.chartRef.current.getContext(\"2d\");\r\n\t\t\r\n\t\tnew Chart(ctx, {\r\n\t\t\ttype: \"bar\",\r\n      options: {\r\n        indexAxis: 'y',\r\n\t\tplugins: {\r\n            title: {\r\n                display: true,\r\n                text: \"Your health today\"\r\n            },\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false\r\n\t\t\t},\r\n\t\t},\r\n        scales: {\r\n\t\t\tx: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 100\r\n\t\t\t}\r\n\t\t}\r\n      },\r\n\t\t\t\r\n\t\t\tdata: {\r\n\t\t\t\tlabels: [\"Your Health Today\"],\r\n\t\t\t\tdatasets: [{ \r\n\t\t\t\t\tdata: [this.props.data],\r\n\t\t\t\t\tborderColor: \"#3e95cd\",\r\n\t\t\t\t\tbackgroundColor: \"#e91e62\",\r\n\t\t\t\t\tfill: false,\r\n\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n      \r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{\"width\" : \"50%\"}}>\r\n\t\t\t\t<canvas\r\n\t\t\t\tid=\"myChart\"\r\n\t\t\t\tref={this.chartRef}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport LineChart from '../LineChart';\r\nimport PH_GAUGE from './PH_GAUGE';\r\nimport MH_Gauge from './MH_Gauge';\r\nimport HealthToday_Gauge from './HeathToday_Gauge';\r\n\r\nexport default class HealthStatus extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Typography variant=\"h6\" color=\"secondary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\tHealth Status\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Box m={1} mb={2}>\r\n\t\t\t\t\t{this.props.reports.PH_QofL2_SD[this.props.collection] !== 999 &&\r\n\t\t\t\t\t\t<PH_GAUGE data = {3}/>\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.MH_QofL2_SD[this.props.collection] !== 999 &&\r\n\t\t\t\t\t\t<MH_Gauge data = {this.props.reports.MH_QofL2_SD[this.props.collection]}/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.HT_QofL2_SD[this.props.collection] !== 999 &&\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<HealthToday_Gauge data={this.props.reports.HT_QofL2_SD[this.props.collection]}/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{(this.props.reports.problem_walking[this.props.collection] !== 999 &&\r\n\t\t\t\t\tthis.props.reports.problem_washing_dressing[this.props.collection] !== 999 &&\r\n\t\t\t\t\tthis.props.reports.problem_usual_activities[this.props.collection] !== 999 &&\r\n\t\t\t\t\tthis.props.reports.problem_pain_discomfort[this.props.collection] !== 999 &&\r\n\t\t\t\t\tthis.props.reports.problem_anxious_depressed[this.props.collection] !== 999)?\r\n\t\t\t\t\t\t<LineChart walking = {this.props.reports.problem_walking[this.props.collection]}\r\n\t\t\t\t\t\tcare =  {this.props.reports.problem_washing_dressing[this.props.collection]}\r\n\t\t\t\t\t\tusual = {this.props.reports.problem_usual_activities[this.props.collection]}\r\n\t\t\t\t\t\tpain = {this.props.reports.problem_pain_discomfort[this.props.collection]}\r\n\t\t\t\t\t\tanxious = {this.props.reports.problem_anxious_depressed[this.props.collection]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t\t<Typography display=\"block\" variant=\"subtitle2\" color=\"textSecondary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tNo available reports.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t</Box>\r\n\t\t\t</>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\nexport default class HealthSupportServices extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n                <Typography variant=\"h6\" color=\"secondary\" align=\"left\" gutterBottom>\r\n                    Health Support Services\r\n\t\t\t\t</Typography>\r\n                <Box m={1} mb={2}>\r\n                    {this.props.reports.support_wellness_program[this.props.collection] !== 999 &&\r\n                    <Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n                        <Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n                            I attended wellness programs&nbsp;\r\n                        </Typography>\r\n                        <Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                            {this.props.reports.support_wellness_program[this.props.collection]}\r\n                        </Typography>\r\n                    </Typography>\r\n                    }\r\n                    {this.props.reports.support_healthcare[this.props.collection] !== 999 &&\r\n                        <Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n                            <Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n                                I visited a health care provider&nbsp;\r\n                            </Typography>\r\n                            <Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                                {this.props.reports.support_healthcare[this.props.collection]}\r\n                            </Typography>\r\n                        </Typography>\r\n                    }\r\n                    {this.props.reports.support_home_healthcare[this.props.collection] !== 999 &&\r\n                        <Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n                            <Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n                                I had home health care or personal support visits&nbsp;\r\n                            </Typography>\r\n                            <Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                            {this.props.reports.support_home_healthcare[this.props.collection]}\r\n                            </Typography>\r\n                        </Typography>\r\n                    }\r\n                    {this.props.reports.support_private_healthcare[this.props.collection] !== 999 &&\r\n                    <Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n                        <Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n                            I paid privately for extra home health care or personal support visits&nbsp;\r\n                        </Typography>\r\n                        <Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                            {this.props.reports.support_private_healthcare[this.props.collection]}\r\n                        </Typography>\r\n                    </Typography>\r\n                    }\r\n                    {this.props.reports.support_informal[this.props.collection] !== 999 &&\r\n                        <Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n                            <Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n                                I received informal support from friends, family, or a neighbour &nbsp;\r\n                            </Typography>\r\n                            <Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                                {this.props.reports.support_informal[this.props.collection]}\r\n                            </Typography>\r\n                        </Typography>\r\n                    }\r\n                    {this.props.reports.support_wellness_program[this.props.collection] == 999 &&\r\n                        this.props.reports.support_healthcare[this.props.collection] == 999 &&\r\n                        this.props.reports.support_home_healthcare[this.props.collection] == 999 &&\r\n                        this.props.reports.support_private_healthcare[this.props.collection] == 999 &&\r\n                        this.props.reports.support_informal[this.props.collection] == 999 &&\r\n                        <Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n                            <Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n                                In the past year, I have not visited any health professionals, used health care programs or services, or attended health related wellness programs.\r\n                            </Typography>\r\n                        </Typography>\r\n                    }\r\n                </Box>\r\n\t\t\t</>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default class PersonalWellbeing_Gauge extends Component {\r\n\r\n\tchartRef = React.createRef();\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst ctx = this.chartRef.current.getContext(\"2d\");\r\n\t\t\r\n\t\tnew Chart(ctx, {\r\n\t\t\ttype: \"bar\",\r\n      options: {\r\n        indexAxis: 'y',\r\n\t\tplugins: {\r\n            title: {\r\n                display: true,\r\n                text: \"Your overall personal wellbeing\"\r\n            },\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false\r\n\t\t\t},\r\n\t\t},\r\n        scales: {\r\n\t\t\tx: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 100\r\n\t\t\t}\r\n\t\t}\r\n      },\r\n\t\t\t\r\n\t\t\tdata: {\r\n\t\t\t\tlabels: [\"Overall Personal Wellbeing\"],\r\n\t\t\t\tdatasets: [{ \r\n\t\t\t\t\tdata: [this.props.data],\r\n\t\t\t\t\tborderColor: \"#3e95cd\",\r\n\t\t\t\t\tbackgroundColor: \"#e91e62\",\r\n\t\t\t\t\tfill: false,\r\n\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n      \r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{\"width\" : \"50%\"}}>\r\n\t\t\t\t<canvas\r\n\t\t\t\tid=\"myChart\"\r\n\t\t\t\tref={this.chartRef}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\nimport Box from '@material-ui/core/Box';\r\nimport PersonalWellbeing_Gauge from './PersonalWellbeing_Gauge';\r\n\r\nexport default class PersonalWellBeing extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Typography variant=\"h6\" color=\"secondary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\tPersonal Well-Being\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Box m={1} mb={2}>\r\n\t\t\t\t\t{/* PWI determined sentence */}\r\n\t\t\t\t\t{/* PWI 70-100 */}\r\n\t\t\t\t\t{this.props.reports.PWI_QofL3_COMB[this.props.collection] !== 999 && \r\n\t\t\t\t\tthis.props.reports.PWI_QofL3_COMB[this.props.collection] >= 70 && this.props.reports.PWI_QofL3_COMB[this.props.collection] <= 100 &&\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\tI am satisfied with my life right now&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* PWI 46-69 */}\r\n\t\t\t\t\t{this.props.reports.PWI_QofL3_COMB[this.props.collection] !== 999 && \r\n\t\t\t\t\tthis.props.reports.PWI_QofL3_COMB[this.props.collection] >= 46 && this.props.reports.PWI_QofL3_COMB[this.props.collection] <= 69 &&\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\tI am not satisfied with a few aspects of my life right now&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* PWI 20-45 */}\r\n\t\t\t\t\t{this.props.reports.PWI_QofL3_COMB[this.props.collection] !== 999 && \r\n\t\t\t\t\tthis.props.reports.PWI_QofL3_COMB[this.props.collection] >= 20 && this.props.reports.PWI_QofL3_COMB[this.props.collection] <= 45 &&\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\tI am not satisfied with many aspects of my life right now&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* PWI 0-19 */}\r\n\t\t\t\t\t{this.props.reports.PWI_QofL3_COMB[this.props.collection] !== 999 && \r\n\t\t\t\t\tthis.props.reports.PWI_QofL3_COMB[this.props.collection] >= 0 && this.props.reports.PWI_QofL3_COMB[this.props.collection] <= 19 &&\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"primary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\tI am not at all satisfied with my life right now&nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.PWI_QofL3_COMB[this.props.collection] !== 999 && \r\n\t\t\t\t\t\t<PersonalWellbeing_Gauge data = {this.props.reports.PWI_QofL3_COMB[this.props.collection]}/>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Box>\r\n\t\t\t</>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default class Goals extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Typography variant=\"h6\" color=\"secondary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\tGoals\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Box m={1} mb={2}>\r\n\t\t\t\t\t{this.props.reports.goals[this.props.collection] !== 999 &&\r\n\t\t\t\t\t\t<Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t<Typography display=\"initial\" variant=\"subtitle1\" color=\"textSecondary\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\tMy goals for a happier and healthier life are: &nbsp;\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography display=\"initial\" variant=\"body1\" component=\"div\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t\t\t\t{this.props.reports.goals[this.props.collection].map((item, index) => \r\n\t\t\t\t\t\t\t\t\t<li key={`goals_${index}`}>\r\n\t\t\t\t\t\t\t\t\t\t{item} \r\n\t\t\t\t\t\t\t\t\t</li>)}\r\n\t\t\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t</Box>\t\r\n\t\t\t</>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport LineChart from './LineChart'\r\nimport Interests from './Summary/Interests';\r\nimport FamilyFriendsNeighbours from './Summary/FamilyFriendsNeighbours';\r\nimport CommunityParticipation from './Summary/CommunityParticipation';\r\nimport HealthStatus from './Summary/HealthStatus';\r\nimport HealthSupportServices from './Summary/HealthSupportServices';\r\nimport PersonalWellBeing from './Summary/PersonalWellBeing';\r\nimport Goals from './Summary/Goals';\r\n\r\nexport default class Summary extends Component {\r\n\trender() {\r\n\t\treturn (\r\n            <>\r\n                <Box m={1}>\r\n                    <Interests reports = {this.props.reports} collection = {this.props.collection}/>\r\n                    <FamilyFriendsNeighbours reports = {this.props.reports} collection = {this.props.collection}/>\r\n                    <CommunityParticipation reports = {this.props.reports} collection = {this.props.collection}/>\r\n                    <HealthStatus reports = {this.props.reports} collection = {this.props.collection}/>\r\n                    <HealthSupportServices reports = {this.props.reports} collection = {this.props.collection}/>\r\n                    <PersonalWellBeing reports = {this.props.reports} collection = {this.props.collection}/>\r\n                    <Goals reports = {this.props.reports} collection = {this.props.collection}/>\r\n                </Box>\r\n            </>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { ListItem } from '@material-ui/core';\r\n\r\nexport default class CommunityParticipationAlert extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Grid container item xs={12} spacing={2}>\r\n\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t<Typography variant=\"h5\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tFrequency of Community Participation\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t{/* Red Flags */}\r\n\t\t\t\t<Grid item xs={5}>\r\n\t\t\t\t{/* ! ( Weekly/Daily for ALL [church/religion, sports/physical, other recreational activities] ) &&\r\n\t\t\t\t! Monthly for ALL [educational/cultural, club, community] &&\r\n\t\t\t\tMonthly or less seeing family / friends\r\n\t\t\t\tISA_INT = 1 trigger */}\r\n\t\t\t\t{this.props.reports.ISA_INT[this.props.collection] == 1 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYour participation in community or social activities is limited\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t</Grid>\r\n\r\n\r\n\t\t\t\t{/* Yellow Flags */}\r\n\t\t\t\t<Grid item xs={5}>\r\n\t\t\t\t{/* Yes to wanting to do more of any activity\r\n\t\t\t\tISA_DM_STRINGS list of noted \"want to do more\" activities\r\n\t\t\t\tISA_DM_STRINGS length != 0 trigger */}\r\n\t\t\t\t{this.props.reports.ISA_DM_STRINGS[this.props.collection].length !== 0 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou would like to participate in more activities \r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t</Grid>\t\t\t\t\r\n\t\t\t</Grid>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { ListItem } from '@material-ui/core';\r\n\r\n\r\nexport default class HealthAlert extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Grid container item xs={12} spacing={2}>\r\n\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t<Typography variant=\"h5\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tHealth Alert\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t{/* Red flag row */}\r\n\t\t\t\t<Grid item xs={5}>\r\n\t\t\t\t{/* Health today less than 50*/}\r\n\t\t\t\t{this.props.reports.HT_QofL2_SD[this.props.collection] <= 50 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYour health today is a concern. On a scale of 0 to 100, you rate your health today as [# between 0 and 50]\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t{/* general health is poor (0) */}\r\n\t\t\t\t{this.props.reports.PH_QofL2_SD[this.props.collection] === 0 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou rate your health as poor in general\t\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t{/* Mental health rated poor (0) */}\r\n\t\t\t\t{this.props.reports.MH_QofL2_SD[this.props.collection] === 0 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou rate your mental health as poor\t\t\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t{(this.props.reports.M_QofL2_SD[this.props.collection] === 3 || this.props.reports.M_QofL2_SD[this.props.collection] === 4) &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou have severe problems walking around\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t{/* Severe (3) or extreme (4) problems with personal care */}\r\n\t\t\t\t{(this.props.reports.PC_QofL2_SD[this.props.collection] === 3 ||  this.props.reports.PC_QofL2_SD[this.props.collection] === 4) &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou have severe problems washing or dressing\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t{/* Severe (3) or extreme (4) problems with usual activities */}\r\n\t\t\t\t{(this.props.reports.UA_QofL2_SD[this.props.collection] === 3 || this.props.reports.UA_QofL2_SD[this.props.collection] === 4) &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou have severe problems doing usual activities\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t{/* Severe (3) or extreme (4) problems with pain / discomfort */}\r\n\t\t\t\t{(this.props.reports.PD_QofL2_SD[this.props.collection] === 3 || this.props.reports.PD_QofL2_SD[this.props.collection] === 4) &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou have severe problems with pain/discomfort\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t\t{/* Severe (3) or extreme (4) problems with anxiety / depression */}\r\n\t\t\t\t\t{(this.props.reports.AD_QofL2_SD[this.props.collection] === 3 || this.props.reports.AD_QofL2_SD[this.props.collection] === 4) &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou have severe problems with anxiety/ depression\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{/* Yellow flag row */}\r\n\t\t\t\t<Grid item xs={5}>\r\n\t\t\t\t{/* Health today is between 51 and 65*/}\r\n\t\t\t\t{50 < this.props.reports.HT_QofL2_SD[this.props.collection] && this.props.reports.HT_QofL2_SD[this.props.collection] <= 65 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYour health today is fair. On a scale of 0 to 100, you rate your health today as {this.props.reports.HT_QofL2_SD[this.props.collection]}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t{/* general health is fair (1) */}\r\n\t\t\t\t{this.props.reports.PH_QofL2_SD[this.props.collection] === 1 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tNEED VAR You rate your health as fair in general\t\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t{/* Mental health rated fair (1) */}\r\n\t\t\t\t{this.props.reports.MH_QofL2_SD[this.props.collection] === 1 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou rate your mental health as fair\t\t\t\t\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t{/* Moderate(2) problems with mobility */}\r\n\t\t\t\t{this.props.reports.M_QofL2_SD[this.props.collection] === 2 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou have moderate problems walking around\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t{/* Moderate(2) problems with personal care */}\r\n\t\t\t\t{this.props.reports.PC_QofL2_SD[this.props.collection] === 2 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou have moderate problems washing or dressing\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t{/* Moderate(2) problems with usual activities */}\r\n\t\t\t\t{this.props.reports.UA_QofL2_SD[this.props.collection] === 2 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou have moderate problems doing usual activities\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t{/* Moderate(2) problems with pain / discomfort */}\r\n\t\t\t\t{this.props.reports.PD_QofL2_SD[0] === 2 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou have moderate problems with pain/discomfort\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t{/* Moderate(2) problems with anxiety / depression */}\r\n\t\t\t\t{this.props.reports.AD_QofL2_SD[this.props.collection] === 2 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou have moderate problems with anxiety/ depression\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\t{/* Number of ER visits */}\r\n\t\t\t\t\t{999 > this.props.reports.HU_ED_QofL2_SD[this.props.collection] && this.props.reports.HU_ED_QofL2_SD[this.props.collection] > 0 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou had {this.props.reports.HU_ED_QofL2_SD[this.props.collection]} ER visits in the past year.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* Number of hospitalizations */}\r\n\t\t\t\t\t{999 > this.props.reports.HU_HNum_QofL2_SD[this.props.collection] && this.props.reports.HU_HNum_QofL2_SD[this.props.collection] > 0 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou had {this.props.reports.HU_HNum_QofL2_SD[this.props.collection]} hospitalizations in the past year.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* Number of crisis */}\r\n\t\t\t\t\t{999 > this.props.reports.HU_EMS_QofL2_SD[this.props.collection] && this.props.reports.HU_EMS_QofL2_SD[this.props.collection] > 0 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou had {this.props.reports.HU_EMS_QofL2_SD[this.props.collection]} crisis in the past year.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* Number of urgent care visits */}\r\n\t\t\t\t\t{999 > this.props.reports.HU_UC_QofL2_SD[this.props.collection] && this.props.reports.HU_UC_QofL2_SD[this.props.collection] > 0 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou had {this.props.reports.HU_UC_QofL2_SD[this.props.collection]} urgent care visits in the past year.\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/*access to family doctor? */}\r\n\t\t\t\t\t{this.props.reports.access_to_family_doctor[this.props.collection] == \"No\" &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou don’t have access to a family doctor\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* Seldom participated in wellness activities */}\r\n\t\t\t\t\t{this.props.reports.support_wellness_program[this.props.collection] &&\r\n\t\t\t\t\t\t(this.props.reports.problem_walking[this.props.collection] > 1 && this.props.reports.problem_walking[this.props.collection] < 999) &&\r\n\t\t\t\t\t\t(this.props.reports.problem_washing_dressing[this.props.collection] > 1 && this.props.reports.problem_walking[this.props.collection] < 999) &&\r\n\t\t\t\t\t\t(this.props.reports.problem_usual_activities[this.props.collection] > 1 && this.props.reports.problem_walking[this.props.collection] < 999) &&\r\n\t\t\t\t\t\t(this.props.reports.problem_walking[this.props.collection] > 1 && this.props.reports.problem_walking[this.props.collection] < 999) &&\r\n\t\t\t\t\t\t(this.props.reports.problem_pain_discomfort[this.props.collection] > 1 && this.props.reports.problem_walking[this.props.collection] < 999) &&\r\n\t\t\t\t\t\t(this.props.reports.problem_anxious_depressed[this.props.collection] > 1 && this.props.reports.problem_walking[this.props.collection] < 999) &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tDespite serious health limitations, you seldom participated in wellness activities\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* No access to informal care */}\r\n\t\t\t\t\t{this.props.reports.support_informal[this.props.collection] &&\r\n\t\t\t\t\t\t(this.props.reports.problem_walking[this.props.collection] > 1 && this.props.reports.problem_walking[this.props.collection] < 999) &&\r\n\t\t\t\t\t\t(this.props.reports.problem_washing_dressing[this.props.collection] > 1 && this.props.reports.problem_walking[this.props.collection] < 999) &&\r\n\t\t\t\t\t\t(this.props.reports.problem_usual_activities[this.props.collection] > 1 && this.props.reports.problem_walking[this.props.collection] < 999) &&\r\n\t\t\t\t\t\t(this.props.reports.problem_walking[this.props.collection] > 1 && this.props.reports.problem_walking[this.props.collection] < 999) &&\r\n\t\t\t\t\t\t(this.props.reports.problem_pain_discomfort[this.props.collection] > 1 && this.props.reports.problem_walking[this.props.collection] < 999) &&\r\n\t\t\t\t\t\t(this.props.reports.problem_anxious_depressed[this.props.collection] > 1 && this.props.reports.problem_walking[this.props.collection] < 999) &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tDespite serious health limitations, you did not have access to informal care\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\t\r\n\t\t\t\t\t}\r\n\t\t\t\t</Grid>\t\t\r\n\t\t\t</Grid>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { ListItem } from '@material-ui/core';\r\n\r\nexport default class LonelinessAlert extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Grid container item xs={12} spacing={2}>\r\n\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t<Typography variant=\"h5\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tLoneliness\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t{/* Red Flag */}\r\n\t\t\t\t<Grid item xs={5}>\r\n\t\t\t\t{/* Feel isolated, left, out, lack companions <-> answer often for 1*/}\r\n\t\t\t\t{this.props.reports.PL_QofL1_COMB_often_count[this.props.collection] > 0 && this.props.reports.PL_QofL1_COMB_often_count[this.props.collection] !== 999 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou often feel you lack companions, feel left out or feel isolated from others\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t{/* Yellow Flag */}\r\n\t\t\t\t<Grid item xs={5}>\r\n\t\t\t\t{/* Feel isolated, left, out, lack companions <-> score 1.6 && 1+ [sometimes] */}\r\n\t\t\t\t{(this.props.reports.PL_QofL1_COMB_sometimes_count[this.props.collection] > 0 && this.props.reports.PL_QofL1_COMB_sometimes_count[this.props.collection] !== 999)&&\r\n\t\t\t\t\t(this.props.reports.PL_QofL1_COMB[this.props.collection] >= 1.6 && this.props.reports.PL_QofL1_COMB[this.props.collection] !== 999)&&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou sometimes feel you lack companions, feel left out, or feel isolated from others\t\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t</Grid>\t\t\t\t\r\n\t\t\t</Grid>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { ListItem } from '@material-ui/core';\r\n\r\nexport default class PersonalWellBeingAlert extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Grid container item xs={12} spacing={2}>\r\n\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t<Typography variant=\"h5\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tPersonal Well-Being\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t{/* Red Flags */}\r\n\t\t\t\t<Grid item xs={5}>\r\n\t\t\t\t{/* Not satisfied with life as a whole (PWI 60 or less) */}\r\n\t\t\t\t{this.props.reports.PWI_QofL3_COMB[this.props.collection] <= 60 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are not satisfied with life as a whole \r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* Not satisfied with standard of living (5 or less) */}\r\n\t\t\t\t\t{this.props.reports.SL_QofL3_SD[this.props.collection] <=5 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are not satisfied with your standard of living \r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* Not satisfied with health (5 or less) */}\r\n\t\t\t\t\t{this.props.reports.YH_QofL3_SD[this.props.collection] <=5 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are not satisfied with your health \r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* Not satisfied with what you're achieving (5 or less) */}\r\n\t\t\t\t\t{this.props.reports.AL_QofL3_SD[this.props.collection] <=5 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are not satisfied with what you are achieving\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* Not satisfied with your personal realtionships (5 or less) */}\r\n\t\t\t\t\t{this.props.reports.PR_QofL3_SD[this.props.collection] <=5 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are not satisfied with your personal relationships \r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* Not satisfied with how safe you feel (5 or less) */}\r\n\t\t\t\t\t{this.props.reports.HSF_QofL3_SD[this.props.collection] <=5 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are not satisfied with how safe you feel \r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* Not satisfied with feeling part of the community (5 or less) */}\r\n\t\t\t\t\t{this.props.reports.FPC_QofL3_SD[this.props.collection] <=5 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are not satisfied with feeling part of the community \r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* Not satisfied with your future security (5 or less) */}\r\n\t\t\t\t\t{this.props.reports.FS_QofL3_SD[this.props.collection] <=5 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are not satisfied with your future security \r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* Not satisfied with your spitituality or religion (5 or less) */}\r\n\t\t\t\t\t{this.props.reports.SR_QofL3_SD[this.props.collection] <=5 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are not satisfied with your spirituality or religion \r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* Progress on Goals is \"hardly ever\" (1)  */}\r\n\t\t\t\t\t{this.props.reports.PAG_QofL1_SD[this.props.collection] == 3 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are not satisfied with the progress you are making in achieving your goals and wishes\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t{/* Yellow Flags */}\r\n\t\t\t\t<Grid item xs={5}>\r\n\t\t\t\t\t{/* sometimes unsatisfied with standard of living (6) */}\r\n\t\t\t\t\t{this.props.reports.SL_QofL3_SD[this.props.collection] == 6 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are sometimes unsatisfied with your standard of living \r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* sometimes unsatisfied with health (6) */}\r\n\t\t\t\t\t{this.props.reports.YH_QofL3_SD[this.props.collection] == 6 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are sometimes unsatisfied with your health \r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* sometimes unsatisfied with what you're achieving (6) */}\r\n\t\t\t\t\t{this.props.reports.AL_QofL3_SD[this.props.collection] == 6 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are sometimes unsatisfied with what you are achieving\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* sometimes unsatisfied with your personal realtionships (6) */}\r\n\t\t\t\t\t{this.props.reports.PR_QofL3_SD[this.props.collection] == 6 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are sometimes unsatisfied with your personal relationships \r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* sometimes unsatisfied with how safe you feel (6) */}\r\n\t\t\t\t\t{this.props.reports.HSF_QofL3_SD[this.props.collection] == 6 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are sometimes unsatisfied with how safe you feel \r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* sometimes unsatisfied with feeling part of the community (6) */}\r\n\t\t\t\t\t{this.props.reports.FPC_QofL3_SD[this.props.collection] == 6 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are sometimes unsatisfied with feeling part of the community \r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* sometimes unsatisfied with your future security (6) */}\r\n\t\t\t\t\t{this.props.reports.FS_QofL3_SD[this.props.collection] == 6 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are sometimes unsatisfied with your future security \r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* sometimes unsatisfied with your spitituality or religion (6) */}\r\n\t\t\t\t\t{this.props.reports.SR_QofL3_SD[this.props.collection] == 6 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are sometimes unsatisfied with your spirituality or religion \r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* Progress on Goals \"sometimes\" (2)  */}\r\n\t\t\t\t\t{this.props.reports.PAG_QofL1_SD[this.props.collection] == 2 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are only sometimes satisfied with the progress you are making in achieving your goals and wishes\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Grid>\t\t\t\t\r\n\t\t\t</Grid>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { ListItem } from '@material-ui/core';\r\n\r\nexport default class SocialContactAlert extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Grid container item xs={12} spacing={2}>\r\n\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t<Typography variant=\"h5\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tSocial Contact\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t{/* Red Flags */}\r\n\t\t\t\t<Grid item xs={5}>\r\n\t\t\t\t{/* All 3 are yearly/nevers */}\r\n\t\t\t\t{(this.props.reports.frequency_get_together_family[this.props.collection] == \"Yearly\" || this.props.reports.frequency_get_together_family[this.props.collection] == \"Never\")&&\r\n\t\t\t\t(this.props.reports.frequency_get_together_friends[this.props.collection] == \"Yearly\" || this.props.reports.frequency_get_together_friends[this.props.collection] == \"Never\") &&\r\n\t\t\t\t(this.props.reports.frequency_get_together_neighbours[this.props.collection] == \"Yearly\" || this.props.reports.frequency_get_together_neighbours[this.props.collection] == \"Never\") &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou seldom get together with family, friends or getNeighbours\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t{/* Yellow Flags */}\r\n\t\t\t\t<Grid item xs={5}>\r\n\t\t\t\t{/*  In a typical month, do you regularly talk on the telephone or computer with family, friends, or neighbors? = No => trigger*/}\r\n\t\t\t\t{this.props.reports.frequency_of_social_contacts_month_phone_computer[this.props.collection] == 0 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou do not see your family, friends, or neighbours as much as you would Like\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t{/* QSC_QofL1_COMB < 2 */}\r\n\t\t\t\t{this.props.reports.QSC_QofL1_COMB[this.props.collection] < 2 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou do not have people in my life to have a good time with, relax with, or help you get your mind off things. [omit whatever aspects are not applicable]\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t</Grid>\t\t\t\t\r\n\t\t\t</Grid>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { ListItem } from '@material-ui/core';\r\n\r\nexport default class SupportAvailabilityAlert extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Grid container item xs={12} spacing={2}>\r\n\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t<Typography variant=\"h5\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tAvailability of Support\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t{/* Red Flags */}\r\n\t\t\t\t<Grid item xs={5}>\r\n\t\t\t\t{/* Average of answers scored 0-3 trigger if PSS_QofL1_COMB 2.5-3 */}\r\n\t\t\t\t{this.props.reports.PSS_QofL1_COMB[this.props.collection] >= 2.5 && this.props.reports.PSS_QofL1_COMB[this.props.collection] <= 3 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou hardly ever feel you have the social support you need from your family and friends.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t{/* Yellow Flags */}\r\n\t\t\t\t<Grid item xs={5}>\r\n\t\t\t\t\t{/* Average of answers scored 0-3 trigger if PSS_QofL1_COMB 1.6-2.4 */}\r\n\t\t\t\t\t{this.props.reports.PSS_QofL1_COMB[this.props.collection] >= 1.6 && this.props.reports.PSS_QofL1_COMB[this.props.collection] <= 2.4 &&\r\n\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\tYou only sometimes feel you have the social support you need from your family and friends.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* Comfortable asking for help alert for not comfortable(3) or only sometimes(2) */}\r\n\t\t\t\t\t{this.props.reports.AFH_QofL1_SD[this.props.collection] == 2 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are only sometimes comfortable asking for help.\t\t\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.reports.AFH_QofL1_SD[this.props.collection] == 3 &&\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t\t\tYou are not comfortable asking for help.\t\t\r\n\t\t\t\t\t\t\t{this.props.reports.AFH_QofL1_SD[this.props.collection] }\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Grid>\t\t\t\t\r\n\t\t\t</Grid>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Item from '@material-ui/core/ListItem';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport CommunityParticipationAlert from './ConcernAlerts/CommunityParticipationAlert';\r\nimport HealthAlert from './ConcernAlerts/HealthAlert';\r\nimport LonelinessAlert from \"./ConcernAlerts/LonelinessAlert\";\r\nimport PersonalWellBeingAlert from './ConcernAlerts/PersonalWellBeingAlert';\r\nimport SocialContactAlert from './ConcernAlerts/SocialContactAlert';\r\nimport SupportAvailabilityAlert from './ConcernAlerts/SupportAvailabilityAlert';\r\n\r\nexport default class PossibleConcerns extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n            <>\r\n                <Box m={1}>\r\n                    <Grid container spacing={2} id=\"concernsGrid\">\r\n                        <Grid item xs={4}/>\r\n                        <Grid item xs={4}>\r\n                            <Typography variant=\"h5\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                            Red Flags\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Typography variant=\"h5\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                            Yellow Flags\r\n                            </Typography>\r\n                        </Grid>\r\n                        <HealthAlert reports = {this.props.reports} collection = {this.props.collection}/>\r\n                        <PersonalWellBeingAlert reports = {this.props.reports} collection = {this.props.collection}/>\r\n                        <SupportAvailabilityAlert reports = {this.props.reports} collection = {this.props.collection}/>  \r\n                        <LonelinessAlert reports = {this.props.reports} collection = {this.props.collection}/>\r\n                        <CommunityParticipationAlert reports = {this.props.reports} collection = {this.props.collection}/>\r\n                        <SocialContactAlert reports = {this.props.reports} collection = {this.props.collection}/>\r\n                    </Grid>\r\n                </Box>\r\n                \r\n            </>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\n\r\nexport default class CommunityParticipationSuggestion extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\t\r\n\t\t\t<div>\r\n\t\t\t{/* Either community participation flag is triggered */}\r\n\t\t\t{(this.props.reports.ISA_INT[this.props.collection] == 1 || \r\n\t\t\t\tthis.props.reports.ISA_DM_STRINGS[this.props.collection].length !== 0) &&\r\n\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                <em>Participating in community activities.</em> Think about what activities you enjoy the most. Develop a plan for how you can make room for more of these kinds of activities in your life that fits your lifestyle and circumstances. Would you like us to help you find suitable activities?\r\n\t\t\t\t</Typography>\r\n\t\t\t}\r\n            </div>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\n\r\nexport default class HealthSuggestion extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n            {/* health today is a concern HT_QofL2_SD <= 65 ||\r\n            mental health rating is poor or fair MH_QofL2_SD <= 1 ||\r\n            multiple er visits HU_ED_QofL2_SD > 1 ||\r\n            multiple hospitalizations HU_HNum_QofL2_SD > 1*/}\r\n           {((this.props.reports.HT_QofL2_SD[this.props.collection] <= 65 && this.props.reports.HT_QofL2_SD[this.props.collection] !== 999) ||\r\n                (this.props.reports.MH_QofL2_SD[this.props.collection] <= 1 && this.props.reports.MH_QofL2_SD[this.props.collection] !== 999)||\r\n                (this.props.reports.HU_ED_QofL2_SD[this.props.collection] > 1 && this.props.reports.HU_ED_QofL2_SD[this.props.collection] !== 999) ||\r\n                (this.props.reports.HU_HNum_QofL2_SD[this.props.collection] > 1 && this.props.reports.HU_HNum_QofL2_SD[this.props.collection] !== 999)) &&\r\n                <>\r\n\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t<em>Your health. {this.props.reports.HU_ED_QofL2_SD[this.props.collection]}  </em> \r\n\t\t\t\t</Typography>\r\n                {/* # er visits */}\r\n                {this.props.reports.HU_ED_QofL2_SD[this.props.collection] > 1 && this.props.reports.HU_ED_QofL2_SD[this.props.collection] !== 999 &&\r\n                    <Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                    You had  {this.props.reports.HU_ED_QofL2_SD[this.props.collection]} er visits in the past year.   \r\n                    </Typography>\r\n                }\r\n                {/* # hospital visits */}\r\n                {this.props.reports.HU_HNum_QofL2_SD[this.props.collection] > 1  && this.props.reports.HU_HNum_QofL2_SD[this.props.collection] !== 999 &&\r\n                    <Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                    You had {this.props.reports.HU_HNum_QofL2_SD[this.props.collection] > 1} hospitalizations in the past year.  \r\n                    </Typography>\r\n                }\r\n                <Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\tIf you feel concerned about your health generally, you may benefit from developing a plan and building a network of care that is responsive to all aspects of your physical, mental, social and spiritual health.\r\n                 Would you like us to help you develop a personalized plan that aims to improve your health?\r\n\t\t\t\t</Typography>\r\n                </>\r\n            }\r\n            {/* moderate or higher problems with pain PD_QofL2_SD >= 2 */}\r\n            {this.props.reports.HU_HNum_QofL2_SD[this.props.collection] >= 2 && this.props.reports.HU_HNum_QofL2_SD[this.props.collection] !== 999 &&\r\n\t\t\t\t<Typography display=\"block\" variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                <em>Problems  with pain.</em>    Regularly monitor pain and discomfort symptoms, and the circumstances in which they are better and worse. \r\n                Share information about your symptoms with your trusted providers and your family and ask about pain management and comfort measures to help with deal with pain and symptoms. Make sure you keep track of what seems to help. \t\t\t\t\r\n                </Typography>\r\n            }\r\n            {/* moderate or higher problems with anxiety or depression AD_QofL2_SD >= 2 */}\r\n            {this.props.reports.AD_QofL2_SD[this.props.collection] >= 2 && this.props.reports.AD_QofL2_SD[this.props.collection] !== 999 &&\r\n                <Typography display=\"block\" variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                <em>Problems with anxiety or depression.</em>   Regularly monitor your physical and psychological symptoms, and circumstances in which they are better and worse.\r\n                 Share this information with your trusted providers and other supporters and ask for advice.\r\n                 You may wish to explore options such as counselling, peer support groups, relaxation, meditation or other activities to reduce anxiety.\r\n                 Make sure you keep track of what seems to help.\r\n                </Typography>\r\n            }\r\n            {/* moderate or higher problems with mobility M_QofL2_SD >= 2\r\n            moderate or higher problems with personal care PC_QofL2_SD >= 2\r\n            usual activities UA_QofL2_SD > 2*/}\r\n            {((this.props.reports.M_QofL2_SD[this.props.collection] >= 2 && this.props.reports.M_QofL2_SD[this.props.collection] !== 999 ) ||\r\n                (this.props.reports.PC_QofL2_SD[this.props.collection] >= 2 && this.props.reports.PC_QofL2_SD[this.props.collection] !== 999 ) ||\r\n                (this.props.reports.UA_QofL2_SD[this.props.collection] >= 2 && this.props.reports.UA_QofL2_SD[this.props.collection] !== 999 )) &&\r\n                <>\r\n                <Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                <em>Problems with </em> \r\n                {this.props.reports.M_QofL2_SD[this.props.collection] >= 2 && this.props.reports.M_QofL2_SD[this.props.collection] !== 999 &&\r\n                <em> mobility </em>\r\n                }\r\n                {this.props.reports.PC_QofL2_SD[this.props.collection] >= 2 && this.props.reports.PC_QofL2_SD[this.props.collection] !== 999 &&\r\n                <em> personal care, usual activities]</em>\r\n                }\r\n                {this.props.reports.UA_QofL2_SD[this.props.collection] >= 2 && this.props.reports.UA_QofL2_SD[this.props.collection] !== 999 &&\r\n                <em> usual activities </em>\r\n                }\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                You may want to speak to a trusted health care provider and bring this results report with you, to ask if you are eligible for extra help, assistive aids, or if they have other suggestions to help you better deal with these challenges. \r\n                If you don’t already have a trusted provider helping with your in-home or personal care, would you like us to connect you?   \r\n                </Typography>\r\n                </>\r\n            }\r\n            {/* No access to primary care provider access_to_family_doctor == \"No\" */}\r\n            {this.props.reports.access_to_family_doctor[this.props.collection] == \"No\" && \r\n                <Typography display=\"block\" variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                <em>Access to a primary care provider.</em> Having your own family doctor is good for your health! Would you like us to help you connect with a primary care provider who is right for you?\r\n                </Typography>\r\n            }\r\n            </div>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\n\r\nexport default class Loneliness extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{/* You often feel [you lack companions, left out or isolated from others]  */}\r\n\t\t\t\t{this.props.reports.PL_QofL1_COMB_often_count[this.props.collection] > 0 && this.props.reports.PL_QofL1_COMB_often_count[this.props.collection] !== 999 &&\r\n\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t<em>Loneliness.</em> Everyone needs people in their lives they feel close to. Try meeting new people and maybe make new friends.  Join events that will help you connect with neighbours who share your interests, or start your own activity, and see who you meet.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t}\r\n                {/* You sometimes feel [you lack companions, left out, or isolated from others] */}\r\n\t\t\t\t{(this.props.reports.PL_QofL1_COMB_sometimes_count[this.props.collection] > 0 && this.props.reports.PL_QofL1_COMB_sometimes_count[this.props.collection] !== 999)&&\r\n\t\t\t\t\t(this.props.reports.PL_QofL1_COMB[this.props.collection] >= 1.6 && this.props.reports.PL_QofL1_COMB[this.props.collection] !== 999)&&\r\n\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t<em>Loneliness.</em> Try connecting with others through sharing your time and talents with them. Invite others to join you in doing the activities you love best. Helping others is also a good way to feel less lonely.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t}\r\n\t\t\t\t{/* You sometimes feel left out – note – use this statement only if lack companions or feel isolated NOT triggered */}\r\n\t\t\t\t{!(this.props.reports.PL_QofL1_COMB_often_count[this.props.collection] > 0 && this.props.reports.PL_QofL1_COMB_often_count[this.props.collection] !== 999)&&\r\n\t\t\t\t!((this.props.reports.PL_QofL1_COMB_sometimes_count[this.props.collection] > 0 && this.props.reports.PL_QofL1_COMB_sometimes_count[this.props.collection] !== 999)&&\r\n\t\t\t\t\t(this.props.reports.PL_QofL1_COMB[this.props.collection] >= 1.6 && this.props.reports.PL_QofL1_COMB[this.props.collection] !== 999)) &&\r\n\t\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\t<em>Feeling left out.</em> Talk to others to let them know what’s important to you.\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t}\r\n            </div>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\n\r\nexport default class SocialContactSuggesiton extends Component {    \r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t{/* If social contact alerts are triggered */}\r\n\t\t\t{/* Red Flag: All 3 are yearly/nevers */}\r\n\t\t\t{this.props.reports.frequency_of_social_contacts_month_phone_computer[this.props.collection] == 0 &&\r\n\t\t\t\t(this.props.reports.frequency_get_together_family[this.props.collection] == \"Yearly\" || this.props.reports.frequency_get_together_family[this.props.collection] == \"Never\")&&\r\n\t\t\t\t(this.props.reports.frequency_get_together_friends[this.props.collection] == \"Yearly\" || this.props.reports.frequency_get_together_friends[this.props.collection] == \"Never\") &&\r\n\t\t\t\t(this.props.reports.frequency_get_together_neighbours[this.props.collection] == \"Yearly\" || this.props.reports.frequency_get_together_neighbours[this.props.collection] == \"Never\") &&\r\n\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                <em>Seeing family and friends.</em>  Even if circumstances make it difficult to physically get together with people as often as you would like, think about different ways to show them you care. Phone calls, letters, messages and video are all good ways to reach out. You could also plan for virtual get-togethers. Can we help you get started? \r\n\t\t\t\t</Typography>\r\n\t\t\t}\r\n\t\t\t{/*  The quality of time with your social interactions with others is limited. */}\r\n\t\t\t{this.props.reports.QSC_QofL1_COMB[this.props.collection] < 2 &&\r\n\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n\t\t\t\t\tQuality time with others. Everyone needs people in their lives they enjoy spending time with. Think about what steps you can take now so you can get more enjoyment out of spending time with people. Would you like us to help you develop a plan?\r\n\t\t\t\t</Typography>\r\n\t\t\t}\r\n            </div>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\n\r\nexport default class SocialSupportSuggesiton extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t{/* If social support alerts were triggered */}\r\n\t\t\t{((this.props.reports.PSS_QofL1_COMB[this.props.collection] >= 1.6 && this.props.reports.PSS_QofL1_COMB[this.props.collection] <= 2.4) ||\r\n\t\t\t(this.props.reports.PSS_QofL1_COMB[this.props.collection] >= 2.5 && this.props.reports.PSS_QofL1_COMB[this.props.collection] <= 3) ||\r\n\t\t\t(this.props.reports.PSS_QofL1_COMB[this.props.collection] >= 1.6 && this.props.reports.PSS_QofL1_COMB[this.props.collection] <= 2.4 )) &&\r\n\r\n\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                <em>Support from others.</em> Remember it’s a natural part of living in a caring community to ask for the help you need. \r\n\t\t\t\tResearch shows that 80% of the time, helping behaviour will start from a clear and specific request from you. Your community is there for you – it’s what community is all about. \r\n\t\t\t\tWould you like us to help you request help?\r\n\t\t\t\t</Typography>\r\n\t\t\t}\r\n            </div>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\n\r\nexport default class WellBeingSuggestion extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n            {/* Not satisfied with life as a whole  PWI_QofL3_COMB <= 60 */}\r\n            {this.props.reports.PWI_QofL3_COMB[this.props.collection] <= 60 &&\r\n\t\t\t\t<Typography variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                <em>Not satisfied with life.</em> Feeling dissatisfied with your life is a sign that you may be experiencing some stressful challenges and may need extra support. \r\n                Achieving something important each day, developing good personal relationships with others, getting your finances in order, and finding meaning in what’s happening will help to lower stress. \r\n                Would you like to speak to someone to explore these issues further? \r\n\t\t\t\t</Typography>\r\n            }\r\n            {/* Not satisfied with standard of living SL_QofL3_SD <= 5 ||\r\n            Not satisfied with health YH_QofL3_SD <= 5 ||\r\n            Not satisfied with achievements AL_QofL3_SD <= 5 ||\r\n            Not satisfied with feeling part of the community FPC_QofL3_SD <= 5 ||\r\n            Not satisfied with future security FS_QofL3_SD <= 5 ||\r\n            Not satisfied with spirituality/religion SR_QofL3_SD <= 5\r\n             */}\r\n             {this.props.reports.SL_QofL3_SD[this.props.collection] <= 5 &&\r\n                <Typography display=\"block\" variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                Standard of living. Would it help to talk to someone to learn about how to better manage your finances, and to explore whether there are income support programs you may be entitled to?\r\n                </Typography>\r\n             }\r\n             {this.props.reports.AL_QofL3_SD[this.props.collection] <= 5 &&\r\n                <Typography display=\"block\" variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                <em>Life achievement.</em> Remember – your life has purpose and your story matters. Try to achieve at least one thing that is important to you each day.  Setting goals for what you would like to change, and what you can do to make this happen, can help. Would you like us to help you record your story and develop an action plan for achieving your goals?\r\n                </Typography>\r\n             }\r\n             {this.props.reports.PR_QofL3_SD[this.props.collection] <= 5 &&\r\n                <Typography display=\"block\" variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                <em>Personal relationships.</em> Would it help you to talk to someone to learn how to mend/tend personal relationships?\r\n                </Typography>\r\n             }\r\n             {this.props.reports.HSF_QofL3_SD[this.props.collection] <= 5 &&\r\n                <Typography display=\"block\" variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                <em>Safety.</em> Talk to your family and neighbours about what people could do together to feel more safe – for example, joining a Neighbourhood Watch group, tracking safety issues, having training workshops, starting a community dialogue about other possible options to improve safety.\r\n                </Typography>\r\n             }\r\n             {this.props.reports.FPC_QofL3_SD[this.props.collection] <= 5 &&\r\n                <Typography display=\"block\" variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                <em>Community belonging.</em> Remember that every act of kindness counts and helps you feel a greater sense of belonging. Share a card and a smile to show people in your neighbourhood that you care about them. Your neighbours are there for you – it’s what community is all about.\r\n                </Typography>\r\n            }\r\n            {this.props.reports.FS_QofL3_SD[this.props.collection] <= 5 &&\r\n                <Typography display=\"block\" variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                <em>Future security.</em> Would it help to talk to someone to learn about how to plan for your future health, finances or safety?\r\n                </Typography>\r\n            }\r\n            {this.props.reports.SR_QofL3_SD[this.props.collection] <= 5 &&\r\n                <Typography display=\"block\" variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                <em>Spirituality or religion.</em> Would it help to talk to someone about your spirituality or about the different faith communities you might join in your neighbourhood?\r\n                </Typography>\r\n            }\r\n            </div>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\nimport CommunityParticipationSuggestion from './Suggestions/CommunityParticipationSuggestion';\r\nimport HealthSuggestion from './Suggestions/HealthSuggestion';\r\nimport LonelinessSuggesiton from './Suggestions/LonelinessSuggesiton';\r\nimport SocialContactSuggesiton from './Suggestions/SocialContactSuggestion';\r\nimport SocialSupportSuggesiton from './Suggestions/SocialSupportSuggesiton';\r\nimport WellBeingSuggestion from './Suggestions/WellBeingSuggestion';\r\n\r\nexport default class Suggestions extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n            <>\r\n                <Typography display=\"block\" variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                <em>Goals.</em>  It’s important to take steps now to achieve your wishes and hopes for the future. \r\n                 Thinking about what you would like to see different in your life 1 month, 3 months and 6 months from now, and what you can do to make this happen, can help. \r\n                 Remember, a wish written down with a date becomes a goal.\r\n                 A goal broken down into steps becomes a plan. A plan backed by action becomes reality. Is there anything the community could help you with to make your wishes happen?  \r\n\t\t\t\t</Typography>\r\n\r\n                <HealthSuggestion reports = {this.props.reports} collection = {this.props.collection}/>\r\n                <WellBeingSuggestion reports = {this.props.reports} collection = {this.props.collection}/>\r\n                <SocialSupportSuggesiton reports = {this.props.reports} collection = {this.props.collection}/>\r\n                <LonelinessSuggesiton reports = {this.props.reports} collection = {this.props.collection}/>\r\n                <CommunityParticipationSuggestion reports = {this.props.reports} collection = {this.props.collection}/>\r\n                <SocialContactSuggesiton reports = {this.props.reports} collection = {this.props.collection}/>\r\n                \r\n                 <Typography display=\"block\" variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                 <em>Helping Others. </em> It’s human nature to both get help and to help others, at every age and stage. Do you know anyone who is lonely or could use some extra help?\r\n                  Try reaching out and sharing your time and talent with them.\r\n                  </Typography>\r\n                  <Typography display=\"block\" variant=\"body1\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                  Remember – Being involved in meaningful activities and maintaining close relationships is important. \r\n                  Staying active and helping others is good for your health and good for community! \r\n                  </Typography>\r\n            </>\r\n        )\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default class DashboardPie extends Component {\r\n\r\n\tchartRef = React.createRef();\r\n\r\n\tfindColour = (score) => {\r\n\t\tif (score < 0){\t//identity and handle reverse scoring reflected in colour gauge\r\n\t\t\tscore = score * - 1;\r\n\t\t\tscore = 100 - score;\r\n\t\t}\r\n\r\n\t\tif (score == 0){\r\n\t\t\treturn (\"#7D3C98\");\r\n\t\t}\r\n\t\telse if (score < 24){\r\n\t\t\treturn (\"#E74C3C\");\r\n\t\t}\r\n\t\telse if (score < 50){\r\n\t\t\treturn (\"#F4D03F\");\r\n\t\t}\r\n\t\telse if (score < 75){\r\n\t\t\treturn (\"#F39C12\");\r\n\t\t}\r\n\t\telse if(score < 101){\r\n\t\t\treturn (\"#27AE60\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\"#7D3C98\");\r\n\t\t}\r\n\t}\r\n\r\n\tisComplete = (score ) => {\r\n\t\tif (score < -100 || score > 100) return false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\t//find colour: reverse scoring integrated\r\n\t\t\thealth_colour: this.findColour(this.props.data[0]),\r\n\t\t\tmentalHealth_colour: this.findColour(this.props.data[1]),\r\n\t\t\twellBeing_colour: this.findColour(this.props.data[2]),\r\n\t\t\tlifeSatisfaction_colour: this.findColour(this.props.data[3]),\r\n\t\t\tloneliness_colour: this.findColour(this.props.data[4]),\r\n\r\n\t\t\t//set score numeric value or incomplete\r\n\t\t\thealth_zero: this.isComplete(this.props.data[0]) ? this.props.data[0] : \"Incomplete\",\r\n\t\t\tmentalHealth: this.isComplete((this.props.data[1])) ? this.props.data[1] * -1 : \"Incomplete\", // multiply -1 to display without reverse score flag\r\n\t\t\twellBeing: this.isComplete(this.props.data[2]) ? this.props.data[2] : \"Incomplete\",\r\n\t\t\tlifeSatisfaction: this.isComplete(this.props.data[3]) ? this.props.data[3] : \"Incomplete\",\r\n\t\t\tloneliness: this.props.data[4],\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst ctx = this.chartRef.current.getContext(\"2d\");\r\n\t\t\r\n\t\tnew Chart(ctx, {\r\n\t\t\ttype: \"doughnut\",\r\n      options: {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tposition: 'top',\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tfont: {\r\n\t\t\t\t\t\tsize: 12\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\ttitle: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\ttext: \"At a glance\"\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t}\r\n\t\t},\r\n        scales: {\r\n\t\t\tx: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 5\r\n\t\t\t}\r\n\t\t}\r\n      },\r\n\t\t\t\r\n\t\t\tdata: {\r\n\t\t\t\tlabels: [\"Health score: \" + this.state.health_zero,\r\n\t\t\t\t\t\t \"Mental health score: \" + this.state.mentalHealth,\r\n\t\t\t\t\t\t \"Well-being score: \" + this.state.wellBeing, \r\n\t\t\t\t\t\t \"Life satisfaction score: \" + this.state.lifeSatisfaction,\r\n\t\t\t\t\t\t  \"Loneliness\"],\t//no numeric score for loneliness\r\n\t\t\t\tdatasets: [{ \r\n\t\t\t\t\tdata: [1, 1, 1, 1, 1],\r\n\t\t\t\t\tborderColor: \"#0\",\r\n\t\t\t\t\tbackgroundColor: [this.state.health_colour, this.state.mentalHealth_colour, this.state.wellBeing_colour, \r\n\t\t\t\t\t\t\t\t\t\tthis.state.lifeSatisfaction_colour, this.state.loneliness_colour],\r\n\t\t\t\t\tfill: false,\r\n\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n      \r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<canvas\r\n\t\t\t\tid=\"myChart\"\r\n\t\t\t\tref={this.chartRef}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\nexport default class ContactInfo extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n            <div>\r\n                <Typography display=\"block\" variant=\"p\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                Name: \r\n\t\t\t\t</Typography>\r\n                <Typography display=\"block\" variant=\"p\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                Address: \r\n\t\t\t\t</Typography>\r\n                <Typography display=\"block\" variant=\"p\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                Postal Code: \r\n\t\t\t\t</Typography>\r\n                <Typography display=\"block\" variant=\"p\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                Phone: \r\n\t\t\t\t</Typography>\r\n                <Typography display=\"block\" variant=\"p\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                Phone: \r\n\t\t\t\t</Typography>\r\n                <Typography display=\"block\" variant=\"p\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                Date of birth: {this.props.reports.DOB_PRF_SD}\r\n\t\t\t\t</Typography>\r\n                <Typography display=\"block\" variant=\"p\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                Gender: \r\n\t\t\t\t</Typography>\r\n                <Typography display=\"block\" variant=\"p\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                Email\r\n\t\t\t\t</Typography>\r\n                {\r\n                    <Typography display=\"block\" variant=\"p\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                    Referring Agency: \r\n                    </Typography>\r\n                }\r\n                <Typography display=\"block\" variant=\"p\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                Compassion Hub or Neighbourhood: \r\n\t\t\t\t</Typography>\r\n                <Typography display=\"block\" variant=\"p\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                Neighbours date of completion: {this.props.reports.SRVD_PRF_SD[this.props.collection]}\r\n                \r\n\t\t\t\t</Typography>\r\n                <Typography display=\"block\" variant=\"p\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                Report created: \r\n\t\t\t\t</Typography>\r\n\r\n                \r\n            </div>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default class DashboardCombo extends Component {\r\n\r\n\tchartRef = React.createRef();\r\n\r\n    scoreAverage = (scoreArray) => {\r\n        var sum = 0;\r\n        var validScores = 0;\r\n\r\n        for (var i=0; i<5; i++){\r\n            var score = scoreArray[i];\r\n            if (score < 0){ //reverse scored\r\n\t\t\t\tscore = score * -1;\r\n                score = 100 - score;\r\n            }\r\n            if (this.isComplete(score)){\r\n                sum += score;\r\n                validScores++;\r\n            }\r\n        }\r\n        // console.log(sum + \" \" + validScores);\r\n        return sum/validScores;\r\n    }\r\n\r\n\tfindColour = (score) => {\r\n\t\tif (score < 24){\r\n\t\t\treturn (\"#E74C3C\"); //red\r\n\t\t}\r\n\t\telse if (score < 50){\r\n\t\t\treturn (\"#F4D03F\"); //orange\r\n\t\t}\r\n\t\telse if (score < 75){\r\n\t\t\treturn (\"#F39C12\"); //yellow\r\n\t\t}\r\n\t\telse if(score < 101){\r\n\t\t\treturn (\"#27AE60\"); //green\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\"#7D3C98\"); //purple / incomplete / missing\r\n\t\t}\r\n\t}\r\n\r\n\tisComplete = (score ) => {\r\n\t\tif (score < -100 || score > 100) return false;\r\n\t\treturn true;\r\n\t}\r\n\r\n    calculateBalance = (score) => {\r\n        return 100 - score;\r\n    }\r\n    \r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n            score: this.scoreAverage(this.props.data),\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst ctx = this.chartRef.current.getContext(\"2d\");\r\n\t\t\r\n\t\tnew Chart(ctx, {\r\n\t\t\ttype: \"doughnut\",\r\n      options: {\r\n        rotation: 270, // start angle in degrees\r\n        circumference: 180, // sweep angle in degrees\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tposition: 'top',\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tfont: {\r\n\t\t\t\t\t\tsize: 12\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\ttitle: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\ttext: \"Overall\"\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t}\r\n\t\t},\r\n        scales: {\r\n\t\t\tx: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 5\r\n\t\t\t}\r\n\t\t}\r\n      },\r\n\t\t\t\r\n\t\t\tdata: {\r\n\t\t\t\tlabels: [\"Average score: \" + this.state.score],\t\r\n\t\t\t\tdatasets: [{ \r\n\t\t\t\t\tdata: [this.state.score, 50],\r\n\t\t\t\t\tborderColor: \"#0\",\r\n\t\t\t\t\tbackgroundColor: [this.findColour(this.state.score), \"#FFFFFF\"],\r\n\t\t\t\t\tfill: false,\r\n\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n      \r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<canvas\r\n\t\t\t\tid=\"myChart\"\r\n\t\t\t\tref={this.chartRef}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}","import React, { Component } from \"react\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DashboardPie from \"./Summary/DashbordPie\";\r\nimport DashboardCombo from \"./Summary/DashboardCombo\";\r\n\r\n\r\n\r\nexport default class ReportDashboard extends Component {\r\n    findDashboardValues = (reports, collection) => {\r\n        var health = (reports.HT_QofL2_SD[collection] + reports.PH_QofL2_SD[collection])/2;\r\n\r\n        var mentalHealth = (reports.MH_QofL2_SD[collection] + (reports.AD_QofL2_SD[collection] * 4)) / 2;\r\n        mentalHealth = mentalHealth * -1; //reverseScored  \r\n        \r\n        var wellBeing = reports.PWI_QofL3_COMB[collection];\r\n\r\n        var lifeSatisfaction = reports.LS_QofL3_SD[collection] * 10;\r\n\r\n        //to convert to a score/100 from score/3 && reverse scored\r\n        var loneliness = (reports.PL_QofL1_COMB[collection] / 3) * 100;\r\n        loneliness = loneliness * -1; //reverse scored\r\n        \r\n        return [health, mentalHealth, wellBeing, lifeSatisfaction, loneliness];\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {/* <Typography variant=\"h4\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                    Dashboard\r\n                </Typography> */}\r\n                <div className=\"dashboard-flex\">\r\n                    <div className=\"dashboard-item\">\r\n                        <DashboardPie data={this.findDashboardValues(this.props.reports, this.props.collection)}></DashboardPie>\r\n                    </div>\r\n                    <div className=\"dashboard-item\">\r\n                        <DashboardCombo data={this.findDashboardValues(this.props.reports, this.props.collection)}></DashboardCombo>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","// ================================================\r\n// Code associated with Report.js\r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\"; //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\n// ==================== Components ==================\r\nimport AlertMessage from \"../../components/AlertMessage\";\r\n\r\nimport Summary from \"./Summary\";\r\nimport PossibleConcerns from \"./PossibleConcerns\";\r\nimport Suggestions from \"./Suggestions\";\r\nimport ContactInfo from \"./ContactInfo\";\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from \"../../helpers/models/AlertType\";\r\n\r\nimport get from \"../../helpers/common/get\";\r\nimport post from \"../../helpers/common/post\";\r\n// ==================== MUI =========================\r\nimport { makeStyles } from \"@material-ui/core/styles\"; // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from \"@material-ui/core/Grid\"; // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from \"@material-ui/core/Box\"; // Padding and margins\r\nimport Card from \"@material-ui/core/Card\"; //Like the paper module, a visual sheet to place things\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\"; //h1, p replacement Tag\r\nimport ReportDashboard from \"./ReportDashboard\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\n\r\n// ==================== MUI Icons ====================\r\n\r\n// ==================== MUI Styles ===================\r\n\r\nconst useStyles = makeStyles(\r\n  (\r\n    theme //Notice the hook useStyles\r\n  ) => ({\r\n    root: {\r\n      flexGrow: 1, // CSS determined this way, flexbox properties\r\n      height: \"100%\",\r\n    },\r\n    rootGrid: {\r\n      height: \"100%\",\r\n    },\r\n  })\r\n);\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst Reports = (props) => {\r\n  // Notice the arrow function... regular function()  works too\r\n\r\n  // Variables ===\r\n\r\n  // Style variable declaration\r\n  const classes = useStyles();\r\n\r\n  // Declaration of Stateful Variables ===\r\n  const { appState, ToggleDrawerClose, CheckAuthenticationValidity } = props;\r\n\r\n  // Alert variable\r\n  const [alert, setAlert] = useState(new AlertType());\r\n\r\n  // // Hard-Coded Person item\r\n  // // This is John Cena's\r\n  // const [personId, setPersonId] = useState(\"60e879aac417375c838307b9\");\r\n\r\n  const [reportsData, setReportsData] = useState(null);\r\n  const [patientData, setPatientData] = useState([]);\r\n  const [currentPatient, setCurrentPatient] = useState(\r\n    localStorage.getItem(\"_id\")\r\n  );\r\n  const [currentReportIndex, setCurrentReportIndex] = useState(0);\r\n\r\n  // Functions ===\r\n\r\n  const getPatients = useCallback(() => {\r\n    if (appState.role == \"Patient\") {\r\n      setAlert(\r\n        new AlertType(\"You do not have Permission to recieve Patients\", \"error\")\r\n      );\r\n      return;\r\n    } else {\r\n      if (appState.patients.length <= 0) {\r\n        setAlert(\r\n          new AlertType(\r\n            \"You do not have any patients assigned. In order to start a collection, you must first be assigned a member by an Administrator.\",\r\n            \"error\"\r\n          )\r\n        );\r\n        return;\r\n      }\r\n\r\n      let http_query = {\r\n        _id: {\r\n          $in: appState.patients,\r\n        },\r\n      };\r\n      console.log(http_query._id.$in[0]);\r\n\r\n      post(\"users/query\", appState.token, http_query, (err, res) => {\r\n        if (err) {\r\n          //Bad callback\r\n          setAlert(\r\n            new AlertType(\r\n              \"Unable to retrieve Patients. Please refresh and try again.\",\r\n              \"error\"\r\n            )\r\n          );\r\n        } else {\r\n          if (res.status === 200) {\r\n            setPatientData(res.data.response.users);\r\n          } else {\r\n            //Bad HTTP Response\r\n            setAlert(\r\n              new AlertType(\r\n                \"Unable to retrieve Patients. Please refresh and try again.\",\r\n                \"error\"\r\n              )\r\n            );\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [appState]);\r\n\r\n  const getNeighbours = useCallback(\r\n    (userId) => {\r\n      get(\"reports/neighbours/user/\" + userId, appState.token, (err, res) => {\r\n        if (err) {\r\n          //Bad callback\r\n          setAlert(\r\n            new AlertType(\r\n              \"Unable to retrieve Neighbour Chapter Reports. Please refresh and try again.\",\r\n              \"error\"\r\n            )\r\n          );\r\n        } else {\r\n          if (res.status === 200) {\r\n            if (Object.keys(res.data).length === 0) {\r\n              setReportsData(null);\r\n            } else {\r\n              setReportsData(res.data);\r\n            }\r\n          } else {\r\n            //Bad HTTP Response\r\n            setAlert(\r\n              new AlertType(\r\n                \"Unable to retrieve Neighbour Chapter Reports. Please refresh and try again.\",\r\n                \"error\"\r\n              )\r\n            );\r\n          }\r\n        }\r\n      });\r\n    },\r\n    [appState]\r\n  );\r\n\r\n  const patientSelectHandler = useCallback((event) => {\r\n    setCurrentPatient(event.target.value);\r\n  }, []);\r\n\r\n  const reportsPaginationHandler = useCallback((event, page) => {\r\n    setCurrentReportIndex(page - 1);\r\n  }, []);\r\n\r\n  // Hooks ===\r\n\r\n  // First Render only because of the [ ] empty array tracking with the useEffect\r\n  useEffect(() => {\r\n    ToggleDrawerClose();\r\n    setTimeout(() => {\r\n      CheckAuthenticationValidity((tokenValid) => {\r\n        getPatients(currentPatient);\r\n      });\r\n    }, 200); //\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentPatient != \"\") {\r\n      getNeighbours(currentPatient);\r\n    }\r\n  }, [currentPatient]);\r\n\r\n  // useEffect( () =>\r\n  // {\r\n  //     console.log(currentReportIndex);\r\n\r\n  // }, [ currentReportIndex ]);\r\n\r\n  // Render Section ===\r\n\r\n  return alert != null ? (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        className={classes.rootGrid}\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"stretch\"\r\n        spacing={1}\r\n      >\r\n        {patientData ? (\r\n          <>\r\n            <Grid item xs={8}>\r\n              <Box mx={1} my={1}>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"flex-end\"\r\n                  spacing={2}\r\n                >\r\n                  <Grid item>\r\n                    <AssessmentIcon color=\"primary\" />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      color=\"secondary\"\r\n                      align=\"left\"\r\n                      gutterBottom={false}\r\n                    >\r\n                      Your Reports\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Box mx={1} my={1}>\r\n                {/* <AlertMessage alert={alert} setParentAlert={setAlert} /> */}\r\n                {/* <Button\r\n                                            onClick = { () => {console.log((collectionIndex + 1)%reportsData.SRVNum_PRF_SD.length);}} >\r\n                                            Viewing data from collection {collectionIndex + 1} out of {reportsData.SRVNum_PRF_SD.length}\r\n                                        </Button> */}\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Card raised={true}>\r\n                <Box mx={1} my={1} boxShadow={0}>\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justifyContent=\"flex-start\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={1}\r\n                  >\r\n                    <Grid item xs={12}>\r\n                      <FormControl\r\n                        fullWidth\r\n                        variant=\"filled\"\r\n                        size=\"small\"\r\n                        className={classes.formControl}\r\n                      >\r\n                        <InputLabel id=\"select-label-Member\">Member</InputLabel>\r\n                        <Select\r\n                          className={classes.selectEmpty}\r\n                          labelId=\"select-label-Member\"\r\n                          id=\"select-Member\"\r\n                          defaultValue=\"\"\r\n                          disabled={patientData ? false : true}\r\n                          onChange={(event) => {\r\n                            patientSelectHandler(event);\r\n                          }}\r\n                        >\r\n                          {patientData.map((item, index) => {\r\n                            return (\r\n                              <MenuItem key={item._id} value={item._id}>\r\n                                <em>{item.info.name}</em>\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      {reportsData ? (\r\n                        <Pagination\r\n                          count={reportsData.SRVNum_PRF_SD.length}\r\n                          showFirstButton\r\n                          showLastButton\r\n                          disabled={!reportsData}\r\n                          onChange={(event, page) => {\r\n                            reportsPaginationHandler(event, page);\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <> </>\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Card raised={true}>\r\n                <Box mx={1} my={1} boxShadow={0}>\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justifyContent=\"flex-start\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={1}\r\n                  >\r\n                    {reportsData &&\r\n                    Object.keys(reportsData).length != 0 &&\r\n                    Object.getPrototypeOf(reportsData) === Object.prototype ? (\r\n                      <>\r\n                        <Grid item xs={12}>\r\n                          <Typography variant=\"h4\" color=\"textPrimary\">\r\n                            Compassion Care Community Neighbours Report\r\n                          </Typography>\r\n                          <Divider light />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} id=\"dashboard\">\r\n                          <Typography\r\n                            variant=\"h5\"\r\n                            color=\"textSecondary\"\r\n                            align=\"left\"\r\n                            gutterBottom\r\n                          >\r\n                            Dashboard\r\n                          </Typography>\r\n                          <ReportDashboard\r\n                            reports={reportsData}\r\n                            collection={currentReportIndex}\r\n                          ></ReportDashboard>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} id=\"summary\">\r\n                          <Typography\r\n                            variant=\"h5\"\r\n                            color=\"textSecondary\"\r\n                            align=\"left\"\r\n                            gutterBottom\r\n                          >\r\n                            Summary\r\n                          </Typography>\r\n                          <Summary\r\n                            reports={reportsData}\r\n                            collection={currentReportIndex}\r\n                          />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} id=\"possible concerns\">\r\n                          <Typography\r\n                            variant=\"h5\"\r\n                            color=\"textSecondary\"\r\n                            align=\"left\"\r\n                            gutterBottom\r\n                          >\r\n                            Possible Concerns\r\n                          </Typography>\r\n                          <PossibleConcerns\r\n                            reports={reportsData}\r\n                            collection={currentReportIndex}\r\n                          />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} id=\"suggestions\">\r\n                          <Typography\r\n                            variant=\"h5\"\r\n                            color=\"textSecondary\"\r\n                            align=\"left\"\r\n                            gutterBottom\r\n                          >\r\n                            Suggestions\r\n                          </Typography>\r\n                          <Suggestions\r\n                            reports={reportsData}\r\n                            collection={currentReportIndex}\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Typography\r\n                          variant=\"subtitle2\"\r\n                          color=\"textSecondary\"\r\n                          align=\"left\"\r\n                          gutterBottom\r\n                        >\r\n                          No available reports.\r\n                        </Typography>\r\n                      </>\r\n                    )}\r\n                  </Grid>\r\n                </Box>\r\n              </Card>\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            color=\"textSecondary\"\r\n            align=\"left\"\r\n            gutterBottom\r\n          >\r\n            Persons Data Not Available\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  ) : (\r\n    <Typography variant=\"h6\" color=\"inherit\" align=\"center\" gutterBottom>\r\n      Not Authorized. Please refresh and try again.\r\n    </Typography>\r\n  );\r\n};\r\n\r\n// ======================== Component PropType Check ========================\r\nReports.propTypes = {\r\n  // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n  appState: PropTypes.object.isRequired,\r\n  ToggleDrawerClose: PropTypes.func.isRequired,\r\n  CheckAuthenticationValidity: PropTypes.func.isRequired,\r\n};\r\n\r\nReports.defaultProps = {\r\n  appState: {},\r\n  ToggleDrawerClose: () => {},\r\n  CheckAuthenticationValidity: () => {},\r\n};\r\n\r\nexport default Reports; // You can even shorthand this line by adding this at the function [Component] declaration stage\r\n","// ================================================\r\n// Code associated with ClientReport.js\r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\"; //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\n// ==================== Components ==================\r\nimport AlertMessage from \"../../components/AlertMessage\";\r\n\r\nimport Summary from \"./Summary\";\r\nimport PossibleConcerns from \"./PossibleConcerns\";\r\nimport Suggestions from \"./Suggestions\";\r\nimport ContactInfo from \"./ContactInfo\";\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from \"../../helpers/models/AlertType\";\r\n\r\nimport get from \"../../helpers/common/get\";\r\nimport post from \"../../helpers/common/post\";\r\n// ==================== MUI =========================\r\nimport { makeStyles } from \"@material-ui/core/styles\"; // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from \"@material-ui/core/Grid\"; // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from \"@material-ui/core/Box\"; // Padding and margins\r\nimport Card from \"@material-ui/core/Card\"; //Like the paper module, a visual sheet to place things\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\"; //h1, p replacement Tag\r\nimport ReportDashboard from \"./ReportDashboard\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\n\r\n// ==================== MUI Icons ====================\r\n\r\n// ==================== MUI Styles ===================\r\n\r\nconst useStyles = makeStyles(\r\n  (\r\n    theme //Notice the hook useStyles\r\n  ) => ({\r\n    root: {\r\n      flexGrow: 1, // CSS determined this way, flexbox properties\r\n      height: \"100%\",\r\n    },\r\n    rootGrid: {\r\n      height: \"100%\",\r\n    },\r\n  })\r\n);\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst ClientReports = (props) => {\r\n  // Notice the arrow function... regular function()  works too\r\n\r\n  // Variables ===\r\n\r\n  // Style variable declaration\r\n  const classes = useStyles();\r\n\r\n  // Declaration of Stateful Variables ===\r\n  const { appState, ToggleDrawerClose, CheckAuthenticationValidity } = props;\r\n\r\n  // Alert variable\r\n  const [alert, setAlert] = useState(new AlertType());\r\n\r\n  // // Hard-Coded Person item\r\n  // // This is John Cena's\r\n  // const [personId, setPersonId] = useState(\"60e879aac417375c838307b9\");\r\n\r\n  const [reportsData, setReportsData] = useState(null);\r\n  const [patientData, setPatientData] = useState([]);\r\n  const [currentPatient, setCurrentPatient] = useState(\r\n    localStorage.getItem(\"_id\")\r\n  );\r\n  const [currentReportIndex, setCurrentReportIndex] = useState(0);\r\n\r\n  // Functions ===\r\n\r\n  const getPatients = useCallback(() => {\r\n    if (appState.role == \"Patient\") {\r\n      setAlert(\r\n        new AlertType(\"You do not have Permission to recieve Patients\", \"error\")\r\n      );\r\n      return;\r\n    } else {\r\n      if (appState.patients.length <= 0) {\r\n        setAlert(\r\n          new AlertType(\r\n            \"You do not have any patients assigned. In order to start a collection, you must first be assigned a member by an Administrator.\",\r\n            \"error\"\r\n          )\r\n        );\r\n        return;\r\n      }\r\n\r\n      let http_query = {\r\n        _id: {\r\n          $in: appState.patients,\r\n        },\r\n      };\r\n\r\n      post(\"users/query\", appState.token, http_query, (err, res) => {\r\n        if (err) {\r\n          //Bad callback\r\n          setAlert(\r\n            new AlertType(\r\n              \"Unable to retrieve Patients. Please refresh and try again.\",\r\n              \"error\"\r\n            )\r\n          );\r\n        } else {\r\n          if (res.status === 200) {\r\n            setPatientData(res.data.response.users);\r\n          } else {\r\n            //Bad HTTP Response\r\n            setAlert(\r\n              new AlertType(\r\n                \"Unable to retrieve Patients. Please refresh and try again.\",\r\n                \"error\"\r\n              )\r\n            );\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [appState]);\r\n\r\n  const getNeighbours = useCallback(\r\n    (userId) => {\r\n      get(\"reports/neighbours/user/\" + userId, appState.token, (err, res) => {\r\n        console.log(res);\r\n        if (err) {\r\n          //Bad callback\r\n          setAlert(\r\n            new AlertType(\r\n              \"Unable to retrieve Neighbour Chapter Reports. Please refresh and try again.\"\r\n            )\r\n          );\r\n        } else {\r\n          if (res.status === 200) {\r\n            if (Object.keys(res.data).length === 0) {\r\n              setReportsData(null);\r\n            } else {\r\n              setReportsData(res.data);\r\n            }\r\n          } else {\r\n            //Bad HTTP Response\r\n            setAlert(\r\n              new AlertType(\r\n                \"Unable to retrieve Neighbour Chapter Reports. Please refresh and try again.\",\r\n                \"error\"\r\n              )\r\n            );\r\n          }\r\n        }\r\n      });\r\n    },\r\n    [appState]\r\n  );\r\n\r\n  const patientSelectHandler = useCallback((event) => {\r\n    setCurrentPatient(event.target.value);\r\n  }, []);\r\n\r\n  const reportsPaginationHandler = useCallback((event, page) => {\r\n    setCurrentReportIndex(page - 1);\r\n  }, []);\r\n\r\n  // Hooks ===\r\n\r\n  // First Render only because of the [ ] empty array tracking with the useEffect\r\n  useEffect(() => {\r\n    ToggleDrawerClose();\r\n    setTimeout(() => {\r\n      CheckAuthenticationValidity((tokenValid) => {\r\n        getPatients(currentPatient);\r\n      });\r\n    }, 200); //\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentPatient != \"\") {\r\n      getNeighbours(currentPatient);\r\n    }\r\n  }, [currentPatient]);\r\n\r\n  // useEffect( () =>\r\n  // {\r\n  //     console.log(currentReportIndex);\r\n\r\n  // }, [ currentReportIndex ]);\r\n\r\n  // Render Section ===\r\n\r\n  return alert != null ? (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        className={classes.rootGrid}\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"stretch\"\r\n        spacing={1}\r\n      >\r\n        {patientData ? (\r\n          <>\r\n            <Grid item xs={8}>\r\n              <Box mx={1} my={1}>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"flex-end\"\r\n                  spacing={2}\r\n                >\r\n                  <Grid item>\r\n                    <AssessmentIcon color=\"primary\" />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      color=\"secondary\"\r\n                      align=\"left\"\r\n                      gutterBottom={false}\r\n                    >\r\n                      Your Reports\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Box mx={1} my={1}>\r\n                <AlertMessage alert={alert} setParentAlert={setAlert} />\r\n                {/* <Button\r\n                                            onClick = { () => {console.log((collectionIndex + 1)%reportsData.SRVNum_PRF_SD.length);}} >\r\n                                            Viewing data from collection {collectionIndex + 1} out of {reportsData.SRVNum_PRF_SD.length}\r\n                                        </Button> */}\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Card raised={true}>\r\n                {/* <Box mx={1} my={1} boxShadow={0}>\r\n                  {/* <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justifyContent=\"flex-start\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={1}\r\n                  >\r\n                    {/* <Grid item xs={12}>\r\n                      <FormControl\r\n                        fullWidth\r\n                        variant=\"filled\"\r\n                        size=\"small\"\r\n                        className={classes.formControl}\r\n                      >\r\n                        <InputLabel id=\"select-label-Member\">Member</InputLabel>\r\n                        <Select\r\n                          className={classes.selectEmpty}\r\n                          labelId=\"select-label-Member\"\r\n                          id=\"select-Member\"\r\n                          defaultValue=\"\"\r\n                          disabled={patientData ? false : true}\r\n                          onChange={(event) => {\r\n                            patientSelectHandler(event);\r\n                          }}\r\n                        >\r\n                          {patientData.map((item, index) => {\r\n                            return (\r\n                              <MenuItem key={item._id} value={item._id}>\r\n                                <em>{item.info.name}</em>\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid> */}\r\n                {/* <Grid item xs={12}>\r\n                      {reportsData ? (\r\n                        <Pagination\r\n                          count={reportsData.SRVNum_PRF_SD.length}\r\n                          showFirstButton\r\n                          showLastButton\r\n                          disabled={!reportsData}\r\n                          onChange={(event, page) => {\r\n                            reportsPaginationHandler(event, page);\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <> </>\r\n                      )}\r\n                    </Grid> \r\n                  </Grid> *\r\n                </Box> */}\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Card raised={true}>\r\n                <Box mx={1} my={1} boxShadow={0}>\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justifyContent=\"flex-start\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={1}\r\n                  >\r\n                    {reportsData &&\r\n                    Object.keys(reportsData).length != 0 &&\r\n                    Object.getPrototypeOf(reportsData) === Object.prototype ? (\r\n                      <>\r\n                        <Grid item xs={12}>\r\n                          <Typography variant=\"h4\" color=\"textPrimary\">\r\n                            Compassion Care Community Neighbours Report\r\n                          </Typography>\r\n                          <Divider light />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} id=\"dashboard\">\r\n                          <Typography\r\n                            variant=\"h5\"\r\n                            color=\"textSecondary\"\r\n                            align=\"left\"\r\n                            gutterBottom\r\n                          >\r\n                            Dashboard\r\n                          </Typography>\r\n                          <ReportDashboard\r\n                            reports={reportsData}\r\n                            collection={currentReportIndex}\r\n                          ></ReportDashboard>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} id=\"summary\">\r\n                          <Typography\r\n                            variant=\"h5\"\r\n                            color=\"textSecondary\"\r\n                            align=\"left\"\r\n                            gutterBottom\r\n                          >\r\n                            Summary\r\n                          </Typography>\r\n                          <Summary\r\n                            reports={reportsData}\r\n                            collection={currentReportIndex}\r\n                          />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} id=\"possible concerns\">\r\n                          <Typography\r\n                            variant=\"h5\"\r\n                            color=\"textSecondary\"\r\n                            align=\"left\"\r\n                            gutterBottom\r\n                          >\r\n                            Possible Concerns\r\n                          </Typography>\r\n                          <PossibleConcerns\r\n                            reports={reportsData}\r\n                            collection={currentReportIndex}\r\n                          />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} id=\"suggestions\">\r\n                          <Typography\r\n                            variant=\"h5\"\r\n                            color=\"textSecondary\"\r\n                            align=\"left\"\r\n                            gutterBottom\r\n                          >\r\n                            Suggestions\r\n                          </Typography>\r\n                          <Suggestions\r\n                            reports={reportsData}\r\n                            collection={currentReportIndex}\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Typography\r\n                          variant=\"subtitle2\"\r\n                          color=\"textSecondary\"\r\n                          align=\"left\"\r\n                          gutterBottom\r\n                        >\r\n                          No available reports.\r\n                        </Typography>\r\n                      </>\r\n                    )}\r\n                  </Grid>\r\n                </Box>\r\n              </Card>\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            color=\"textSecondary\"\r\n            align=\"left\"\r\n            gutterBottom\r\n          >\r\n            Persons Data Not Available\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  ) : (\r\n    <Typography variant=\"h6\" color=\"inherit\" align=\"center\" gutterBottom>\r\n      Not Authorized. Please refresh and try again.\r\n    </Typography>\r\n  );\r\n};\r\n\r\n// ======================== Component PropType Check ========================\r\nClientReports.propTypes = {\r\n  // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n  appState: PropTypes.object.isRequired,\r\n  ToggleDrawerClose: PropTypes.func.isRequired,\r\n  CheckAuthenticationValidity: PropTypes.func.isRequired,\r\n};\r\n\r\nClientReports.defaultProps = {\r\n  appState: {},\r\n  ToggleDrawerClose: () => {},\r\n  CheckAuthenticationValidity: () => {},\r\n};\r\n\r\nexport default ClientReports; // You can even shorthand this line by adding this at the function [Component] declaration stage\r\n\r\n/*\r\n\r\n                                    <Card raised={true}>\r\n                                        <Box mx={1} my={1} boxShadow={0}>\r\n                                            <Grid\r\n                                                container\r\n                                                direction=\"column\"\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"stretch\"\r\n                                                spacing={1}\r\n                                            >\r\n                                                <Grid item xs={12}>\r\n                                                    <FormControl fullWidth variant=\"filled\" size=\"small\" className={classes.formControl}>\r\n                                                        <InputLabel id=\"select-label-Member\">Member</InputLabel>\r\n                                                        <Select\r\n        \r\n                                                            className={classes.selectEmpty}\r\n                                                            labelId=\"select-label-Member\"\r\n                                                            id=\"select-Member\"\r\n                                                            defaultValue = \"\"\r\n                                                            disabled={patientData? false : true}\r\n                                                            onChange={(event) => { patientSelectHandler(event); } }\r\n                                                        >\r\n                                                            {patientData.map( (item, index) => \r\n                                                            {\r\n                                                                return(\r\n                                                                    <MenuItem key={item._id} value={item._id}>\r\n                                                                        <em>{item.info.name}</em>\r\n                                                                    </MenuItem>  \r\n                                                                )\r\n                                                            })}\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Grid>\r\n                                                <Grid item xs={12}>\r\n                                                    {reportsData? (\r\n                                                        <Pagination count={reportsData.SRVNum_PRF_SD.length} showFirstButton showLastButton\r\n                                                            disabled={!reportsData}\r\n                                                            onChange={(event, page) => { reportsPaginationHandler(event, page); }}\r\n                                                        />\r\n                                                    ) : (\r\n                                                        <> </>\r\n                                                    )}\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Box>\r\n                                    </Card>\r\n\r\n*/","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// ==================== Helpers ====================\r\nimport get from '../../helpers/common/get'\r\n\r\n// ==================== Components ====================\r\nimport StatusMessage from '../../components/StatusMessage';\r\n\r\n// ==================== MUI ====================\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Tooltip, IconButton } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport People from '@material-ui/icons/People';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\nconst styles = theme => ({\r\n    userCardRoot: {\r\n        flexGrow: 1,\r\n        marginTop: 24\r\n    },\r\n    error: theme.error\r\n});\r\n\r\nclass YourPatients extends Component \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: \"\",\r\n            render: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = async() =>\r\n    {\r\n        await this.props.UpdateUser();\r\n\r\n        this.users = {};\r\n        this.users.library = {};\r\n        this.users.length = 0;\r\n        this.users.patients = 0;\r\n\r\n        this.checkAuth();\r\n    }\r\n\r\n    checkAuth = () =>\r\n    {\r\n        setTimeout(() => {\r\n            this.props.ToggleDrawerClose();\r\n            this.props.CheckAuthenticationValidity((tokenValid) => \r\n            {\r\n                if(tokenValid)\r\n                {\r\n                    this.getUsers();\r\n                }\r\n            });\r\n        }, 200);\r\n    }\r\n\r\n    // Get all patients that are assigned to logged in user\r\n    getUsers = () =>\r\n    {\r\n        let { appState } = this.props;\r\n\r\n        get(\"users/\", appState.token, (error, response) => \r\n        {\r\n            if(error)\r\n            {\r\n                this.setState({\r\n                    error: error.message,\r\n                    render: true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(response.status === 200 || response.status === 304)\r\n                {\r\n                    this.populateStateData(response.data.response);\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        error: \"Unable to retrieve users.  Please refresh and try agian.\",\r\n                        render: true\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    populateStateData = (data) => \r\n    {\r\n        let { appState } = this.props;\r\n        let patientIndex = 0;\r\n\r\n        for (let index = 0; index < data.count; index++) \r\n        {\r\n            if(appState.patients.includes(data.users[index]._id))\r\n            {\r\n                this.users.library[patientIndex] = {\r\n                    _id: data.users[index]._id,\r\n                    name: data.users[index].info.name,\r\n                    role: data.users[index].role,\r\n                    email: data.users[index].email,\r\n                    createdAt: data.users[index].createdAt\r\n                };\r\n\r\n                patientIndex++;\r\n            }\r\n        }\r\n\r\n        this.users.length = patientIndex;\r\n\r\n        this.setState({\r\n            error: \"\",\r\n            render: true\r\n        });\r\n    }\r\n\r\n    createUserCard = ( _id, name, role, email, createdAt) =>\r\n    {\r\n        return { _id, name, role, email, createdAt }\r\n    }\r\n\r\n    // Renders all patient cards with profile information\r\n    renderCards = () =>\r\n    {\r\n        let { \r\n            classes \r\n        } = this.props;\r\n\r\n        var rows = [];\r\n\r\n        for (let index = 0; index < this.users.length; index++) \r\n        {\r\n            rows.push(this.createUserCard(this.users.library[index]._id, \r\n                                          this.users.library[index].name, \r\n                                          this.users.library[index].role,\r\n                                          this.users.library[index].email,\r\n                                          this.users.library[index].createdAt));\r\n        }\r\n\r\n        if(this.users.length === 0)\r\n        {\r\n            return(\r\n                <Typography>\r\n                    You do not have any patients assigned to you yet.  Please wait for an administrator to assign you your members, or contact your administrator directly to ensure they know you currently have no one assigned to you.\r\n                </Typography>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <div className={classes.userCardRoot}>\r\n                    <Grid container spacing={10}>\r\n                        {rows.map((row, index) => {\r\n                            var createdAt = new Date(row.createdAt);\r\n                            return(\r\n                                <Grid item xs={12} sm={12} md={6} lg={4} xl={4} key={index}>\r\n                                        <Card raised={true} variant=\"outlined\">\r\n                                            <CardHeader title={row.name} style={{backgroundColor: \"aliceblue\"}}\r\n                                                 avatar={\r\n                                                    <Avatar aria-label=\"profile\">\r\n                                                      P\r\n                                                    </Avatar>\r\n                                                  }\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Box mx={1} my={0} boxShadow={0}>\r\n                                                    <Grid\r\n                                                        container\r\n                                                        direction=\"column\"\r\n                                                        justifyContent=\"flex-start\"\r\n                                                        alignItems=\"stretch\"\r\n                                                        spacing={1}\r\n                                                    >\r\n                                                        <Grid item xs={12}>\r\n                                                            \r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                            <Typography variant=\"body1\" color=\"textSecondary\" component=\"h2\">\r\n                                                                Role:\r\n                                                            </Typography>\r\n                                                            <Typography variant=\"body2\" component=\"h2\" gutterBottom>\r\n                                                                <em>{row.role}</em>\r\n                                                            </Typography>\r\n                                                            <Typography variant=\"body1\" color=\"textSecondary\" component=\"h2\">\r\n                                                                Email:\r\n                                                            </Typography>\r\n                                                            <Typography variant=\"body2\" component=\"h2\" gutterBottom>\r\n                                                                <em>{row.email}</em>\r\n                                                            </Typography>\r\n                                                            <Typography variant=\"body1\" color=\"textSecondary\" component=\"h2\">\r\n                                                                Joined:\r\n                                                            </Typography>\r\n                                                            <Typography variant=\"body2\" component=\"h2\" gutterBottom>\r\n                                                                <em>{createdAt.getMonth() + 1} / {createdAt.getDate() } / {createdAt.getFullYear()}</em>\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Box>\r\n                                            </CardContent>\r\n                                            <CardActions>\r\n                                                <Tooltip title=\"View Profile\">\r\n                                                    <Button size=\"small\" color=\"primary\" variant=\"contained\" startIcon={<VisibilityIcon />} component={Link} to={\"/profile/\" + row._id}>\r\n                                                        View\r\n                                                    </Button>\r\n                                                </Tooltip>\r\n                                            </CardActions>\r\n                                        </Card>\r\n                                </Grid>\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\trender()\r\n\t{\r\n        let { classes } = this.props;\r\n        let { error, render } = this.state;\r\n\r\n\t\treturn (\r\n            <div>\r\n                { render ? (\r\n                    <Grid container\r\n                        className={classes.rootGrid}\r\n                        direction=\"row\"\r\n                        justifyContent=\"flex-start\"\r\n                        alignItems=\"stretch\"\r\n                        spacing={2}\r\n                    >\r\n                        <Grid item xs={3}>\r\n                            <Box mx={1} my={1}>\r\n                                <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={2}>\r\n                                    <Grid item>\r\n                                        <People color=\"primary\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <Typography variant=\"h5\" color=\"secondary\" align=\"left\" gutterBottom={false}>\r\n                                            Your Members\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>                \r\n                            </Box> \r\n                        </Grid>\r\n                        <Grid item xs={9}>\r\n                            <Box mx={1} my={1}>\r\n                                {/* <AlertMessage alert={alert} setParentAlert={setAlert} /> */}\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Card raised={true} style={{backgroundColor: \"whitesmoke\"}}>\r\n                                <CardContent>\r\n                                <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction=\"column\"\r\n                                            justifyContent=\"flex-start\"\r\n                                            alignItems=\"stretch\"\r\n                                            spacing={1}\r\n                                        >\r\n                                            <Grid item xs={12}>\r\n                                                {error !== \"\" &&\r\n                                                    <StatusMessage color={classes.error}>\r\n                                                        {error}\r\n                                                    </StatusMessage>\r\n                                                }\r\n                                                {this.renderCards()}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box> \r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                ) : (\r\n                    <CircularProgress />\r\n                )}\r\n            </div>            \r\n        );\r\n\t}\r\n}\r\n\r\nYourPatients.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(YourPatients);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// ==================== Helpers ====================\r\nimport get from '../../helpers/common/get'\r\n\r\n// ==================== Components ====================\r\n//import StatusMessage from '../../components/StatusMessage';\r\n\r\n// ==================== MUI ====================\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// ==================== Styles ====================\r\nconst styles = theme =>({\r\n    title: theme.title,\r\n    buttonView: theme.colorGreen,\r\n    buttonEdit: theme.colorBlue,\r\n    buttonDelete: theme.colorRed,\r\n});\r\n\r\nclass Search extends Component \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        // Contains states used to filter search\r\n        this.state = {\r\n            search: \"\",\r\n            booklet: \"\",\r\n            approval: \"\",\r\n            date: \"\",\r\n            error: \"\",\r\n            render: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () =>\r\n    {\r\n        this.membersurveys = {};\r\n        this.membersurveys.library = {};\r\n        this.membersurveys.length = 0;\r\n\r\n        this.booklets = {};\r\n        this.booklets.library = {};\r\n        this.booklets.length = 0;\r\n\r\n        this.props.ToggleDrawerClose();\r\n        this.props.CheckAuthenticationValidity((tokenValid) => \r\n        {\r\n            if(tokenValid)\r\n\t\t\t{\r\n                this.getMemberSurveys();\r\n\t\t\t}\r\n        });\r\n    }\r\n\r\n    // Get all merged documents from the \"membersurvey\" and \"user\" collections in database\r\n    // Get all documents from \"survey\" collection in database\r\n    getMemberSurveys = () =>\r\n    {\r\n        let { appState } = this.props;\r\n\r\n        get(\"membersurveys/user/surveys/\", appState.token, (error, response) => \r\n        {\r\n            if(error)\r\n            {\r\n                this.setState({\r\n                    error: error.message,\r\n                    render: true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(response.status === 200)\r\n                {\r\n                    this.membersurveys.length = response.data.response.count;\r\n                    this.populateMemberSurveyData(response.data.response);\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        error: \"Unable to retrieve member surveys. Please refresh and try again.\",\r\n                        render: true\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        get(\"surveys/\", appState.token, (error, response) => \r\n        {\r\n            if(error)\r\n            {\r\n                this.setState({\r\n                    error: error.message,\r\n                    render: true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(response.status === 200)\r\n                {\r\n                    this.booklets.length = response.data.response.count;\r\n                    this.populateSurveyData(response.data.response);\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        error: \"Unable to retrieve surveys. Please refresh and try again.\",\r\n                        render: true\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // Populates merged \"membersurvey\" and \"user\" data from the database into membersurveys.library \r\n    populateMemberSurveyData = (data) => \r\n    {\r\n        for (let index = 0; index < data.count; index++) \r\n        {\r\n            this.membersurveys.library[index] = {\r\n                _id: data.memberSurveys[index]._id,\r\n                approved: data.memberSurveys[index].approved,\r\n                patientId: data.memberSurveys[index].patientId,\r\n                patientName: data.memberSurveys[index].patientName,\r\n                name: data.memberSurveys[index].name,\r\n                createdBy: data.memberSurveys[index].createdBy,\r\n                modifiedBy: data.memberSurveys[index].modifiedBy,\r\n                createdAt: data.memberSurveys[index].createdAt,\r\n                updatedAt: data.memberSurveys[index].updatedAt\r\n            };\r\n        }\r\n\r\n        this.setState({\r\n            error: \"\",\r\n            render: true\r\n        });\r\n    }\r\n\r\n    // Populates data from \"survey\" collection into booklets.library\r\n    populateSurveyData = (data) => \r\n    {\r\n        for (let index = 0; index < data.count; index++) \r\n        {\r\n            this.booklets.library[index] = {\r\n                _id: data.surveys[index]._id,\r\n                name: data.surveys[index].name\r\n            };\r\n        }\r\n\r\n        this.setState({\r\n            error: \"\",\r\n            render: true\r\n        });\r\n    }\r\n\r\n    //Updates search states \r\n    updateSearch(event) {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    createMemberSurveysRow = (_id, approved, patientId, patientName, name, createdBy, modifiedBy, createdAt, updatedAt) =>\r\n    {\r\n        return { _id, approved, patientId, patientName, name, createdBy, modifiedBy, createdAt, updatedAt }\r\n    }\r\n\r\n    createSurveysRow = (_id, name) =>\r\n    {\r\n        return { _id, name }\r\n    }\r\n\r\n    //Renders the table containing all the data onto the site\r\n    renderMemberSurveysList = () =>\r\n    {\r\n        var mRows = [];\r\n        const mLength = this.membersurveys.length;\r\n\r\n        for (let index = 0; index < mLength; index++) \r\n        {\r\n            mRows.push(this.createMemberSurveysRow(  this.membersurveys.library[index]._id,\r\n                                                    this.membersurveys.library[index].approved,\r\n                                                    this.membersurveys.library[index].patientId,\r\n                                                    this.membersurveys.library[index].patientName,\r\n                                                    this.membersurveys.library[index].name,\r\n                                                    this.membersurveys.library[index].createdBy,\r\n                                                    this.membersurveys.library[index].modifiedBy,\r\n                                                    this.membersurveys.library[index].createdAt,\r\n                                                    this.membersurveys.library[index].updatedAt));\r\n        }\r\n\r\n        var bRows = [];\r\n        const bLength = this.booklets.length;\r\n\r\n        for (let index = 0; index < bLength; index++) \r\n        {\r\n            bRows.push(this.createSurveysRow(this.booklets.library[index]._id,\r\n                                            this.booklets.library[index].name));\r\n        }\r\n\r\n        // filteredSurvey contains the filtered data depending on the user's search by checking\r\n        // if each row passes the user's search criteria in the form of condition statements\r\n        let filteredSurveys = mRows.filter(\r\n            (row) => {\r\n                var createdAt = new Date(row.createdAt);\r\n                var inputDate = new Date(this.state.date);\r\n\r\n                // Patient name check\r\n                return (row.patientName.toLowerCase().indexOf(\r\n                    this.state.search.toLowerCase()) !== -1) &&\r\n                // Booklet name check\r\n                    (row.name.toLowerCase().indexOf(\r\n                        this.state.booklet.toLowerCase()) !== -1) &&\r\n                // Approval check\r\n                    (row.approved.toString().toLowerCase().indexOf(\r\n                        this.state.approval.toLowerCase()) !== -1) &&\r\n                // Created before certain date check\r\n                    (createdAt <= inputDate || this.state.date === \"\");\r\n            }\r\n        );\r\n\r\n        //Check that data isn't empty\r\n        if(bLength === 0)\r\n        {\r\n            return(<Typography>No booklets exist yet.</Typography>);\r\n        }\r\n        else if(mLength === 0)\r\n        {\r\n            return(<Typography>No member surveys exist yet.</Typography>);\r\n        }\r\n        else\r\n        {\r\n            // Ensure all filter input elements have the same \"name\" value as their respective state name\r\n            // and their \"value\" is the current state value of the corresponding state you're filtering.\r\n            return(\r\n                <div>\r\n                    <Typography>\r\n                        <label htmlFor=\"pname\">Patient Name:</label>\r\n                        <br></br>\r\n                        <input type=\"text\"\r\n                            id=\"pname\"\r\n                            name=\"search\"\r\n                            value={this.state.search}\r\n                            onChange={this.updateSearch.bind(this)}\r\n                        />\r\n                        <br></br>\r\n                        <label htmlFor=\"bname\">Booklet Name:</label>\r\n                        <br></br>\r\n                        <select id=\"bname\" \r\n                                name=\"booklet\" \r\n                                onChange={this.updateSearch.bind(this)}>\r\n                            <option value=\"\">All</option>\r\n                            {bRows.map(row =>\r\n                                {return(<option value={row.name}>{row.name}</option>)}\r\n                            )}\r\n                        </select>\r\n                        <br></br>\r\n                        <label htmlFor=\"approval\">Approval Status:</label>\r\n                        <br></br>\r\n                        <select id=\"approval\" \r\n                                name=\"approval\" \r\n                                onChange={this.updateSearch.bind(this)}>\r\n                            <option value=\"\">All</option>\r\n                            <option value=\"false\">Pending Approval</option>\r\n                            <option value=\"true\">Approved</option>\r\n                        </select>\r\n                        <br></br>\r\n                        <label htmlFor=\"date\">Created Before:</label>\r\n                        <br></br>\r\n                        <input type=\"date\" \r\n                               id=\"date\" \r\n                               name=\"date\"\r\n                               onChange={this.updateSearch.bind(this)}       \r\n                        />\r\n                    </Typography>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Patient Name</TableCell>\r\n                                <TableCell align=\"right\">Booklet Name</TableCell>\r\n                                <TableCell align=\"right\">Date Started</TableCell>\r\n                                <TableCell align=\"right\">Status</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {filteredSurveys.map((row, index) => \r\n                            {\r\n                                var userProfileURL = \"/profile/\" + row.patientId;\r\n                                var bookletURL = \"/booklet/\" + row._id;\r\n                                var createdAt = new Date(row.createdAt);\r\n                                var approved = \"Pending Approval\";\r\n\r\n                                if(row.approved)\r\n                                {\r\n                                    approved = \"Approved\"\r\n                                }\r\n\r\n                                return(\r\n                                <TableRow key={index + row.patientId}>\r\n                                    <TableCell key={\"profile\" + row.patientId}>\r\n                                        <Typography component={Link} to={userProfileURL}>\r\n                                            {row.patientName}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell key={\"booklet\" + row._id}>\r\n                                        <Typography component={Link} to={bookletURL}>\r\n                                            {row.name}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell key={\"date\" + row.createdAt} align=\"right\">\r\n                                        {createdAt.getMonth() + 1} / {createdAt.getDate() } / {createdAt.getFullYear()}\r\n                                    </TableCell>\r\n                                    <TableCell key={\"approval\" + row._id} align=\"right\">\r\n                                        {approved}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderError = () => \r\n    {\r\n        return(\r\n            <Typography>\r\n                {this.state.error}\r\n            </Typography>\r\n        );\r\n    }\r\n\r\n\trender()\r\n\t{\r\n        let { \r\n            classes \r\n        } = this.props;\r\n\r\n        let {\r\n            error,\r\n            render\r\n        } = this.state;\r\n\r\n\t\treturn (            \r\n            <Card>\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\r\n                        Search Filter\r\n                    </Typography>\r\n                    { render ? \r\n                        <div>\r\n                            {error === \"\" ? this.renderMemberSurveysList() : this.renderError() } \r\n                        </div>\r\n                    : \r\n                        <CircularProgress />    \r\n                    }\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n\t}\r\n}\r\n\r\nSearch.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Search);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst TextInput = props => {\r\n    let { autoComplete, autoFocus, fullWidth, id, label, margin, onChange, type, value } = props;\r\n    \r\n    return(\r\n        <FormControl margin={margin} required fullWidth={fullWidth}>\r\n            <InputLabel htmlFor={id}>{label}</InputLabel>\r\n            <Input\r\n                id={id} \r\n                name={id}\r\n                type={type}\r\n                {... autoComplete !==\"\" && {autoComplete: autoComplete}} \r\n                value={value} \r\n                onChange={onChange}\r\n                autoFocus={autoFocus}\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nTextInput.propTypes = {\r\n    autoComplete: PropTypes.string,\r\n    autoFocus: PropTypes.bool,\r\n    fullWidth: PropTypes.bool,\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    margin: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    type: PropTypes.string,\r\n    value: PropTypes.string.isRequired\r\n};\r\n\r\nTextInput.defaultProps = {\r\n    autoComplete: \"\",\r\n    autoFocus: false,\r\n    fullWidth: false,\r\n    margin: \"normal\",\r\n    type: \"\"\r\n}\r\n\r\nexport default TextInput;","// ================================================\r\n// Renders all views within the user profile pages,\r\n// which includes booklets completed, patients \r\n// assigned, workers assigned, other user info, etc.\r\n// ================================================\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// ==================== Helpers ====================\r\nimport get from '../../helpers/common/get';\r\nimport post from '../../helpers/common/post';\r\n\r\n// ==================== Components ====================\r\nimport TextInput from '../../components/TextInput';\r\n\r\n// ==================== MUI ====================\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport { CardHeader, Avatar } from '@material-ui/core';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { TextField } from '@material-ui/core';\r\n\r\n// ==================== Icons ====================\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport OpenInBrowser from '@material-ui/icons/OpenInBrowser'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nconst styles = theme => ({\r\n    title: theme.title,\r\n    error: theme.error,\r\n    root: theme.flexWrap,\r\n    tabRoot: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    alignLeftSpacer: theme.alignLeftSpacer,\r\n    rightIcon: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    margin: {\r\n        margin: 10,\r\n    }\r\n});\r\n\r\nconst DialogTitle = withStyles(theme => ({\r\n    root: {\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n}))(props => {\r\n    let { children, classes, onClose } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n            <IconButton aria-label=\"Close\" className={classes.closeButton} onClick={onClose}>\r\n                <CloseIcon />\r\n            </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n  \r\nconst DialogActions = withStyles(theme => ({\r\n    root: {\r\n        borderTop: `1px solid ${theme.palette.divider}`,\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nfunction TabContainer(props) {\r\n    return (\r\n        <Typography component=\"div\" style={{ padding: 8}}>\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nclass ViewProfile extends Component \r\n{\t\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            profileID: \"\",\r\n            loadError: \"\",\r\n            tabValue: 0,\r\n            bookletDialogOpen: false,\r\n            previousVersionDialogOpen: false,\r\n            noteCreationDialogOpen: false,\r\n            noteName: \"\",\r\n            noteMessage: \"\",\r\n            noteError: \"\",\r\n            noteCreating: false,\r\n            render: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () =>\r\n    {\r\n        let { appState } = this.props;\r\n\r\n        this.user = {};\r\n        this.currentBooklet = {};\r\n\r\n        const profileID = this.props.match.params.profileID;\r\n\r\n        this.setState({ profileID: profileID });\r\n\r\n        if(profileID)\r\n        {\r\n            if(appState.role !== \"Admin\")\r\n            {\r\n                if(appState.role === \"Coordinator\")\r\n                {\r\n                    if(!appState.patients.includes(profileID) && !appState.workers.includes(profileID))\r\n                    {\r\n                        this.setState({\r\n                            loadError: \"This user is not a member nor a worker that has been assigned to you.  You do not have permission to view this page.\",\r\n                            render: true\r\n                        });\r\n                    }\r\n                    else\r\n                    {\r\n                        this.checkAuth();\r\n                    }\r\n                }\r\n                else if(appState.role === \"Volunteer\")\r\n                {\r\n                    if(!appState.patients.includes(profileID))\r\n                    {\r\n                        this.setState({\r\n                            loadError: \"This user is not a member that has been assigned to you.  You do not have permission to view this page.\",\r\n                            render: true\r\n                        });\r\n                    }\r\n                    else\r\n                    {\r\n                        this.checkAuth();\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                this.checkAuth();\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this.checkAuth();\r\n        }    \r\n    }\r\n\r\n    componentDidUpdate = () =>\r\n    {\r\n        let { appState } = this.props;\r\n        let { profileID } = this.state;\r\n        const newProfileID = this.props.match.params.profileID;\r\n        \r\n        if(newProfileID !== profileID)\r\n        {\r\n            this.setState({\r\n                render: false,\r\n                profileID: newProfileID,\r\n            })\r\n\r\n            this.loadUserInformation();\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    checkAuth = () =>\r\n    {\r\n        setTimeout(() => {\r\n            this.props.ToggleDrawerClose();\r\n            this.props.CheckAuthenticationValidity((tokenValid) => \r\n            {\r\n                if(tokenValid)\r\n                {\r\n                    this.loadUserInformation();\r\n                }\r\n            });\r\n        }, 200);\r\n    }\r\n\r\n    loadUserInformation = () =>\r\n    {\r\n        let { appState } = this.props;\r\n        const profileID = this.props.match.params.profileID;\r\n\r\n        var _id = \"\";\r\n\r\n        if(profileID == null)\r\n        {\r\n            _id = this.props.appState._id;\r\n        }\r\n        else\r\n        {\r\n            _id = profileID;\r\n        }\r\n\r\n        get(\"users/1/\" + _id, appState.token, (userError, userResponse) => \r\n        {\r\n            if(userError)\r\n            {\r\n                this.setState({\r\n                    loadError: \"Unable to load profile.  Please try again later.\",\r\n                    render: true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(userResponse.status === 200 || userResponse.status === 304)\r\n                {\r\n                    this.user = userResponse.data;   \r\n                    this.setState({\r\n                        loadError: \"Unable to load profile.  Please try again later.\",\r\n                        render: true\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        loadError: \"Unable to load profile.  Please make sure your User ID is correct and you have proper permissions.\",\r\n                        render: true\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    createStickyNote = () =>\r\n    {\r\n        let { appState } = this.props;\r\n        let { noteName, noteMessage } = this.state;\r\n\r\n        const profileID = this.props.match.params.profileID;\r\n\r\n        if(noteName === \"\" || noteMessage === \"\")\r\n        {\r\n            this.setState({\r\n                noteError: \"Please make sure a name and message are filled out.\"\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        var newNote = {\r\n            patientId: profileID,\r\n            level: noteName,\r\n            message: noteMessage,\r\n            open: true,\r\n            createdBy: appState._id,\r\n            modifiedBy: appState._id\r\n        }\r\n\r\n        this.setState({\r\n            noteCreating: true,\r\n        })\r\n\r\n        post(\"stickynotes/\", appState.token, newNote, (error, response) => \r\n        {\r\n            if(error)\r\n            {\r\n                this.setState({ \r\n                    noteError: \"There was an error creating the note, please try again later.\",\r\n                    noteCreating: false\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(response.status === 201)\r\n                {\r\n                    this.setState({\r\n                        noteError: \"\",\r\n                        noteCreating: false,\r\n                        noteCreationDialogOpen: false\r\n                    }, () => {window.location.reload();})\r\n                }\r\n                else\r\n                {\r\n                    this.setState({ \r\n                        noteError: \"There was an error creating the note, please try again later.\",\r\n                        noteCreating: false\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    createBookletRow = (_id, name, approved, approvedBy, approvedByName, dateCreated, createdBy, createdByName, dateLastModified, lastMofifiedBy, lastMofifiedByName) =>\r\n    {\r\n        return {_id, name, approved, approvedBy, approvedByName, dateCreated, createdBy, createdByName, dateLastModified, lastMofifiedBy, lastMofifiedByName}\r\n    }\r\n\r\n    createStickyNoteRow = (_id, level, message, open, dateCreated, createdBy, createdByName, dateLastModified, lastMofifiedBy, lastMofifiedByName) =>\r\n    {\r\n        return {_id, level, message, open, dateCreated, createdBy, createdByName, dateLastModified, lastMofifiedBy, lastMofifiedByName}\r\n    }\r\n\r\n    createUserRow = (_id, email, role, name, createdAt) =>\r\n    {\r\n        return { _id, email, role, name, createdAt }\r\n    }\r\n\r\n    handleTabChange = (event, tabValue) => \r\n    {\r\n        this.setState({ tabValue });\r\n    }\r\n\r\n    HandleChange = event => \r\n    {\r\n        this.setState({ \r\n            [event.target.name]: event.target.value \r\n        });\r\n    };\r\n\r\n    handleBookletDialogOpen = (currentBooklet) =>\r\n    {\r\n        this.currentBooklet = currentBooklet;\r\n\r\n        this.setState({\r\n            bookletDialogOpen: true\r\n        });\r\n    }\r\n\r\n    handleBookletDialogClose = () =>\r\n    {\r\n        this.setState({\r\n            bookletDialogOpen: false\r\n        }); \r\n    }\r\n\r\n    handlePreviousVersionNumber = (currentBooklet) =>\r\n    {\r\n        let getVersions = (survey) =>\r\n        {\r\n            return survey.name === currentBooklet;\r\n        }\r\n\r\n        let previousVersions = this.user.memberSurveys.filter(getVersions);\r\n\r\n        return previousVersions.length\r\n    }\r\n\r\n    handlePreviousVersionsOpen = (currentBooklet, memberSurveys) =>\r\n    {\r\n        this.currentBooklet = currentBooklet;\r\n        this.memberSurveys = memberSurveys;\r\n\r\n        this.setState({\r\n            previousVersionDialogOpen: true\r\n        });\r\n\r\n        let previousVersions = this.user.memberSurveys.filter(getVersions);\r\n\r\n        function getVersions(survey){\r\n            return survey.name === currentBooklet;\r\n        }\r\n    \r\n        this.previousVersions = previousVersions;\r\n    }\r\n\r\n    handlePreviousVersionsClose = () =>\r\n    {\r\n        this.setState({\r\n            previousVersionDialogOpen: false\r\n        }); \r\n    }\r\n\r\n    handleNoteCreationDialogOpen = () =>\r\n    {\r\n        this.setState({\r\n            noteCreationDialogOpen: true\r\n        });\r\n    }\r\n\r\n    handleNoteCreationDialogClose = () =>\r\n    {\r\n        this.setState({\r\n            noteError: \"\",\r\n            noteCreationDialogOpen: false\r\n        });\r\n    }\r\n\r\n    renderBookletTab = () =>\r\n    {\r\n        let { memberSurveys } = this.user;\r\n\r\n        memberSurveys.sort(function(a, b) {\r\n            let x = a.name.toLowerCase();\r\n            let y = b.name.toLowerCase();\r\n            if (x < y) { return -1; }\r\n            if (x > y) { return 1;}\r\n            return 0;\r\n\r\n        })\r\n\r\n        var rows = [];\r\n        const length = this.user.memberSurveys.length;\r\n\r\n        // var query = {};\r\n\r\n        // post(\"membersurveys/query\", this.token, query, (error, response) =>\r\n        // {\r\n        //     if(error)\r\n        //     {\r\n        //         console.log(\"error\", query);\r\n        //     }\r\n        // });\r\n\r\n        if(length == 1)\r\n        {\r\n            rows.push(this.createBookletRow(memberSurveys[0]._id,\r\n                memberSurveys[0].name,\r\n                memberSurveys[0].approved,\r\n                memberSurveys[0].approvedBy,\r\n                memberSurveys[0].approvedByname,\r\n                memberSurveys[0].createdAt,\r\n                memberSurveys[0].createdBy,\r\n                memberSurveys[0].createdByName,\r\n                memberSurveys[0].updatedAt,\r\n                memberSurveys[0].modifiedBy,\r\n                memberSurveys[0].modifiedByName)\r\n            );\r\n        }\r\n\r\n        // More than 1\r\n        //messy but decently time effecient\r\n        //way to find most recent version of each unique booklet\r\n        let index = 1;\r\n        let recent = 0;\r\n        while(index < length){     \r\n            if(memberSurveys[index].name === memberSurveys[recent].name){\r\n                if(memberSurveys[index].createdAt > memberSurveys[recent].createdAt){\r\n                    recent = index++;\r\n                }\r\n                else{ \r\n                    ++index; }\r\n            }\r\n            else{\r\n                rows.push(this.createBookletRow(memberSurveys[recent]._id,\r\n                    memberSurveys[recent].name,\r\n                    memberSurveys[recent].approved,\r\n                    memberSurveys[recent].approvedBy,\r\n                    memberSurveys[recent].approvedByname,\r\n                    memberSurveys[recent].createdAt,\r\n                    memberSurveys[recent].createdBy,\r\n                    memberSurveys[recent].createdByName,\r\n                    memberSurveys[recent].updatedAt,\r\n                    memberSurveys[recent].modifiedBy,\r\n                    memberSurveys[recent].modifiedByName));\r\n                recent = index++;\r\n            }\r\n        } \r\n        // rows.push(this.createBookletRow(memberSurveys[recent]._id,\r\n        //     memberSurveys[recent].name,\r\n        //     memberSurveys[recent].approved,\r\n        //     memberSurveys[recent].approvedBy,\r\n        //     memberSurveys[recent].approvedByname,\r\n        //     memberSurveys[recent].createdAt,\r\n        //     memberSurveys[recent].createdBy,\r\n        //     memberSurveys[recent].createdByName,\r\n        //     memberSurveys[recent].updatedAt,\r\n        //     memberSurveys[recent].modifiedBy,\r\n        //     memberSurveys[recent].modifiedByName));\r\n\r\n\r\n        if(length === 0)\r\n        {\r\n            return(<Typography>There are no chapters for this user yet.</Typography>);\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Chapter Name</TableCell>\r\n                            <TableCell align=\"right\">Date Started</TableCell>\r\n                            <TableCell align=\"right\">Status</TableCell>\r\n                            <TableCell align=\"right\">Previous Versions</TableCell>\r\n                            <TableCell align=\"right\">Details</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row, index) => \r\n                        {\r\n                            var bookletURL = \"/booklet/\" + row._id;\r\n                            var createdAt = new Date(row.dateCreated);\r\n                            var approved = \"Pending Approval\";\r\n\r\n                            if(row.approved)\r\n                            {\r\n                                approved = \"Approved\"\r\n                            }\r\n\r\n                            return(\r\n                            <TableRow key={index}>\r\n                                <TableCell>\r\n                                    <Typography component={Link} to={bookletURL}>\r\n                                        {row.name}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    {createdAt.getMonth() + 1} / {createdAt.getDate() } / {createdAt.getFullYear()}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    {approved === \"Approved\"? (\r\n                                        <Typography style={{color: \"green\"}}>Approved</Typography>\r\n                                    ) : (\r\n                                        <Typography style={{color: \"blue\"}}>Pending</Typography>\r\n                                    )}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => this.handlePreviousVersionsOpen(row.name, memberSurveys)}\r\n                                    endIcon={<OpenInBrowser fontSize=\"small\" />}\r\n                                >\r\n                                    {this.handlePreviousVersionNumber(row.name)}\r\n                                </Button>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <IconButton aria-label=\"View\" onClick={() => this.handleBookletDialogOpen(row)}>\r\n                                        <InfoIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderPreviousVersions = () =>\r\n    {\r\n        let { previousVersionDialogOpen } = this.state;\r\n\r\n        if(this.previousVersions){\r\n            return(\r\n                <div>\r\n                   <Dialog\r\n                        onClose={this.handlePreviousVersionsClose}\r\n                        aria-labelledby=\"Link-Dialog\"\r\n                        open={previousVersionDialogOpen}\r\n                    >\r\n                            \r\n                            <DialogContent>\r\n                              <List>\r\n\r\n                              {this.previousVersions.map(previousVersion => {\r\n                                var bookletURL = \"/booklet/\" + previousVersion._id;\r\n                                return (\r\n                                    <ListItem key={previousVersion._id}> \r\n                                        <Link to={bookletURL}>\r\n                                            {previousVersion.name} created on {previousVersion.createdAt}\r\n                                        </Link> \r\n                                    </ListItem>\r\n                                )\r\n                              })}\r\n\r\n                              </List>\r\n                            </DialogContent>\r\n                    </Dialog>\r\n                </div>\r\n            );\r\n        }\r\n        else return(<div>\r\n            <Dialog\r\n                 onClose={this.handlePreviousVersionsClose}\r\n                 aria-labelledby=\"Delete-Dialog\"\r\n                 open={previousVersionDialogOpen}\r\n             >\r\n                 <DialogTitle id=\"Delete-Dialog\" onClose={this.handlePreviousVersionsClose}>\r\n                     {this.currentBooklet.name}\r\n                 </DialogTitle>                \r\n                     <DialogContent>\r\n                       <List>\r\n                       </List>\r\n                     </DialogContent>\r\n             </Dialog>\r\n         </div>);\r\n        \r\n\r\n    }\r\n\r\n    renderStickyNotesTab = () =>\r\n    {        \r\n        let { classes } = this.props;\r\n        let { stickyNotes } = this.user;\r\n\r\n        var rows = [];\r\n        const length = stickyNotes.length;\r\n\r\n        for (let index = 0; index < length; index++) \r\n        {\r\n            rows.push(this.createStickyNoteRow(stickyNotes[index]._id,\r\n                                               stickyNotes[index].level,\r\n                                               stickyNotes[index].message,\r\n                                               stickyNotes[index].open,\r\n                                               stickyNotes[index].createdAt,\r\n                                               stickyNotes[index].createdBy._id,\r\n                                               stickyNotes[index].createdBy.info.name,\r\n                                               stickyNotes[index].updatedAt,\r\n                                               stickyNotes[index].modifiedBy._id,\r\n                                               stickyNotes[index].modifiedBy.info.name));\r\n        }\r\n\r\n        if(length === 0)\r\n        {\r\n            return(\r\n                <div className={classes.root}>\r\n                    <Typography>\r\n                        There are no sticky notes attatched to this user yet.\r\n                    </Typography>\r\n                    <div className={classes.alignLeftSpacer}>\r\n                        <Tooltip title=\"Create Sticky Note\">\r\n                            <Button size=\"small\" color=\"primary\" variant=\"contained\" startIcon={<AddCircleIcon />} onClick={this.handleNoteCreationDialogOpen}>\r\n                                Sticky Note\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <div>\r\n                    <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Type</TableCell>\r\n                            <TableCell align=\"right\">Message</TableCell>\r\n                            <TableCell align=\"right\">Date Created</TableCell>\r\n                            <TableCell align=\"right\">Created By</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row, index) => \r\n                        {                            \r\n                            var createdAt = new Date(row.dateCreated);\r\n                            var url = \"/profile/\" + row.createdBy;\r\n                            return(\r\n                            <TableRow key={index}>\r\n                                <TableCell>\r\n                                        {row.level === \"Info\"? (\r\n                                            <Alert severity=\"info\">Info Status</Alert>\r\n                                        ) : (\r\n                                            null\r\n                                        )}\r\n                                        {row.level === \"Warning\"? (\r\n                                            <Alert severity=\"warning\">Warning Status</Alert>\r\n                                        ) : (\r\n                                            null\r\n                                        )}\r\n                                        {row.level === \"Danger\"? (\r\n                                            <Alert severity=\"error\">Danger Status</Alert>\r\n                                        ) : (\r\n                                            null\r\n                                        )}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Typography>\r\n                                        {row.message}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    {createdAt.getMonth() + 1} / {createdAt.getDate() } / {createdAt.getFullYear()}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Typography>\r\n                                        <em>{row.createdByName}</em>\r\n                                        {/* <a href={url}>{row.createdByName}</a> */}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                    </Table>\r\n                    <br />\r\n                    <div className={classes.root}>\r\n                        <div className={classes.alignLeftSpacer}>\r\n                            <Tooltip title=\"Create Sticky Note\">\r\n                                <Button size=\"small\" color=\"primary\" variant=\"contained\" startIcon={<AddCircleIcon />} onClick={this.handleNoteCreationDialogOpen}>\r\n                                    Sticky Note\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderUserTab = (data) =>\r\n    {\r\n        let { classes } = this.props;\r\n        \r\n        var rows = [];\r\n        const length = data.length;\r\n        \r\n\r\n        for (let index = 0; index < length; index++) \r\n        {\r\n            \r\n\r\n            rows.push(this.createUserRow(data[index]._id,\r\n                                         data[index].email,\r\n                                         data[index].role,\r\n                                         data[index].info.name,\r\n                                         data[index].createdAt));\r\n        }\r\n\r\n        if(length === 0)\r\n        {\r\n            return(\r\n                <div className={classes.root}>\r\n                    <Typography>\r\n                        There are no patients assigned to this user.\r\n                    </Typography>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell align=\"right\">Email</TableCell>\r\n                            <TableCell align=\"right\">Date Joined</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row, index) => \r\n                        {                            \r\n                            var createdAt = new Date(row.createdAt);\r\n                            var url = \"/profile/\" + row._id;\r\n                            return(\r\n                            <TableRow key={index}>\r\n                                <TableCell>\r\n                                    <Typography>\r\n                                        <a href={url}>{row.name}</a>\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Typography>\r\n                                        {row.email}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    {createdAt.getMonth() + 1} / {createdAt.getDate() } / {createdAt.getFullYear()}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderInfoTab = () =>\r\n    {\r\n        let user = this.user;\r\n\r\n        return(\r\n            <Box my={3}>\r\n                <Grid spacing={3} container>\r\n                    <Grid item xs={6}>\r\n                        <TextField id=\"email\" variant=\"outlined\" fullWidth label=\"Email\" value={user.user.email} readOnly />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField id=\"Name\" variant=\"outlined\" fullWidth label=\"Name\" value={user.user.info.name} readOnly />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField id=\"Phone\" variant=\"outlined\" fullWidth label=\"Phone\" value={user.user.info.phone} readOnly />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField id=\"Address\" variant=\"outlined\" fullWidth label=\"Address\" value={user.user.info.currentAddress.street} readOnly />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField id=\"City\" variant=\"outlined\" fullWidth label=\"City\" value={user.user.info.currentAddress.city} readOnly />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField id=\"State\" variant=\"outlined\" fullWidth label=\"State\" value={user.user.info.currentAddress.state} readOnly />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField id=\"Zip\" variant=\"outlined\" fullWidth label=\"Zip/Postal Code\" value={user.user.info.currentAddress.code} readOnly />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField id=\"Country\" variant=\"outlined\" fullWidth label=\"Country\" value={user.user.info.currentAddress.country} readOnly />\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n            \r\n        );\r\n    }\r\n\r\n    renderBookletDialog = () =>\r\n    {\r\n        let { bookletDialogOpen } = this.state;\r\n        let { name } = this.user.user;\r\n\r\n        return(\r\n            <div>\r\n                <Dialog\r\n                    onClose={this.handleBookletDialogClose}\r\n                    aria-labelledby=\"Delete-Dialog\"\r\n                    open={bookletDialogOpen}\r\n                >\r\n                    <DialogTitle id=\"Delete-Dialog\" onClose={this.handleBookletDialogClose}>\r\n                        {this.currentBooklet.name}\r\n                    </DialogTitle>                \r\n                        <DialogContent>\r\n                            <Typography gutterBottom>\r\n                                Here is all the important information for the {this.currentBooklet.name} for {name}:\r\n                            </Typography>\r\n                            <br />\r\n                            <Typography gutterBottom>\r\n                                Chapter Started: {this.currentBooklet.dateCreated}\r\n                            </Typography>\r\n                            <Typography gutterBottom>\r\n                                Started By: {this.currentBooklet.createdByName}\r\n                            </Typography>\r\n                            <Typography gutterBottom>\r\n                                Chapter Last Modified: {this.currentBooklet.dateLastModified}\r\n                            </Typography>\r\n                            <Typography gutterBottom>\r\n                                Last Modified By: {this.currentBooklet.lastMofifiedByName}\r\n                            </Typography>\r\n                            <br />\r\n                            {this.currentBooklet.approved ? \r\n                                <Typography gutterBottom>\r\n                                    This Chapter has been approved by {this.currentBooklet.approvedByName}.        \r\n                                </Typography>\r\n                            :\r\n                                <Typography gutterBottom>\r\n                                    This Chapter has not been approved yet.\r\n                                </Typography>\r\n                            }\r\n                        </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"primary\" onClick={this.handleBookletDialogClose}>\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderNoteCreationDialog = () =>\r\n    {\r\n        let { classes } = this.props;\r\n        let { noteCreationDialogOpen, noteName, noteMessage, noteError, noteCreating } = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <Dialog\r\n                    onClose={this.handleNoteCreationDialogClose}\r\n                    aria-labelledby=\"Creation-Dialog\"\r\n                    open={noteCreationDialogOpen}\r\n                >\r\n                    <DialogTitle id=\"Creation-Dialog\" onClose={this.handleNoteCreationDialogClose}>\r\n                        Create a new Sticky Note\r\n                    </DialogTitle>                \r\n                    <DialogContent>\r\n                        <Typography gutterBottom>\r\n                            Please provide a name for this sticky note as well as a message.  This note will be visible to all users who have access to this member.\r\n                        </Typography>\r\n                        <form className={classes.root}>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"noteName\">Priority</InputLabel>\r\n                            <Select\r\n                                value={noteName}\r\n                                onChange={this.HandleChange}\r\n                                inputProps={{\r\n                                    name: 'noteName',\r\n                                    id: 'noteName',\r\n                                }}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>Select Message Importance</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={\"Info\"}>Info</MenuItem>\r\n                                <MenuItem value={\"Warning\"}>Warning</MenuItem>\r\n                                <MenuItem value={\"Danger\"}>Danger</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"noteMessage\">Message</InputLabel>\r\n                            <Input \r\n                                id=\"noteMessage\" \r\n                                name=\"noteMessage\"\r\n                                value={noteMessage} \r\n                                onChange={this.HandleChange}\r\n                            />\r\n                        </FormControl>\r\n                        </form>\r\n                        { noteError !== \"\" &&\r\n                            <Typography gutterBottom className={classes.error}>\r\n                                {noteError}\r\n                            </Typography>\r\n                        }\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"secondary\" onClick={this.createStickyNote} disabled={noteCreating}>\r\n                            Create Note\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={this.handleNoteCreationDialogClose}>\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\trender()\r\n\t{\r\n        let { profileID } = this.state\r\n\r\n        let { classes } = this.props;\r\n        let { render, tabValue } = this.state;\r\n\r\n        if(render)\r\n        {\r\n            let { createdAt, info, patients, role, workers } = this.user.user;\r\n\r\n            var dateCreated = new Date(createdAt);\r\n            \r\n            return (\r\n                <Grid container key={dateCreated}\r\n                    className={classes.rootGrid}\r\n                    direction=\"row\"\r\n                    justifyContent=\"flex-start\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={2}\r\n                >\r\n                    <Grid item xs={3}>\r\n                        <Box mx={1} my={1}>\r\n                            <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={2}>\r\n                                <Grid item>\r\n                                    <AccountBoxIcon color=\"primary\"/>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <Typography variant=\"h5\" color=\"secondary\" align=\"left\" gutterBottom={false}>\r\n                                        {profileID == null? (\r\n                                            `Your Profile`\r\n                                        ) : (\r\n                                            `Viewing Profile`\r\n                                        )}\r\n                                        \r\n                                    </Typography>\r\n                                </Grid>\r\n                                {profileID == null? (\r\n                                    null\r\n                                ) : (\r\n                                    <Grid item xs={12}>\r\n                                        <Button\r\n                                            color=\"default\"\r\n                                            startIcon={<ArrowBackIosIcon />}\r\n                                            component={Link}\r\n                                            to=\"/your/\"\r\n                                        >\r\n                                            Your Members\r\n                                        </Button>\r\n                                    </Grid>\r\n                                )}\r\n                            </Grid>                \r\n                        </Box> \r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <Box mx={1} my={1}>\r\n                            {/* <AlertMessage alert={alert} setParentAlert={setAlert} /> */}\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Card raised={true}>\r\n                            <CardHeader title={info.name} style={{backgroundColor: \"aliceblue\"}}\r\n                                avatar={\r\n                                    <Avatar aria-label=\"profile\">\r\n                                        P\r\n                                    </Avatar>\r\n                                }\r\n                            />\r\n                            <CardContent>\r\n                                <Box mx={1} my={1} boxShadow={0}>\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"column\"\r\n                                        justifyContent=\"flex-start\"\r\n                                        alignItems=\"stretch\"\r\n                                        spacing={1}\r\n                                    >\r\n                                        <Grid item xs={12}>\r\n                                            <Typography variant=\"body1\" color=\"textSecondary\" component=\"h2\">\r\n                                                Role:\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" component=\"h2\" gutterBottom>\r\n                                                <em>{role}</em>\r\n                                            </Typography>\r\n                                            <Typography variant=\"body1\" color=\"textSecondary\" component=\"h2\">\r\n                                                Joined:\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" component=\"h2\" gutterBottom>\r\n                                                <em>{dateCreated.getMonth() + 1} / {dateCreated.getDate() } / {dateCreated.getFullYear()}</em>\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            {role === \"Patient\" &&\r\n                                                <div className={classes.tabRoot}>\r\n                                                    <AppBar position=\"static\">\r\n                                                        <Tabs value={tabValue} onChange={this.handleTabChange}>\r\n                                                            <Tab label=\"Chapters\" />\r\n                                                            <Tab label=\"Sticky Notes\" />\r\n                                                            <Tab label=\"Profile\" />\r\n                                                        </Tabs>\r\n                                                    </AppBar>\r\n                                                    {tabValue === 0 && <TabContainer>{this.renderBookletTab()}</TabContainer>}\r\n                                                    {tabValue === 1 && <TabContainer>{this.renderStickyNotesTab()}</TabContainer>}\r\n                                                    {tabValue === 2 && <TabContainer>{this.renderInfoTab()}</TabContainer>}\r\n                                                </div>\r\n                                            }\r\n                                            {role === \"Worker\" &&\r\n                                                <div className={classes.tabRoot}>\r\n                                                    <AppBar position=\"static\">\r\n                                                        <Tabs value={tabValue} onChange={this.handleTabChange}>\r\n                                                            <Tab label=\"Patients\" />\r\n                                                            <Tab label=\"Profile\" />\r\n                                                        </Tabs>\r\n                                                    </AppBar>\r\n                                                    {tabValue === 0 && <TabContainer>{this.renderUserTab(patients)}</TabContainer>}\r\n                                                    {tabValue === 1 && <TabContainer>{this.renderInfoTab()}</TabContainer>}\r\n                                                </div>\r\n                                            }\r\n                                            {role === \"Coordinator\" &&\r\n                                                <div className={classes.tabRoot}>\r\n                                                    <AppBar position=\"static\">\r\n                                                        <Tabs value={tabValue} onChange={this.handleTabChange}>\r\n                                                            <Tab label=\"Patients\" />\r\n                                                            <Tab label=\"Workers\" />\r\n                                                            <Tab label=\"Profile\" />\r\n                                                        </Tabs>\r\n                                                    </AppBar>\r\n                                                    {tabValue === 0 && <TabContainer>{this.renderUserTab(patients)}</TabContainer>}\r\n                                                    {tabValue === 1 && <TabContainer>{this.renderUserTab(workers)}</TabContainer>}\r\n                                                    {tabValue === 2 && <TabContainer>{this.renderInfoTab()}</TabContainer>}\r\n                                                </div>\r\n                                            }\r\n                                            {role === \"Admin\" &&\r\n                                                <div className={classes.tabRoot}>\r\n                                                    <AppBar position=\"static\">\r\n                                                        <Tabs value={tabValue} onChange={this.handleTabChange}>\r\n                                                            <Tab label=\"Patients\" />\r\n                                                            <Tab label=\"Workers\" />\r\n                                                            <Tab label=\"Profile\" />\r\n                                                        </Tabs>\r\n                                                    </AppBar>\r\n                                                    {tabValue === 0 && <TabContainer>{this.renderUserTab(patients)}</TabContainer>}\r\n                                                    {tabValue === 1 && <TabContainer>{this.renderUserTab(workers)}</TabContainer>}\r\n                                                    {tabValue === 2 && <TabContainer>{this.renderInfoTab()}</TabContainer>}\r\n                                                </div>\r\n                                            }\r\n                                            {this.renderBookletDialog()}\r\n                                            {this.renderPreviousVersions()}\r\n                                            {this.renderNoteCreationDialog()}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box> \r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return(<CircularProgress />);\r\n        }\r\n\t}\r\n}\r\n\r\nViewProfile.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ViewProfile);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// ==================== Helpers ====================\r\nimport get from '../../../helpers/common/get';\r\n\r\n// ==================== Components ====================\r\nimport StatusMessage from '../../../components/StatusMessage';\r\n\r\n// ==================== MUI ====================\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles, /* createTheme, MuiThemeProvider */} from '@material-ui/core/styles';\r\n\r\n// ==================== Colors ====================\r\n// import green from '@material-ui/core/colors/green';\r\n// import red from '@material-ui/core/colors/red';\r\n\r\nconst styles = theme => ({\r\n    userCardRoot: {\r\n        flexGrow: 1,\r\n        marginTop: 24\r\n    },\r\n    error: theme.error\r\n});\r\n\r\n//Is working, just no code uses it right now\r\n// const enableTheme = createTheme({\r\n//     palette: {\r\n//         primary: green\r\n//     }\r\n// });\r\n\r\n// const deleteTheme = createTheme({\r\n//     palette: {\r\n//         primary: red\r\n//     }\r\n// });\r\n\r\nclass UsersManagement extends Component \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: \"\",\r\n            render: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () =>\r\n    {\r\n        this.users = {};\r\n        this.users.library = {};\r\n        this.users.length = 0;\r\n\r\n        this.props.ToggleDrawerClose();\r\n        this.props.CheckAuthenticationValidity((tokenValid) => \r\n        {\r\n            if(tokenValid)\r\n\t\t\t{\r\n\t\t\t\tthis.getUsers();\r\n\t\t\t}\r\n        });\r\n    }\r\n\r\n    getUsers = () =>\r\n    {\r\n        let { appState } = this.props;\r\n\r\n        get(\"users/\", appState.token, (error, response) => \r\n        {\r\n            if(error)\r\n            {\r\n                this.setState({\r\n                    error: error.message,\r\n                    render: true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(response.status === 200 || response.status === 304)\r\n                {\r\n                    this.users.length = response.data.response.count;\r\n                    this.populateStateData(response.data.response);\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        error: \"Unable to retrieve users.  Please refresh and try agian.\",\r\n                        render: true\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    populateStateData = (data) => \r\n    {\r\n        for (let index = 0; index < data.count; index++) \r\n        {\r\n            this.users.library[index] = {\r\n                _id: data.users[index]._id,\r\n                enabled: data.users[index].enabled,\r\n                name: data.users[index].info.name,\r\n                role: data.users[index].role,\r\n                email: data.users[index].email,\r\n                createdAt: data.users[index].createdAt\r\n            };\r\n        }\r\n\r\n        this.setState({\r\n            error: \"\",\r\n            render: true\r\n        });\r\n    }\r\n\r\n    createUserCard = ( _id, enabled, name, role, email, createdAt) =>\r\n    {\r\n        return { _id, enabled, name, role, email, createdAt }\r\n    }\r\n\r\n    renderCards = () =>\r\n    {\r\n        let { classes } = this.props;\r\n\r\n        var rows = [];\r\n\r\n        for (let index = 0; index < this.users.length; index++) \r\n        {\r\n            rows.push(this.createUserCard(this.users.library[index]._id,\r\n                                          this.users.library[index].enabled,\r\n                                          this.users.library[index].name,\r\n                                          this.users.library[index].role,\r\n                                          this.users.library[index].email,\r\n                                          this.users.library[index].createdAt));\r\n        }\r\n\r\n        if(this.users.length === 0)\r\n        {\r\n            return(\r\n                <Typography>\r\n                    There are no Users yet! Not sure how this is possible ...\r\n                </Typography>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <div className={classes.userCardRoot}>\r\n                    <Grid container spacing={10}>\r\n                        {rows.map((row, index) => {\r\n                            var createdAt = new Date(row.createdAt);\r\n                            return(\r\n                                <Grid item xs={12} sm={12} md={6} lg={6} xl={4} key={index}>\r\n                                    <Paper>\r\n                                        <Card>\r\n                                            <CardContent>\r\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                    {row.name}\r\n                                                </Typography>\r\n                                                <Typography component=\"p\">\r\n                                                    Role: {row.role}\r\n                                                </Typography>\r\n                                                <Typography component=\"p\">\r\n                                                    Email: {row.email}\r\n                                                </Typography>\r\n                                                <Typography component=\"p\">\r\n                                                    Status: {row.enabled ? \"Enabled\" : \"Disabled\"}\r\n                                                </Typography>\r\n                                                <Typography component=\"p\">\r\n                                                    Joined: {createdAt.getMonth() + 1} / {createdAt.getDate() } / {createdAt.getFullYear()}\r\n                                                </Typography>\r\n                                                <hr />\r\n                                                <Grid container spacing={10}>\r\n                                                    <Grid item xs={4}>\r\n                                                        <Button size=\"small\" variant=\"contained\" fullWidth color=\"primary\" component={Link} to={\"/profile/\" + row._id}>\r\n                                                            View Profile\r\n                                                        </Button>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={4}>\r\n                                                        <Button size=\"small\" variant=\"contained\" fullWidth color=\"primary\" component={Link} to={\"/administration/users/edit/\" + row._id}>\r\n                                                            Edit Profile\r\n                                                        </Button>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid container spacing={10}>\r\n                                                    {row.role === \"Patient\" &&\r\n                                                        <Grid item xs={4}>\r\n                                                            <Button size=\"small\" variant=\"contained\" fullWidth color=\"secondary\" component={Link} disabled={row.role !== \"Patient\"} to={\"/administration/users/research/\" + row._id}>\r\n                                                                Research\r\n                                                            </Button>\r\n                                                        </Grid>\r\n                                                    }\r\n                                                    <Grid item xs={4}>\r\n                                                            <Button size=\"small\" variant=\"contained\" fullWidth color=\"secondary\" component={Link} to={\"/administration/users/ed/\" + row._id}>\r\n                                                                {row.enabled ? \r\n                                                                    \"Disable\"\r\n                                                                :\r\n                                                                    \"Enable\"\r\n                                                                }\r\n                                                            </Button>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\trender()\r\n\t{\r\n        let { classes } = this.props;\r\n        let { error, render } = this.state;\r\n\r\n\t\treturn (\r\n            <div>\r\n                { render ? \r\n                    <div>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\r\n                                    User Management\r\n                                </Typography>\r\n                                {error !== \"\" &&\r\n                                    <StatusMessage color={classes.error}>\r\n                                        {error}\r\n                                    </StatusMessage>\r\n                                }\r\n                                {this.renderCards()}\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                :\r\n                    <CircularProgress />\r\n                }\r\n            </div>            \r\n        );\r\n\t}\r\n}\r\n\r\nUsersManagement.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(UsersManagement);","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport { TableHead } from '@material-ui/core';\r\nimport { TableRow } from '@material-ui/core';\r\nimport { TableCell } from '@material-ui/core';\r\nimport { TableSortLabel } from '@material-ui/core';\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\n// ==================== MUI Icons ====================\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        visuallyHidden: {\r\n            border: 0,\r\n            clip: 'rect(0 0 0 0)',\r\n            height: 1,\r\n            margin: -1,\r\n            overflow: 'hidden',\r\n            padding: 0,\r\n            position: 'absolute',\r\n            top: 20,\r\n            width: 1,\r\n          }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n    const headCellsUserChapters = [ //This is a user specified array is used to populate the table header cells. Notice the Template Specifications\r\n        { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\r\n        { id: 'sequenceId', numeric: false, disablePadding: false, label: 'Sequence ID' },\r\n        { id: 'enabled', numeric: false, disablePadding: true, label: 'Enabled' },\r\n        { id: 'email', numeric: false, disablePadding: true, label: 'Email' },\r\n        { id: 'role', numeric: false, disablePadding: true, label: 'Role' }\r\n    ];\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst UserTableHead = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n\r\n        const [headCells, setHeadCells] = useState(headCellsUserChapters);\r\n\r\n        \r\n    // Functions ===\r\n\r\n        const createSortHandler = useCallback((property) => (event) => {\r\n            onRequestSort(event, property);\r\n        }, [ onRequestSort ]);\r\n\r\n    // Hooks ===\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                            checked={rowCount > 0 && numSelected === rowCount}\r\n                            onChange={onSelectAllClick}\r\n                            inputProps={{ 'aria-label': 'select all' }}\r\n                        />\r\n                    </TableCell>\r\n                    {headCells? ( \r\n                        headCells.map((headCell) => (\r\n                            <TableCell\r\n                                key={headCell.id}\r\n                                align={headCell.numeric ? 'right' : 'left'}\r\n                                padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                                sortDirection={orderBy === headCell.id ? order : false}\r\n                            >\r\n                                <TableSortLabel\r\n                                    active={orderBy === headCell.id}\r\n                                    direction={orderBy === headCell.id ? order : 'asc'}\r\n                                    onClick={createSortHandler(headCell.id)}\r\n                                >\r\n                                {headCell.label}\r\n                                {orderBy === headCell.id ? (\r\n                                    <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                    </span>\r\n                                ) : null}\r\n                                </TableSortLabel>\r\n                            </TableCell>\r\n                        ))\r\n                    ) : ( \r\n                        null\r\n                    )}\r\n                </TableRow>\r\n            </TableHead>\r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nUserTableHead.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n}\r\n\r\nUserTableHead.defaultProps = \r\n{\r\n    numSelected: {},\r\n    onRequestSort: () => {},\r\n    onSelectAllClick: () => {},\r\n    order: {},\r\n    orderBy: {},\r\n    rowCount: {},\r\n}\r\n\r\nexport default UserTableHead;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';                // Used for link navigation to other areas on the website\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\nimport clsx from 'clsx';                                // Constructing className strings conditionally. Used for render logic\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport { lighten } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// ==================== MUI Icons ====================\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(1),\r\n          },\r\n          highlight:\r\n            theme.palette.type === 'light'\r\n              ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n                }\r\n              : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n                },\r\n          title: {\r\n            flex: '1 1 100%',\r\n          }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n// const editChapterBaseLink = \"/administration/booklets/\";\r\nconst viewUserBaseLinkAdministration = \"/administration/users/\";\r\nconst viewUserBaseLinkStaff =  \"/staff/users/\";\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst UserTableToolbar = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, selectedDataItemsList, setParentDeleteUserDialog} = props;\r\n        \r\n        const [viewUrl, setViewUrl] = useState(\"\");\r\n        // const [editUrl, setEditUrl] = useState(\"\");\r\n\r\n        const [toolNone, setToolNone] = useState(false);\r\n        const [toolOne, setToolOne] = useState(false);\r\n        const [toolMultiple, setToolMultiple] = useState(false);\r\n\r\n    // Functions ===\r\n    \r\n        const toolHandler = useCallback(() => {\r\n            if(selectedDataItemsList.length === 0) {\r\n                setToolNone(true);\r\n                setToolOne(false);\r\n                setToolMultiple(false);\r\n            }\r\n            else if(selectedDataItemsList.length === 1) {\r\n                setToolNone(false);\r\n                setToolOne(true);\r\n                setToolMultiple(false);\r\n            }\r\n            else if(selectedDataItemsList.length > 1) {\r\n                setToolNone(false);\r\n                setToolOne(false);\r\n                setToolMultiple(true);\r\n            }\r\n        }, [ selectedDataItemsList, setToolNone, setToolOne, setToolMultiple]);\r\n    \r\n\r\n        const deleteHandler = useCallback(() => {\r\n            setParentDeleteUserDialog(true);\r\n        }, [ setParentDeleteUserDialog ]);\r\n\r\n        // const exportHandler = useCallback(() => {\r\n        //     setParentExportChapterDialog(true);\r\n        // }, [ setParentExportChapterDialog ]);\r\n        \r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () =>\r\n        {\r\n            toolHandler();  \r\n        }, [ selectedDataItemsList, toolHandler ]);\r\n\r\n        useEffect( () => {\r\n            \r\n            if(toolNone || toolMultiple) {\r\n                setViewUrl(\"\");\r\n                // setEditUrl(\"\");\r\n            }\r\n            else if(toolOne) {\r\n                \r\n                if(appState.role === \"Admin\")\r\n                {\r\n                    setViewUrl(viewUserBaseLinkAdministration + \"view/\" + selectedDataItemsList[0]._id); \r\n                }\r\n                else if(appState.role === \"Coordinator\" || appState.role === \"Volunteer\")\r\n                {\r\n                    setViewUrl(viewUserBaseLinkStaff + \"view/\" + selectedDataItemsList[0]._id); \r\n                }\r\n                               \r\n            }\r\n\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [toolNone, toolOne, toolMultiple ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <Toolbar\r\n                className={clsx(classes.root, { [classes.highlight]: selectedDataItemsList.length > 0 } )}\r\n            >\r\n                {selectedDataItemsList.length > 0 ? (\r\n                    <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                        {selectedDataItemsList.length} Selected Item{selectedDataItemsList.length > 1 ? \"s\" : null}\r\n                    </Typography>\r\n                ) : (\r\n                    <Typography className={classes.title} variant=\"h6\" component=\"div\">\r\n                        {\"User Results\"}\r\n                    </Typography>\r\n                )}\r\n\r\n                {toolNone ? (\r\n                    <>\r\n                        <Tooltip title=\"Filter list\">\r\n                            <IconButton aria-label=\"filter list\">\r\n                                <FilterListIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                ) : (null)}\r\n                \r\n                {toolOne? (\r\n                    <>\r\n                        <Tooltip title=\"View\">\r\n                            <IconButton aria-label=\"view\" component={Link} to={viewUrl} >\r\n                                <VisibilityIcon/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                            \r\n                        {/* <Tooltip title=\"Edit\">\r\n                            <IconButton aria-label=\"edit\" component={Link} to={editUrl} >\r\n                                <EditIcon/>\r\n                            </IconButton>\r\n                        </Tooltip> */}\r\n                            \r\n                        {/* <Tooltip title=\"Export\" onClick={() => exportHandler()}>\r\n                            <IconButton aria-label=\"export\">\r\n                                <SystemUpdateAltIcon/>\r\n                            </IconButton>\r\n                        </Tooltip> */}\r\n                            \r\n                        <Tooltip title=\"Delete\">\r\n                            <IconButton aria-label=\"delete\" onClick={() => deleteHandler()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                ) : (null)}\r\n                {toolMultiple ? (\r\n                    <>\r\n                        <Tooltip title=\"Delete\">\r\n                            <IconButton aria-label=\"delete\" onClick={() => deleteHandler()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                ) : (null)}\r\n            </Toolbar>\r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nUserTableToolbar.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    selectedDataItemsList: PropTypes.array.isRequired,\r\n    setParentDeleteUserDialog: PropTypes.func.isRequired,\r\n    // setParentExportChapterDialog: PropTypes.func.isRequired\r\n}\r\n\r\nUserTableToolbar.defaultProps = \r\n{\r\n    appState: {},\r\n    selectedDataItemsList: {},\r\n    setParentDeleteUserDialog: () => {},\r\n    // setParentExportChapterDialog: () => {}\r\n}\r\n\r\nexport default UserTableToolbar;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with Templates Table Component.\r\n// Displays all existing Templates created and allows\r\n// user to delete, edit and preview the Templates\r\n// survey questions.\r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// ===================== Extra Modules ======================\r\n\r\nimport UserTableHead from './UserTableHead';\r\nimport UserTableToolbar from './UserTableToolbar';\r\n\r\n// ==================== Helpers ====================\r\n\r\n// ==================== MUI ====================\r\nimport Box from '@material-ui/core/Box';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// ==================== Icons ====================\r\n\r\n// ==================== Static Helper Functions ====================\r\n\r\n    const descendingComparator = (a, b, orderBy) => {    // Establishing the result of a comparison between two objects in an array\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n    }\r\n\r\n    const getComparator = (order, orderBy) => {            // Deciding asc or desc comparison, notice the negative version of the funcion above\r\n\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    const stableSort = (array, comparator) => {\r\n\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(1),\r\n        },\r\n        tableRow: {\r\n            cursor: \"pointer\"\r\n        }\r\n    }));\r\n\r\n// ==================== Static Variables ====================\r\n\r\n//=================================================== TemplateTable Component ===================================================\r\nexport default function UserTable(props) {\r\n\r\n  // Variables ===\r\n\r\n         // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        const { appState, isDense, searchFilteredDataList, setParentDeleteUserDialog, setParentExportChapterDialog,\r\n            selectedDataItemsList, setSelectedDataItemsList } = props;\r\n\r\n        // Responsive Table variables\r\n        const [order, setOrder] = useState('asc');\r\n        const [orderBy, setOrderBy] = useState('name');\r\n        const [page, setPage] = useState(0);\r\n        const [rowsPerPage, setRowsPerPage] = useState(20);\r\n\r\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, searchFilteredDataList.length - page * rowsPerPage);\r\n\r\n\r\n    // Functions ===\r\n\r\n        const handleRequestSort = useCallback((event, property) => {\r\n\r\n            // console.log(property);\r\n\r\n            let isAsc = orderBy === property && order === 'asc';\r\n            setOrder(isAsc ? 'desc' : 'asc');\r\n            setOrderBy(property);\r\n\r\n        }, [ order, setOrder, orderBy, setOrderBy ]);\r\n\r\n        const handleSelectAllClick = useCallback((event) => {\r\n\r\n            if (event.target.checked) {\r\n\r\n                let newSelecteds = []\r\n                \r\n                searchFilteredDataList.forEach(elem => \r\n                {\r\n                    newSelecteds.push(elem);\r\n                });\r\n                \r\n                setSelectedDataItemsList(newSelecteds);\r\n                \r\n                return;\r\n\r\n            }\r\n\r\n            setSelectedDataItemsList([]);\r\n        }, [ searchFilteredDataList, setSelectedDataItemsList ]);\r\n\r\n        const handleClick = useCallback((event, item) => {\r\n            \r\n            let previousSelectedIds = selectedDataItemsList.map(elem => elem._id);\r\n            let selectedIndex = previousSelectedIds.indexOf(item._id);\r\n            let newSelected = [];\r\n\r\n            if (selectedIndex === -1)\r\n            {\r\n                newSelected = newSelected.concat(selectedDataItemsList, item);\r\n            }\r\n            else if (selectedIndex === 0)\r\n            {\r\n                newSelected = newSelected.concat(selectedDataItemsList.slice(1));\r\n            }\r\n            else if (selectedIndex === selectedDataItemsList.length - 1)\r\n            {\r\n                newSelected = newSelected.concat(selectedDataItemsList.slice(0, -1));\r\n            }\r\n            else if (selectedIndex > 0)\r\n            {\r\n                newSelected = newSelected.concat(\r\n                    selectedDataItemsList.slice(0, selectedIndex),\r\n                    selectedDataItemsList.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            setSelectedDataItemsList(newSelected);\r\n        }, [ selectedDataItemsList, setSelectedDataItemsList ]);\r\n\r\n        const isSelected = useCallback((item) => {\r\n\r\n            let previousSelectedIds = selectedDataItemsList.map(elem => elem._id);\r\n            return previousSelectedIds.indexOf(item._id) !== -1;\r\n\r\n        }, [ selectedDataItemsList ]);\r\n        \r\n        const handleChangePage = useCallback((newPage) => {\r\n\r\n            setPage(newPage);\r\n\r\n        }, [ setPage ]);\r\n\r\n        const handleChangeRowsPerPage = useCallback((event) => {\r\n            setRowsPerPage(parseInt(event.target.value, 10));\r\n            setPage(0);\r\n        }, [ setRowsPerPage, setPage]);\r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () =>\r\n        {\r\n            setPage(0);\r\n        }, [ searchFilteredDataList ]);\r\n\r\n    // Render Section ===\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n        \r\n            <Box mx={1} my={1}>\r\n                <Paper className={classes.paper}>\r\n                    <UserTableToolbar\r\n                        appState={appState}\r\n                        selectedDataItemsList={selectedDataItemsList} \r\n                        setParentDeleteUserDialog={setParentDeleteUserDialog} \r\n                        // setParentExportChapterDialog={setParentExportChapterDialog}\r\n                    />\r\n                    <TableContainer>\r\n                        <Table\r\n                            className={classes.table}\r\n                            aria-labelledby=\"tableTitle\"\r\n                            size={isDense ? 'small' : 'medium'}\r\n                            aria-label=\"enhanced table\"\r\n                        >\r\n                            <UserTableHead\r\n                                numSelected={selectedDataItemsList.length}\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                onSelectAllClick={handleSelectAllClick}\r\n                                onRequestSort={handleRequestSort}\r\n                                rowCount={searchFilteredDataList.length}\r\n                            />\r\n\r\n                            <TableBody>\r\n                                {stableSort(searchFilteredDataList, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((item, index) => {\r\n                                    const isItemSelected = isSelected(item);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            className={classes.tableRow}\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, item)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={item.name + item._id}\r\n                                            selected={isItemSelected}\r\n\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </TableCell>\r\n\r\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                                <Typography color=\"textPrimary\" variant=\"subtitle2\" style={{display: 'inline-block'}}>\r\n                                                    {item.info.name}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"left\">\r\n                                                <Typography color=\"primary\" variant=\"body2\" style={{display: 'inline-block'}}>\r\n                                                    {item.sequenceId}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"left\" padding=\"none\">\r\n                                                <Typography color=\"primary\" variant=\"body2\" style={{display: 'inline-block', color: item.enabled? 'green' : 'red' }}>\r\n                                                    {item.enabled? \"true\" : \"false\"}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"left\" padding=\"none\">\r\n                                                <Typography color=\"textPrimary\" variant=\"body2\" style={{display: 'inline-block'}}>\r\n                                                    {item.email}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"left\" padding=\"none\">\r\n                                                <Typography color=\"textPrimary\" variant=\"body2\" style={{display: 'inline-block'}}>\r\n                                                    {item.role}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n\r\n                                            {/* <TableCell align=\"left\" padding=\"none\">\r\n                                                <Typography color=\"textPrimary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                    {item.collectionId}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"right\">\r\n                                                <Typography color=\"primary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                    {new Date(item.createdAt).toLocaleDateString()}\r\n                                                </Typography>\r\n                                                <Typography color=\"secondary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                    {new Date(item.createdAt).toLocaleTimeString()}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"right\">\r\n                                                <Typography color=\"primary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                    {new Date(item.updatedAt).toLocaleDateString()}\r\n                                                </Typography>\r\n                                                <Typography color=\"secondary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                    {new Date(item.updatedAt).toLocaleTimeString()}\r\n                                                </Typography>\r\n                                            </TableCell> */}\r\n\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n\r\n                                {emptyRows > 0 && (\r\n                                    <TableRow style={{ height: (isDense ? 33 : 53) * emptyRows }}>\r\n                                        <TableCell colSpan={6} />\r\n                                    </TableRow>\r\n                                )}\r\n\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    {searchFilteredDataList.length > 0? (\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 15, 20, 25]}\r\n                            component=\"div\"\r\n                            count={searchFilteredDataList.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={searchFilteredDataList.length <= rowsPerPage? 0 : page}\r\n                            onPageChange={ (event, pageNumber) => { handleChangePage(pageNumber); }}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    ) : (\r\n                        null\r\n                    )}\r\n                </Paper>\r\n            </Box>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nUserTable.propTypes = {\r\n    appState: PropTypes.object.isRequired,\r\n    searchFilteredDataList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    setParentDeleteUserDialog: PropTypes.func.isRequired,\r\n    // setParentExportChapterDialog: PropTypes.func.isRequired,\r\n    selectedDataItemsList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    setSelectedDataItemsList: PropTypes.func.isRequired\r\n}\r\n\r\nUserTable.defaultProps =\r\n{\r\n    appState: {},\r\n    searchFilteredDataList: {},\r\n    setParentDeleteUserDialog: () => {},\r\n    // setParentExportChapterDialog: () => {},\r\n    selectedDataItemsList: {},\r\n    setSelectedDataItemsList: () => {}\r\n}","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../../helpers/models/AlertType'\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from  '@material-ui/core/ButtonGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\n// ==================== MUI Icons ====================\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport CheckBoxOutlineBlankOutlinedIcon from '@material-ui/icons/CheckBoxOutlineBlankOutlined';\r\nimport ListAltOutlinedIcon from '@material-ui/icons/ListAltOutlined';\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\n\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\nconst selectFilterOptions = [ { key: \"Name\", value: \"name\", display: \"Name\"}, { key: \"SequenceId\", value: \"sequenceId\", display: \"Sequence ID\"}, { key: \"Email\", value: \"email\", display: \"Email\"}, { key: \"Role\", value: \"role\", display: \"Role\"} ]\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst UsersManagementControlPanel = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const {  mode, setParentAlert,\r\n            isDense, setIsDense,\r\n            dataList, getParentData,\r\n            setSearchFilteredDataList,\r\n            setCreateUserDialog, setAssignUserDialog } = props;\r\n\r\n        const [selectSearchFilterOption, setSelectSearchFilterOption ] = useState(selectFilterOptions[0].value);\r\n        const [searchFilter, setSearchFilter] = useState(\"\");\r\n\r\n    // Functions ===\r\n\r\n        const pullHandler = useCallback(() =>\r\n        {\r\n            try\r\n            {\r\n                getParentData();\r\n                setParentAlert(new AlertType('Refreshed initiated...', \"info\"));\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n            \r\n        }, [ getParentData, setParentAlert ]);\r\n\r\n        const createUserHandler = useCallback(() =>\r\n        {\r\n            setCreateUserDialog(true);\r\n        }, [ setCreateUserDialog ]);\r\n\r\n        const assignUserHandler = useCallback(() =>\r\n        {\r\n            setAssignUserDialog(true);\r\n        }, [ setAssignUserDialog ]);\r\n\r\n        const compactHandler = useCallback((event) =>\r\n        {\r\n            setIsDense(event.target.checked);\r\n        }, [ setIsDense ]);\r\n\r\n        const selectSearchHandler = useCallback((event) =>\r\n        {\r\n            setSearchFilter(\"\");\r\n            setSelectSearchFilterOption(event.target.value);\r\n\r\n        }, [ setSelectSearchFilterOption ]);\r\n\r\n        const searchHandler = useCallback((event) =>\r\n        {\r\n            let tempFilter = event.target.value.toUpperCase();\r\n            let tempArray = [];\r\n            dataList.forEach( item => \r\n            {\r\n                switch(selectSearchFilterOption)\r\n                {\r\n                    case \"name\":\r\n\r\n                            if(item.info.name.toUpperCase().indexOf(tempFilter) > -1)\r\n                            {\r\n                                tempArray.push(item);\r\n                            }\r\n    \r\n                            break;\r\n\r\n                    case \"sequenceId\":\r\n\r\n                        if(String(item.sequenceId).indexOf(tempFilter) > -1)\r\n                        {\r\n                            tempArray.push(item);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case \"email\":\r\n\r\n                        if(item.email.toUpperCase().indexOf(tempFilter) > -1)\r\n                        {\r\n                            tempArray.push(item);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case \"role\":\r\n\r\n                        if(item.role.toUpperCase().indexOf(tempFilter) > -1)\r\n                        {\r\n                            tempArray.push(item);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    default:\r\n                }\r\n                \r\n            });\r\n\r\n            setSearchFilter(event.target.value);\r\n            setSearchFilteredDataList(tempArray);\r\n        }, [ dataList, setSearchFilteredDataList, selectSearchFilterOption ]);\r\n\r\n\r\n    // Hooks ===\r\n\r\n        // First Render only because of the [ ] empty array tracking with the useEffect\r\n        useEffect( () =>\r\n        {\r\n            setSearchFilter(\"\");\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ dataList ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(searchFilter === \"\")\r\n            {\r\n                setSearchFilteredDataList(dataList);\r\n            }\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ setSelectSearchFilterOption, searchFilter ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                <Box mx={2} my={1} boxShadow={0}>\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justifyContent=\"flex-start\"\r\n                        alignItems=\"stretch\"\r\n                        spacing={1}\r\n                    >\r\n                        <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                            <Grid item>\r\n                                <Typography variant=\"h6\" component=\"h6\">\r\n                                    Manage\r\n                                </Typography>\r\n                                <Divider />\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <Box mx={3} my={1} boxShadow={0}>\r\n                                    <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n                                        <Grid item>\r\n                                            <Tooltip\r\n                                                placement=\"bottom\"\r\n                                                title=\"Refresh Online Users\"\r\n                                            >\r\n                                                <Button \r\n                                                    size=\"small\" \r\n                                                    variant=\"contained\" \r\n                                                    color=\"primary\"\r\n                                                    startIcon={<RefreshIcon />}\r\n                                                    onClick={() => { pullHandler(); }}\r\n                                                >\r\n                                                    Refresh\r\n                                                </Button>\r\n                                            </Tooltip> \r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            {mode === \"Other\"? (\r\n                                                <>\r\n                                                </>\r\n                                            ) : (\r\n                                                <Tooltip\r\n                                                    placement=\"bottom\"\r\n                                                    title=\"Create User\"\r\n                                                >\r\n                                                    <Button \r\n                                                        size=\"small\" \r\n                                                        variant=\"contained\" \r\n                                                        color=\"primary\"\r\n                                                        startIcon={<AddBoxOutlinedIcon />}\r\n                                                        onClick={() => { createUserHandler(); }}\r\n                                                    >\r\n                                                        Create a User\r\n                                                    </Button>\r\n                                                </Tooltip> \r\n                                            )}\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Tooltip\r\n                                                placement=\"bottom\"\r\n                                                title=\"Assign User\"\r\n                                            >\r\n                                                <Button \r\n                                                    size=\"small\" \r\n                                                    variant=\"contained\" \r\n                                                    color=\"secondary\"\r\n                                                    startIcon={<SupervisorAccountIcon />}\r\n                                                    onClick={() => { assignUserHandler(); }}\r\n                                                >\r\n                                                    Assign User\r\n                                                </Button>\r\n                                            </Tooltip> \r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Tooltip\r\n                                    placement=\"left\"\r\n                                    title=\"Use this page to manage users in the system.\"\r\n                                >\r\n                                    <IconButton>\r\n                                        <HelpOutlineIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                            <Box mx={1} my={1} boxShadow={0}>\r\n                                <Card>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={3}>\r\n                                            <Grid item>\r\n                                                <Typography color=\"textPrimary\" variant=\"subtitle2\">\r\n                                                    Table Options\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <FormControlLabel\r\n                                                    control={<Switch checked={isDense} onChange={ (event) => { compactHandler(event); }} />}\r\n                                                    label=\"Compact\"\r\n                                                    labelPlacement=\"end\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <FormControl id=\"search-filter-select-label\" variant=\"filled\" size=\"small\" style={{minWidth: 140}} disabled={dataList? false : true}>\r\n                                                    <InputLabel>\r\n                                                        Search Filter\r\n                                                    </InputLabel>\r\n                                                    <Select\r\n                                                        autoWidth={true}\r\n                                                        labelId=\"search-filter-select-label\"\r\n                                                        value={selectSearchFilterOption}\r\n                                                        onChange={(event) => { selectSearchHandler(event); } }\r\n                                                    >\r\n                                                        {selectFilterOptions.map( item => \r\n                                                        {\r\n                                                            return(\r\n                                                                <MenuItem key={item.key} value={item.value}>\r\n                                                                    <em>{item.display}</em>\r\n                                                                </MenuItem>  \r\n                                                            )\r\n                                                        })}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                <TextField label=\"Search\"\r\n                                                    type=\"search\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"filled\"\r\n                                                    fullWidth\r\n                                                    value={searchFilter}\r\n                                                    onChange={ (event) => { searchHandler(event); }}\r\n                                                    disabled={dataList? false : true}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Card>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={1}>\r\n                            <Grid item>\r\n                                <Typography variant=\"h6\" component=\"h6\">\r\n                                    Table\r\n                                </Typography>\r\n                                <Divider />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </>\r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nUsersManagementControlPanel.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    mode: PropTypes.string,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    isDense: PropTypes.bool.isRequired,\r\n    setIsDense: PropTypes.func.isRequired,\r\n    dataList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    setSearchFilteredDataList: PropTypes.func.isRequired,\r\n    setCreateUserDialog: PropTypes.func.isRequired,\r\n    setAssignUserDialog: PropTypes.func.isRequired,\r\n                        \r\n}\r\n\r\nUsersManagementControlPanel.defaultProps = \r\n{\r\n    mode: null,\r\n    setParentAlert: () => {},\r\n    setIsDense: () => {},\r\n    dataList: {},\r\n    getParentData: () => {},\r\n    setSearchFilteredDataList: () => {},\r\n    setCreateUserDialog: () => {},\r\n    setAssignUserDialog: () => {}\r\n}\r\n\r\nexport default UsersManagementControlPanel;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with AssignUserDialog\r\n// ================================================\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\nimport get from '../../../../helpers/common/get';\r\nimport post from  '../../../../helpers/common/post';\r\nimport patch from '../../../../helpers/common/patch';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Collapse, Typography } from '@material-ui/core';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// ==================== MUI Icons ====================\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(1),\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst AssignUserDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, setParentAlert, getParentData, selectedUserList, \r\n            assignUserDialog, setAssignUserDialog,\r\n            assignUserDialogExecuting, setAssignUserDialogExecuting } = props;\r\n\r\n        const [ currentManagementUser, setCurrentManagementUser ] = useState(\"\");\r\n        const [ selectedManagementUserList, setSelectedManagementUserList ] = useState(null);\r\n        const [ managementUserList, setManagementUserList ] = useState(null);\r\n\r\n        const [ currentClientUser, setCurrentClientUser ] = useState(\"\");\r\n        const [ selectedClientUserList, setSelectedClientUserList ] = useState(null);\r\n        const [ clientUserList, setClientUserList ] = useState(null);\r\n\r\n        const [ userList, setUserList ] = useState(null);\r\n\r\n    // Functions ===\r\n\r\n        const populateUsers = useCallback((data) =>\r\n        {\r\n            let tempArray = new Array();\r\n\r\n            if(data && Array.isArray(data))\r\n            {\r\n                data.forEach(item => {\r\n\r\n                    tempArray.push(\r\n                        {\r\n                            _id: item._id,\r\n                            name: item.info.name,\r\n                            role: item.role,\r\n                            createdAt: item.createdAt\r\n                        });\r\n                });\r\n            }\r\n\r\n            setUserList([...tempArray]);\r\n\r\n        }, [ appState, setUserList]);\r\n\r\n        // Retrieve the list of Users\r\n        const getUsers = useCallback(() => {\r\n\r\n            get(\"users/\", appState.token, (err, res) => \r\n            {\r\n                if(err)\r\n                {   \r\n                    //Bad callback call\r\n                    //setParentAlert(new AlertType(err.message, \"error\"));\r\n                    setParentAlert(new AlertType('Unable to retrieve Users. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(res.status === 200)\r\n                    {\r\n                        populateUsers(res.data.response.users);\r\n                    }\r\n                    else\r\n                    {\r\n                        //Bad HTTP Response\r\n                        setParentAlert(new AlertType('Unable to retrieve Users. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n\r\n            });\r\n        }, [ appState, populateUsers, setParentAlert ] );\r\n\r\n        // Insert the new booklet into the database upon creation\r\n        const assignSelectedUsers = useCallback(() =>\r\n        {\r\n            if(selectedManagementUserList.length > 0 && selectedClientUserList.length > 0)\r\n            {\r\n                let selectedManagementUserListFormatted = new Array();\r\n                let selectedClientUserListFormatted = new Array();\r\n                \r\n                // selectedManagementUserList.map(item => {\r\n                //     selectedManagementUserListFormatted.push(\r\n                //         {\r\n                //             $oid: item._id\r\n                //         }\r\n                //     );\r\n                // });\r\n\r\n                selectedManagementUserList.map(item => {\r\n                    selectedManagementUserListFormatted.push(item._id);\r\n                });\r\n\r\n                // selectedClientUserList.map(item => {\r\n                //     selectedClientUserListFormatted.push(\r\n                //         {\r\n                //             $oid: item._id\r\n                //         }\r\n                //     );\r\n                // });\r\n\r\n                selectedClientUserList.map(item => {\r\n                    selectedClientUserListFormatted.push(item._id);\r\n                });\r\n\r\n                selectedManagementUserList.forEach(managementUser => \r\n                {\r\n                        let patchData = {\r\n                            patients: selectedClientUserListFormatted\r\n                        };\r\n    \r\n                        patch(\"users/\" + managementUser._id, appState.token, patchData, (error, response) => \r\n                        {\r\n                            if(error)\r\n                            {\r\n                                setParentAlert(new AlertType('Unable to update management user. Please refresh and try again.', \"error\"));\r\n                            }\r\n                            else\r\n                            {\r\n                                if(response.status === 200)\r\n                                {\r\n                                    // getParentData();\r\n                                    //  const _id = response.data.survey._id; The id to redirect to if you wish\r\n                                    setParentAlert(new AlertType('Successfully updated management user.', \"success\")); \r\n                                }\r\n                                else\r\n                                {\r\n                                    setParentAlert(new AlertType('Unable to update management user. Please refresh and try again.', \"error\"));\r\n                                }\r\n                            }\r\n                        });\r\n                });\r\n\r\n                selectedClientUserList.forEach(ClientUser => \r\n                {\r\n                    let patchData = {\r\n                        workers: selectedManagementUserListFormatted\r\n                    };\r\n    \r\n                    patch(\"users/\" + ClientUser._id, appState.token, patchData, (error, response) => \r\n                    {\r\n                        if(error)\r\n                        {\r\n                            setParentAlert(new AlertType('Unable to update client user. Please refresh and try again.', \"error\"));\r\n                        }\r\n                        else\r\n                        {\r\n                            if(response.status === 200)\r\n                            {\r\n                                // getParentData();\r\n                                //  const _id = response.data.survey._id; The id to redirect to if you wish\r\n                                setParentAlert(new AlertType('Successfully updated client user.', \"success\")); \r\n                            }\r\n                            else\r\n                            {\r\n                                setParentAlert(new AlertType('Unable to update client user. Please refresh and try again.', \"error\"));\r\n    \r\n                            }\r\n                        }\r\n                    });\r\n                    \r\n                });\r\n\r\n            }\r\n            else\r\n            {\r\n                setParentAlert(new AlertType('Unable to assign users. Please refresh and try again.', \"error\"));\r\n            }\r\n\r\n        }, [ appState, setParentAlert, selectedManagementUserList, selectedClientUserList]);\r\n\r\n        \r\n        const closeHandler = useCallback(() => {\r\n\r\n            setAssignUserDialog(false);\r\n            setCurrentManagementUser(\"\");\r\n            setCurrentClientUser(\"\");\r\n            setSelectedManagementUserList(new Array());\r\n            setSelectedClientUserList(new Array());\r\n\r\n        }, [ setAssignUserDialog, setCurrentManagementUser, setCurrentClientUser, setSelectedManagementUserList, setSelectedClientUserList ]);\r\n\r\n\r\n        const createHandler = useCallback(() => {\r\n\r\n            setAssignUserDialogExecuting(true);\r\n            assignSelectedUsers();\r\n            setAssignUserDialogExecuting(false);\r\n            setAssignUserDialog(false);\r\n\r\n        }, [ assignSelectedUsers, setAssignUserDialogExecuting, setAssignUserDialog]);\r\n\r\n        const selectManagementHandler = useCallback((event) =>\r\n        {\r\n            setCurrentManagementUser(event.target.value);\r\n\r\n        }, [ setCurrentManagementUser ]);\r\n\r\n        const selectClientHandler = useCallback((event) =>\r\n        {\r\n            setCurrentClientUser(event.target.value);\r\n\r\n        }, [ setCurrentClientUser ]);\r\n\r\n        const addManagementButtonHandler = useCallback(() =>\r\n        {\r\n            if(currentManagementUser && currentManagementUser != \"\")\r\n            {\r\n                let tempUserObject = managementUserList.find(item => item._id == currentManagementUser);\r\n\r\n                if(tempUserObject != undefined)\r\n                {\r\n                    setSelectedManagementUserList([...selectedManagementUserList, tempUserObject]);\r\n                    setCurrentManagementUser(\"\");\r\n                }\r\n            }\r\n\r\n        }, [ currentManagementUser, managementUserList, setSelectedManagementUserList, selectedManagementUserList, setCurrentManagementUser ]);\r\n\r\n        const addClientButtonHandler = useCallback(() =>\r\n        {\r\n            if(currentClientUser && currentClientUser != \"\")\r\n            {\r\n                let tempUserObject = clientUserList.find(item => item._id == currentClientUser);\r\n\r\n                if(tempUserObject != undefined)\r\n                {\r\n                    setSelectedClientUserList([...selectedClientUserList, tempUserObject]);\r\n                    setCurrentClientUser(\"\");\r\n                }\r\n\r\n            }\r\n\r\n        }, [ currentClientUser, clientUserList, setSelectedClientUserList, selectedClientUserList, setCurrentClientUser ]);\r\n\r\n        const removeManagementButtonHandler = useCallback((item) =>\r\n        {\r\n            let tempList = selectedManagementUserList;\r\n\r\n            tempList.splice(selectedManagementUserList.findIndex(oldItem => oldItem._id == item._id), 1);\r\n\r\n            setSelectedManagementUserList([...tempList]);\r\n\r\n        }, [ selectedManagementUserList, setSelectedManagementUserList ]);\r\n\r\n        const removeClientButtonHandler = useCallback((item) =>\r\n        {\r\n            let tempList = selectedClientUserList;\r\n\r\n            tempList.splice(selectedClientUserList.findIndex(oldItem => oldItem._id == item._id), 1);\r\n\r\n            setSelectedClientUserList([...tempList]);\r\n\r\n        }, [selectedClientUserList, setSelectedClientUserList ]);\r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(assignUserDialog)\r\n            {\r\n                getUsers(); \r\n            }\r\n            \r\n        }, [ assignUserDialog, getUsers]);\r\n\r\n        useEffect( () => \r\n        {\r\n            if(userList)\r\n            {\r\n                //  Set Management User List\r\n                let tempManagementUserList = new Array();\r\n                \r\n                //  Set Client User List\r\n                let tempClientUserList = new Array();\r\n\r\n                userList.forEach(item => {\r\n                    \r\n                    if(item.role == 'Admin' || item.role == 'Coordinator' || item.role == 'Volunteer')\r\n                    {\r\n                        tempManagementUserList.push(item);\r\n                    }\r\n                    else if(item.role == 'Patient')\r\n                    {\r\n                        tempClientUserList.push(item);\r\n                    }\r\n\r\n                });\r\n\r\n                setManagementUserList([...tempManagementUserList]);\r\n                setClientUserList([...tempClientUserList]);\r\n            }\r\n\r\n        }, [ userList, setManagementUserList, setClientUserList ]);\r\n\r\n        useEffect( () => \r\n        {\r\n            if(selectedUserList)\r\n            {\r\n                //  Set Selected Management User List\r\n                let tempSelectedManagementUserList = new Array();\r\n                \r\n                //  Set Selected Client User List\r\n                let tempSelectedClientUserList = new Array();\r\n\r\n                selectedUserList.forEach(item => {\r\n                    \r\n                    if(item.role == 'Admin' || item.role == 'Coordinator' || item.role == 'Volunteer')\r\n                    {\r\n                        tempSelectedManagementUserList.push({\r\n                            _id: item._id,\r\n                            name: item.info.name,\r\n                            role: item.role,\r\n                            createdAt: item.createdAt\r\n                        });\r\n                    }\r\n                    else if(item.role == 'Patient')\r\n                    {\r\n                        tempSelectedClientUserList.push({\r\n                            _id: item._id,\r\n                            name: item.info.name,\r\n                            role: item.role,\r\n                            createdAt: item.createdAt\r\n                        });\r\n                    }\r\n\r\n                });\r\n\r\n                setSelectedManagementUserList([...tempSelectedManagementUserList]);\r\n                setSelectedClientUserList([...tempSelectedClientUserList]);\r\n            }\r\n\r\n        }, [ selectedUserList, setSelectedManagementUserList, setSelectedClientUserList ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {assignUserDialog? (\r\n                    <Dialog id=\"assign-user-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={assignUserDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Assign Users\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {assignUserDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <>\r\n                                    <DialogContentText>\r\n                                        Please select users to be assigned to each other <em>(<u>Admin</u>, <u>Coordinator</u> and <u>Volunteer</u> users are assigned to <u>Client</u> users)</em>.\r\n                                    </DialogContentText>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                        <Grid item xs container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1}>\r\n                                                {managementUserList? (\r\n                                                    <>\r\n                                                        <Grid item xs={11}>\r\n                                                            <FormControl id=\"Management-options-label\" variant=\"filled\" size=\"small\" fullWidth disabled={!managementUserList}>\r\n                                                                <InputLabel>\r\n                                                                    Management\r\n                                                                </InputLabel>\r\n                                                                <Select\r\n                                                                    fullWidth\r\n                                                                    labelId=\"Management-options-label\"\r\n                                                                    value={currentManagementUser}\r\n                                                                    onChange={(event) => { selectManagementHandler(event); } }\r\n                                                                >\r\n                                                                    <MenuItem value=\"\">\r\n                                                                        <em>None</em>\r\n                                                                    </MenuItem>\r\n                                                                    {managementUserList.map( (item, index) => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={`SelectOption${item._id}`} value={item._id}\r\n                                                                                disabled={(selectedManagementUserList.findIndex(oldItem => oldItem._id == item._id) == -1)? false : true}\r\n                                                                            >\r\n                                                                                <em>{item.name}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })}\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={1}>\r\n                                                            <IconButton variant=\"outlined\" size=\"medium\" color=\"inherit\" onClick={ () => { addManagementButtonHandler(); } }\r\n                                                                disabled={currentManagementUser == \"\"? true : false}>\r\n                                                                <AddCircleIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <CircularProgress />\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                {(selectedManagementUserList)? (\r\n                                                     <Collapse in={(selectedManagementUserList.length > 0)? true : false}>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\r\n                                                            <em>{\"The following selected management users\"}</em> <u>{'to be assigned:'}</u>\r\n                                                        </Typography>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"primary\" gutterBottom={true}>\r\n                                                            <ol>\r\n                                                                {selectedManagementUserList.map((item, index) => {\r\n                                                                    return (\r\n                                                                        <li key={`${item._id}${index}`}>\r\n                                                                            {item.name}\r\n                                                                            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\"\r\n                                                                                onClick={ (item) => { removeManagementButtonHandler(item); } }\r\n                                                                            >\r\n                                                                                <CancelIcon fontSize=\"inherit\" />\r\n                                                                            </IconButton>\r\n                                                                        </li>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </ol>\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                ) : (\r\n                                                    <>\r\n                                                    </>\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1}>\r\n                                                {clientUserList? (\r\n                                                    <>\r\n                                                        <Grid item xs={11}>\r\n                                                            <FormControl id=\"Client-options-label\" variant=\"filled\" size=\"small\" fullWidth disabled={!clientUserList}>\r\n                                                                <InputLabel>\r\n                                                                    Client\r\n                                                                </InputLabel>\r\n                                                                <Select\r\n                                                                    fullWidth\r\n                                                                    labelId=\"Client-options-label\"\r\n                                                                    value={currentClientUser}\r\n                                                                    onChange={(event) => { selectClientHandler(event); } }\r\n                                                                >\r\n                                                                    <MenuItem value=\"\">\r\n                                                                        <em>None</em>\r\n                                                                    </MenuItem>\r\n                                                                    {clientUserList.map( (item, index) => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={`SelectOption${item._id}`} value={item._id}\r\n                                                                                disabled={(selectedClientUserList.findIndex(oldItem => oldItem._id == item._id) == -1)? false : true}\r\n                                                                            >\r\n                                                                                <em>{item.name}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })}\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={1}>\r\n                                                            <IconButton variant=\"outlined\" size=\"medium\" color=\"inherit\" onClick={ () => { addClientButtonHandler(); } }\r\n                                                                disabled={currentClientUser == \"\"? true : false}>\r\n                                                                <AddCircleIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <CircularProgress />\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                {selectedClientUserList? (\r\n                                                    <Collapse in={(selectedClientUserList.length > 0)? true : false}>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\r\n                                                            <em>{\"The following selected client users\"}</em> <u>{'to be assigned by:'}</u>\r\n                                                        </Typography>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"secondary\" gutterBottom={true}>\r\n                                                            <ol>\r\n                                                                {selectedClientUserList.map((item, index) => {\r\n                                                                    return (\r\n                                                                        <li key={`${item._id}${index}`}>\r\n                                                                            {item.name}\r\n                                                                            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\"\r\n                                                                                onClick={ (item) => { removeClientButtonHandler(item); } }\r\n                                                                            >\r\n                                                                                <CancelIcon fontSize=\"inherit\" />\r\n                                                                            </IconButton>\r\n                                                                        </li>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </ol>\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                ) : (\r\n                                                    <>\r\n                                                    </>\r\n                                                )}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </>\r\n                            )}\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={assignUserDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<SupervisorAccountIcon />} onClick={() => { createHandler(); }} disabled={assignUserDialogExecuting}\r\n                                disabled={(selectedManagementUserList.length > 0 && selectedClientUserList.length > 0)? false : true}\r\n                            >\r\n                                Assign\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nAssignUserDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    selectedUserList: PropTypes.arrayOf(PropTypes.object),\r\n    assignUserDialog: PropTypes.bool.isRequired,\r\n    setAssignUserDialog: PropTypes.func.isRequired,\r\n    assignUserDialogExecuting: PropTypes.bool.isRequired,\r\n    setAssignUserDialogExecuting: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nAssignUserDialog.defaultProps = \r\n{\r\n    appState: {},\r\n    setParentAlert: () => {},\r\n    getParentData:  () => {},\r\n    selectedUserList: {},\r\n    assignUserDialog: {},\r\n    setAssignUserDialog: () => {},\r\n    assignUserDialogExecuting: {},\r\n    setAssignUserDialogExecuting: () => {}\r\n}\r\n\r\nexport default AssignUserDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with SaveChapterDialog\r\n// ================================================\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\nimport post from  '../../../../helpers/common/post';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { FormControl, InputLabel, Select, MenuItem, Typography } from '@material-ui/core';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// ==================== MUI Icons ====================\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\nconst emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\nconst passwordRegex = /^.{4,}$/;\r\nconst nameRegex = /^[a-zA-Z]+$/;\r\nconst streetRegex = /^(\\d{1,})[a-zA-Z0-9\\s]+(\\.)?$/;    //WIP currently accepts number only\r\nconst postalCodeRegex = /^[ABCEGHJ-NPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][ -]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i;\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst CreateUserDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, setParentAlert, getParentData,\r\n            createUserDialog, setCreateUserDialog,\r\n            createUserDialogExecuting, setCreateUserDialogExecuting } = props;\r\n\r\n        const [email, setEmail] = useState(\"\");\r\n        const [emailError, setEmailError] = useState(false);\r\n        \r\n        const [password, setPassword] = useState(\"\");\r\n        const [passwordError, setPasswordError] = useState(false);\r\n        \r\n        const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n        const [confirmPasswordError, setConfirmPasswordError] = useState(false);\r\n        \r\n        const [firstName, setFirstName] = useState(\"\");\r\n        const [firstNameError, setFirstNameError] = useState(false);\r\n\r\n        const [lastName, setLastName] = useState(\"\");\r\n        const [lastNameError, setLastNameError] = useState(false);\r\n\r\n        const [dateOfBirth, setDateOfBirth] = useState(\"\");\r\n        const [dateOfBirthError, setDateOfBirthError] = useState(false);\r\n\r\n        const [gender, setGender] = useState(\"\");\r\n        const [genderError, setGenderError] = useState(false);\r\n\r\n        const [gender2, setGender2] = useState(\"\");\r\n        const [isGender2, setIsGender2] = useState(\"\");\r\n        const [gender2Error, setGender2Error] = useState(false);\r\n\r\n        const [language, setLanguage] = useState(\"\");\r\n        const [languageError, setLanguageError] = useState(false);\r\n\r\n        const [language2, setLanguage2] = useState(\"\");\r\n        const [isLanguage2, setIsLanguage2] = useState(false);\r\n        const [language2Error, setLanguage2Error] = useState(false);\r\n\r\n        const [role, setRole] = useState(\"\");\r\n        const [roleError, setRoleError] = useState(false);\r\n\r\n        const [enabled, setEnabled] = useState(true);\r\n\r\n\r\n        // Non-Required Parameters ========================================\r\n\r\n        const [street, setStreet] = useState(\"\");\r\n        const [streetError, setStreetError] = useState(false);\r\n\r\n        const [postalCode, setPostalCode] = useState(\"\");\r\n        const [postalCodeError, setPostalCodeError] = useState(false);\r\n\r\n        const [city, setCity] = useState(\"\");\r\n        const [cityError, setCityError] = useState(false);\r\n\r\n        const [province, setProvince] = useState(\"\");\r\n        const [provinceError, setProvinceError] = useState(false);\r\n\r\n        const [country, setCountry] = useState(\"\");\r\n        const [countryError, setCountryError] = useState(false);\r\n\r\n        const [page, setPage] = useState(0);\r\n\r\n    // Functions ===\r\n\r\n        const createUser = useCallback(() =>\r\n        {\r\n\r\n            let sanatized_firstName = firstName.trim().charAt(0).toUpperCase() + firstName.trim().slice(1).toLowerCase();\r\n            let sanatized_lastName = lastName.trim().charAt(0).toUpperCase() + lastName.trim().slice(1).toLowerCase();\r\n\r\n            let sanatized_language2 = language2.trim().charAt(0).toUpperCase() + language2.trim().slice(1).toLowerCase();\r\n            let sanatized_gender2 = gender2.trim().charAt(0).toUpperCase() + gender2.trim().slice(1).toLowerCase();\r\n\r\n            let sanatized_city = city.trim().charAt(0).toUpperCase() + city.trim().slice(1).toLowerCase();  // Does not take into account capitalizing multiple word named cities or towns\r\n\r\n            var data = {\r\n                email: email,\r\n                role: role,\r\n                password: password,\r\n                enabled: enabled,\r\n                facilityId: appState.facilityId,\r\n                info: {\r\n                    name: sanatized_firstName + ' ' + sanatized_lastName,\r\n                    gender: (gender == \"NonBinary\" && isGender2)?  sanatized_gender2 : gender,\r\n                    dateOfBirth: new Date(dateOfBirth),\r\n                    // phone: phone,\r\n                    language: (language == \"Other\" && isLanguage2)?  sanatized_language2 : language,\r\n                    address: {\r\n                        street: street,\r\n                        city: sanatized_city,\r\n                        state: province,\r\n                        code: postalCode,\r\n                        country: country\r\n                    }\r\n                }\r\n            }\r\n\r\n            // console.log(data);\r\n            \r\n            post(\"users/register\",  appState.token, data, (error, response) => \r\n            {\r\n                if(error)\r\n                {\r\n                    setParentAlert(new AlertType('Unable create user. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(response.status === 201)\r\n                    {\r\n                        getParentData();\r\n                        resetCreateForm();\r\n                        setParentAlert(new AlertType('User created.', \"success\"));\r\n                    }\r\n                    else\r\n                    {\r\n                        setParentAlert(new AlertType('Unable create user. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n            });\r\n\r\n        }, [ appState, resetCreateForm, email, password, firstName, lastName, enabled, role, gender, isGender2, gender2, language, isLanguage2, language2, dateOfBirth, street, city, postalCode, province, country ] );\r\n\r\n        const resetCreateForm = useCallback(() => {\r\n            setEmail(\"\");\r\n            setEmailError(false);\r\n\r\n            setPassword(\"\");\r\n            setPasswordError(false);\r\n            \r\n            setConfirmPassword(\"\");\r\n            setConfirmPasswordError(false);\r\n            \r\n            setFirstName(\"\");\r\n            setFirstNameError(false);\r\n            \r\n            setLastName(\"\");\r\n            setLastNameError(false);\r\n\r\n            setRole(\"\");\r\n            setRoleError(false);\r\n            \r\n            setGender(\"\");\r\n            setGenderError(false);\r\n\r\n            setIsGender2(false);\r\n            setGender2(\"\");\r\n            setGender2Error(false);\r\n            \r\n            setLanguage(\"\");\r\n            setLanguageError(false);\r\n\r\n            setIsLanguage2(false);\r\n            setLanguage2(\"\");\r\n            setLanguage2Error(false);\r\n\r\n            setDateOfBirth(\"\");\r\n            setDateOfBirthError(false);\r\n\r\n            setStreet(\"\");\r\n            setStreetError(false);\r\n\r\n            setCity(\"\");\r\n            setCityError(false);\r\n\r\n            setPostalCode(\"\");\r\n            setPostalCodeError(false);\r\n\r\n            setProvince(\"\");\r\n            setProvinceError(false);\r\n\r\n            setCountry(\"\");\r\n            setCountryError(false);\r\n\r\n            setPage(0);\r\n\r\n        }, [ setEmail, setEmailError, setPassword, setPasswordError, setConfirmPassword, setConfirmPasswordError, setFirstName, setFirstNameError, setLastName, setLastNameError,\r\n            setRole, setRoleError, setGender, setGenderError, setIsGender2, setGender2, setGender2Error, setLanguage, setLanguageError, setIsLanguage2, setLanguage2, setLanguage2Error,\r\n            setDateOfBirth, setDateOfBirthError, setStreet, setStreetError, setCity, setCityError, setPostalCode, setPostalCodeError, setProvince, setProvinceError, setCountry, setCountryError,\r\n            setPage ]);\r\n\r\n        const closeHandler = useCallback(() => {\r\n            setCreateUserDialog(false);\r\n        }, [ ]);\r\n\r\n\r\n        const createHandler = useCallback(() => {\r\n                setCreateUserDialogExecuting(true);\r\n                createUser();\r\n                setCreateUserDialogExecuting(false);\r\n                setCreateUserDialog(false);\r\n        }, [ setCreateUserDialogExecuting, createUser, setCreateUserDialog]);\r\n\r\n        const navigateBack = useCallback((event) => \r\n        {\r\n            setPage(page-1);\r\n        }, [ page ]);\r\n\r\n        const navigateNext = useCallback((event) => \r\n        {\r\n            setPage(page+1);\r\n        }, [ page ]);\r\n\r\n        const emailHandler = useCallback((event) => \r\n        {\r\n            if(emailRegex.test(String(event.target.value)))\r\n            {\r\n                setEmailError(false);\r\n            }\r\n            else\r\n            {   \r\n                setEmailError(true);\r\n            }\r\n\r\n            setEmail(event.target.value);\r\n            \r\n        }, [ setEmail, emailRegex ]);\r\n\r\n        const passwordHandler = useCallback((event) => \r\n        {\r\n            if(passwordRegex.test(String(event.target.value)))\r\n            {\r\n                setPasswordError(false);\r\n            }\r\n            else\r\n            {   \r\n                setPasswordError(true);\r\n            }\r\n\r\n            setPassword(event.target.value);\r\n\r\n        }, [ setPassword, setPasswordError, passwordRegex ]);\r\n\r\n        const confirmPasswordHandler = useCallback((event) => \r\n        {\r\n            if(event.target.value != password)\r\n            {\r\n                setConfirmPasswordError(true);\r\n            }\r\n            else\r\n            {\r\n                setConfirmPasswordError(false);\r\n            }\r\n            \r\n            setConfirmPassword(event.target.value);\r\n\r\n        }, [ setConfirmPassword, password ]);\r\n\r\n\r\n        const firstNameHandler = useCallback((event) => \r\n        {\r\n            setFirstName(event.target.value);\r\n        }, [ setFirstName ]);\r\n\r\n        const lastNameHandler = useCallback((event) => \r\n        {\r\n            setLastName(event.target.value);\r\n        }, [ setLastName ]);\r\n\r\n        const dateOfBirthHandler = useCallback((event) => \r\n        {\r\n            setDateOfBirth(event.target.value);\r\n        }, [ setDateOfBirth ]);\r\n\r\n        const genderHandler = useCallback((event) => \r\n        {\r\n            setGender(event.target.value);\r\n        }, [ setGender ]);\r\n\r\n        const gender2Handler = useCallback((event) => \r\n        {\r\n            setGender2(event.target.value);\r\n        }, [ setGender2 ]);\r\n\r\n        const languageHandler = useCallback((event) => \r\n        {\r\n            setLanguage(event.target.value);\r\n        }, [ setLanguage ]);\r\n        \r\n        const language2Handler = useCallback((event) => \r\n        {\r\n            setLanguage2(event.target.value);\r\n        }, [ setLanguage2 ]);\r\n    \r\n        const roleHandler = useCallback((event) => \r\n        {\r\n            setRole(event.target.value);\r\n        }, [ setRole ]);\r\n\r\n        const streetHandler = useCallback((event) => \r\n        {\r\n            if(streetRegex.test(String(event.target.value)))\r\n            {\r\n                setStreetError(false);\r\n            }\r\n            else\r\n            {   \r\n                setStreetError(true);\r\n            }\r\n\r\n            setStreet(event.target.value);\r\n\r\n        }, [ setStreet, setStreetError, streetRegex ]);\r\n\r\n        const cityHandler = useCallback((event) => \r\n        {\r\n            setCity(event.target.value);\r\n        }, [ setCity ]);\r\n\r\n        const provinceHandler = useCallback((event) => \r\n        {\r\n            setProvince(event.target.value);\r\n        }, [ setProvince ]);\r\n\r\n        const postalCodeHandler = useCallback((event) => \r\n        {\r\n            if(postalCodeRegex.test(String(event.target.value)))\r\n            {\r\n                setPostalCodeError(false);\r\n            }\r\n            else\r\n            {   \r\n                setPostalCodeError(true);\r\n            }\r\n\r\n            setPostalCode(event.target.value);\r\n\r\n        }, [ setPostalCode, setPostalCodeError, postalCodeRegex ]);\r\n\r\n        const countryHandler = useCallback((event) => \r\n        {\r\n            setCountry(event.target.value);\r\n        }, [ setCountry ]);\r\n\r\n    // Hooks ===\r\n\r\n    \r\n        // Fetch User List | First Render Only\r\n        useEffect( () =>\r\n        {\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(gender == \"NonBinary\")\r\n            {\r\n                setIsGender2(true);\r\n            }\r\n            else\r\n            {\r\n                setIsGender2(false);\r\n                setGender2(\"\");\r\n                setGender2Error(false);\r\n            }\r\n        }, [ gender ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(language == \"Other\")\r\n            {\r\n                setIsLanguage2(true);\r\n            }\r\n            else\r\n            {\r\n                setIsLanguage2(false);\r\n                setLanguage2(\"\");\r\n                setLanguage2Error(false);\r\n            }\r\n        }, [ language ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {createUserDialog? (\r\n                    <Dialog id=\"create-user-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={createUserDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Create a User\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {createUserDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <>\r\n                                    <Typography component=\"div\" variant=\"body1\" color=\"inherit\" gutterBottom={true}>\r\n                                        Please fill in user information to create the corresponding account.\r\n                                    </Typography>\r\n                                    \r\n                                    <Box mx={1} my={2} boxShadow={0}>\r\n                                        <Collapse in={page == 0? true : false}>\r\n                                            <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1} display={page == 0? \"block\" : \"none\"}>\r\n                                                <Grid item xs container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={2}>\r\n                                                    <Grid item xs>\r\n                                                        <Box mx={2} my={0} boxShadow={0}>\r\n                                                            <TextField autoFocus id=\"Email\" fullWidth label=\"Email\" required onChange={(event) => { emailHandler(event); }} value={email} error={emailError}/>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid item xs>\r\n                                                        <Box mx={2} my={0} boxShadow={0}>\r\n                                                            <TextField id=\"Password\" fullWidth type=\"password\" label=\"Password\" required onChange={(event) => { passwordHandler(event); }} value={password} error={passwordError}/>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid item xs>\r\n                                                        <Box mx={2} my={0} boxShadow={0}>\r\n                                                            <TextField id=\"ConfirmPassword\" fullWidth type=\"password\" label=\"Confirm Password\" required disabled={(password == \"\" || passwordError)? true : false} onChange={(event) => { confirmPasswordHandler(event); }} value={confirmPassword} error={confirmPasswordError}/>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={2}>\r\n                                                    <Grid item>\r\n                                                        <Box mx={2} my={0} boxShadow={0}>\r\n                                                            <TextField id=\"FirstName\" fullWidth label=\"First Name\" required onChange={(event) => { firstNameHandler(event); }} value={firstName} error={firstNameError}/>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Box mx={2} my={0} boxShadow={0}>\r\n                                                            <TextField id=\"LastName\" fullWidth label=\"Last Name\" required onChange={(event) => { lastNameHandler(event); }} value={lastName} error={lastNameError}/>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Collapse>\r\n                                        <Collapse in={page == 1? true : false}>\r\n                                            <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1} display={page == 0? \"block\" : \"none\"}>\r\n                                                <Grid item xs container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={2} display={page == 1? \"block\" : \"none\"}>\r\n                                                    <Grid item>\r\n                                                        <Box mx={2} my={0} boxShadow={0}>\r\n                                                            <TextField\r\n                                                                id=\"Language\"\r\n                                                                select\r\n                                                                required\r\n                                                                fullWidth\r\n                                                                label=\"Language\"\r\n                                                                value={language}\r\n                                                                onChange={(event) => { languageHandler(event); }}\r\n                                                                variant=\"outlined\"\r\n                                                            >\r\n                                                                <MenuItem key={'English'} value={'English'}>English</MenuItem>\r\n                                                                <MenuItem key={'Other'} value={'Other'}>Other</MenuItem>\r\n                                                            </TextField>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Box mx={2} my={0} boxShadow={0}>\r\n                                                            <TextField id=\"Language2\" fullWidth label=\"Specify Language\" required={isLanguage2} onChange={(event) => { language2Handler(event); }} value={language2} error={language2Error} disabled={!isLanguage2}/>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={2} display={page == 1? \"block\" : \"none\"}>\r\n                                                    <Grid item>\r\n                                                        <Box mx={2} my={0} boxShadow={0}>\r\n                                                            <TextField\r\n                                                                id=\"Gender\"\r\n                                                                select\r\n                                                                required\r\n                                                                fullWidth\r\n                                                                label=\"Gender\"\r\n                                                                value={gender}\r\n                                                                onChange={(event) => { genderHandler(event); }}\r\n                                                                variant=\"outlined\"\r\n                                                            >\r\n                                                                <MenuItem key={'Male'} value={'Male'}>Male</MenuItem>\r\n                                                                <MenuItem key={'Female'} value={'Female'}>Female</MenuItem>\r\n                                                                <MenuItem key={'NonBinary'} value={'NonBinary'}>Non-Binary</MenuItem>\r\n                                                            </TextField>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Box mx={2} my={0} boxShadow={0}>\r\n                                                            <TextField id=\"Gender2\" fullWidth label=\"Specify Gender\" required={isGender2} onChange={(event) => { gender2Handler(event); }} value={gender2} error={gender2Error} disabled={!isGender2}/>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Collapse>\r\n                                        <Collapse in={page == 2? true : false}>\r\n                                            <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1} display={page == 0? \"block\" : \"none\"}>\r\n                                                <Grid item xs container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={2} display={page == 2? \"block\" : \"none\"}>\r\n                                                    <Grid item>\r\n                                                        <Box mx={2} my={0} boxShadow={0}>\r\n                                                            <TextField\r\n                                                                id=\"DateOfBirth\"\r\n                                                                fullWidth\r\n                                                                required\r\n                                                                label=\"Date of Birth\"\r\n                                                                type=\"date\"\r\n                                                                defaultValue={dateOfBirth}\r\n                                                                onChange={(event) => { dateOfBirthHandler(event); }}\r\n                                                                InputLabelProps={{\r\n                                                                    shrink: true\r\n                                                                }}\r\n                                                                inputProps={\r\n                                                                    {\r\n                                                                        required: true,\r\n                                                                        max: new Date().toISOString().split('T')[0]\r\n                                                                    }\r\n                                                                }\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={2} display={page == 2? \"block\" : \"none\"}>\r\n                                                    <Grid item>\r\n                                                        <Box mx={2} my={0} boxShadow={0}>\r\n                                                            <TextField\r\n                                                                id=\"Role\"\r\n                                                                select\r\n                                                                required\r\n                                                                fullWidth\r\n                                                                label=\"Role\"\r\n                                                                value={role}\r\n                                                                onChange={(event) => { roleHandler(event); }}\r\n                                                                variant=\"outlined\"\r\n                                                            >\r\n                                                                <MenuItem key={'Admin'} value={'Admin'}>Admin</MenuItem>\r\n                                                                <MenuItem key={'Coordinator'} value={'Coordinator'}>Coordinator</MenuItem>\r\n                                                                <MenuItem key={'Volunteer'} value={'Volunteer'}>Volunteer</MenuItem>\r\n                                                                <MenuItem key={'Patient'} value={'Patient'}>Patient</MenuItem>\r\n                                                            </TextField>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Collapse>\r\n                                        <Collapse in={page == 3? true : false}>\r\n                                            <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1} display={page == 0? \"block\" : \"none\"}>\r\n                                                <Grid item xs container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={2} display={page == 3? \"block\" : \"none\"}>\r\n                                                    <Grid item xs>\r\n                                                        <Box mx={2} my={0} boxShadow={0}>\r\n                                                            <TextField autoFocus id=\"Street\" fullWidth label=\"Street\" required onChange={(event) => { streetHandler(event); }} value={street} error={streetError}/>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid item xs>\r\n                                                        <Box mx={2} my={0} boxShadow={0}>\r\n                                                            <TextField id=\"City\" fullWidth label=\"City\" required onChange={(event) => { cityHandler(event); }} value={city} error={cityError}/>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid item xs>\r\n                                                        <Box mx={2} my={0} boxShadow={0}>\r\n                                                            <TextField id=\"PostalCode\" fullWidth label=\"Postal Code\" required onChange={(event) => { postalCodeHandler(event); }} value={postalCode} error={postalCodeError}/>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={2} display={page == 3? \"block\" : \"none\"}>\r\n                                                    <Grid item>\r\n                                                        <Box mx={2} my={0} boxShadow={0}>\r\n                                                            <TextField\r\n                                                                id=\"Province\"\r\n                                                                select\r\n                                                                required\r\n                                                                fullWidth\r\n                                                                label=\"Province\"\r\n                                                                value={province}\r\n                                                                onChange={(event) => { provinceHandler(event); }}\r\n                                                                variant=\"outlined\"\r\n                                                            >\r\n                                                                <MenuItem key={'AB'} value={'AB'}>Alberta</MenuItem>\r\n                                                                <MenuItem key={'BC'} value={'BC'}>British Columbia</MenuItem>\r\n                                                                <MenuItem key={'MB'} value={'MB'}>Manitoba</MenuItem>\r\n                                                                <MenuItem key={'NB'} value={'NB'}>New Brunswick</MenuItem>\r\n                                                                <MenuItem key={'NL'} value={'NL'}>Newfoundland and Labrador</MenuItem>\r\n                                                                <MenuItem key={'NT'} value={'NT'}>Northwest Territories</MenuItem>\r\n                                                                <MenuItem key={'NS'} value={'NS'}>Nova Scotia</MenuItem>\r\n                                                                <MenuItem key={'NU'} value={'NU'}>Nunavut</MenuItem>\r\n                                                                <MenuItem key={'ON'} value={'ON'}>Ontario</MenuItem>\r\n                                                                <MenuItem key={'PE'} value={'PE'}>Prince Edward Island</MenuItem>\r\n                                                                <MenuItem key={'QC'} value={'QC'}>Quebec</MenuItem>\r\n                                                                <MenuItem key={'SK'} value={'SK'}>Saskatchewan</MenuItem>\r\n                                                                <MenuItem key={'YT'} value={'YT'}>Yukon</MenuItem>\r\n                                                            </TextField>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Box mx={2} my={0} boxShadow={0}>\r\n                                                            <TextField\r\n                                                                id=\"Country\"\r\n                                                                select\r\n                                                                required\r\n                                                                fullWidth\r\n                                                                label=\"Country\"\r\n                                                                value={country}\r\n                                                                onChange={(event) => { countryHandler(event); }}\r\n                                                                variant=\"outlined\"\r\n                                                            >\r\n                                                                <MenuItem key={'Canada'} value={'Canada'}>Canada</MenuItem>\r\n                                                            </TextField>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Collapse>\r\n                                    </Box>\r\n                                </>\r\n                            )}\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={createUserDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Collapse in={page == 0? true : false}>\r\n                                <Box mx={2} my={0} boxShadow={0} display={page == 0? \"block\" : \"none\"}>\r\n                                    <Button color=\"secondary\" variant=\"contained\" endIcon={<NavigateNextIcon />} onClick={() => { navigateNext(); }}>\r\n                                        Next\r\n                                    </Button>\r\n                                </Box>\r\n                            </Collapse>\r\n                            <Collapse in={page == 1? true : false}>\r\n                                <Box mx={2} my={0} boxShadow={0} display={page == 1? \"block\" : \"none\"}>\r\n                                    <ButtonGroup display={page == 1? \"block\" : \"none\"}>\r\n                                        <Button color=\"secondary\" variant=\"outlined\" startIcon={<NavigateBeforeIcon />} onClick={() => { navigateBack(); }}>\r\n                                            Back\r\n                                        </Button>\r\n                                        <Button color=\"secondary\" variant=\"contained\" endIcon={<NavigateNextIcon />} onClick={() => { navigateNext(); }}>\r\n                                            Next\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                    \r\n                                </Box>\r\n                            </Collapse>\r\n                            <Collapse in={page == 2? true : false}>\r\n                                <Box mx={2} my={0} boxShadow={0} display={page == 2? \"block\" : \"none\"}>\r\n                                    <ButtonGroup display={page == 2? \"block\" : \"none\"}>\r\n                                        <Button color=\"secondary\" variant=\"outlined\" startIcon={<NavigateBeforeIcon />} onClick={() => { navigateBack(); }}>\r\n                                            Back\r\n                                        </Button>\r\n                                        <Button color=\"secondary\" variant=\"contained\" endIcon={<NavigateNextIcon />} onClick={() => { navigateNext(); }}>\r\n                                            Next\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                    \r\n                                </Box>\r\n                            </Collapse>\r\n                            <Collapse in={page == 3? true : false}>\r\n                                <Box mx={2} my={0} boxShadow={0} display={page == 3? \"block\" : \"none\"}>\r\n                                    <ButtonGroup display={page == 3? \"block\" : \"none\"}>\r\n                                        <Button color=\"secondary\" variant=\"outlined\" startIcon={<NavigateBeforeIcon />} onClick={() => { navigateBack(); }}>\r\n                                            Back\r\n                                        </Button>\r\n                                        <Button color=\"primary\" variant=\"contained\" endIcon={<AddBoxOutlinedIcon />} onClick={() => { createHandler(); }}\r\n                                            disabled={createUserDialogExecuting}\r\n                                        >\r\n                                            Create\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                   \r\n                                </Box>\r\n                            </Collapse>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nCreateUserDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    createUserDialog: PropTypes.bool.isRequired,\r\n    setCreateUserDialog: PropTypes.func.isRequired,\r\n    createUserDialogExecuting: PropTypes.bool.isRequired,\r\n    setCreateUserDialogExecuting: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nCreateUserDialog.defaultProps = \r\n{\r\n    appState: {},\r\n    setParentAlert: () => {},\r\n    getParentData:  () => {},\r\n    setCreateUserDialog:  () => {},\r\n    setCreateUserDialogExecuting:  () => {}\r\n}\r\n\r\nexport default CreateUserDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ============================================\r\n// Sends a DELETE request to server using axios\r\n// ============================================\r\nimport axios from 'axios';\r\n\r\nfunction _delete(url, token, callback)\r\n{\r\n    axios({\r\n        method: 'delete',\r\n        url: '/api/' + url,\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + token\r\n        },\r\n        timeout: 5000\r\n    })\r\n    .then(response => {\r\n        callback(null, response);\r\n    })\r\n    .catch(error => {\r\n        callback(error, null);\r\n    });\r\n}\r\n\r\nexport default _delete;","// ================================================\r\n// Code associated with SaveChapterDialog\r\n// ================================================\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\nimport del from '../../../../helpers/common/delete';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// ==================== MUI Icons ====================\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst DeleteUserDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, getParentData, setParentAlert,\r\n            deleteUserDialog, setDeleteUserDialog,\r\n            deleteUserDialogExecuting, setDeleteUserDialogExecuting,\r\n            selectedDataItemsList, setSelectedDataItemsList  } = props;\r\n\r\n\r\n    // Functions ===\r\n\r\n        const deleteUserSelected = useCallback(() =>\r\n        {\r\n            if(selectedDataItemsList)\r\n            {\r\n                selectedDataItemsList.forEach(item => {\r\n                    del(\"users/\" + item._id, appState.token, (error, response) => \r\n                    {\r\n                        if(error)\r\n                        {\r\n                            setDeleteUserDialog(false);\r\n                            setParentAlert(new AlertType('Unable to delete user(s). Please try again.', \"error\"));\r\n                        }\r\n                        else\r\n                        {\r\n                            if(response.status === 200)\r\n                            {\r\n                                getParentData();\r\n                                setParentAlert(new AlertType('Successfully deleted. You can continue working.', \"success\")); \r\n                            }   \r\n                            else\r\n                            {\r\n                                setDeleteUserDialog(false);\r\n                                setParentAlert(new AlertType('Unable to delete user(s). Please try again.', \"error\"));\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setDeleteUserDialog(false);\r\n                setParentAlert(new AlertType('Unable to delete user(s). Please try again.', \"error\"));\r\n            }\r\n\r\n            // window.location.reload(); Last resort, refresh the entire page\r\n        }, [ appState, selectedDataItemsList, setDeleteUserDialog, setParentAlert, getParentData]);\r\n\r\n        \r\n        const closeHandler = useCallback(() => {\r\n            setDeleteUserDialog(false);\r\n        }, [ setDeleteUserDialog ]);\r\n\r\n\r\n        const deleteHandler = useCallback(() => {\r\n            try{\r\n                setDeleteUserDialogExecuting(true);\r\n                deleteUserSelected();\r\n                setDeleteUserDialogExecuting(false);\r\n                setDeleteUserDialog(false);\r\n                setSelectedDataItemsList([]);\r\n            }\r\n            catch{\r\n\r\n            }\r\n        }, [ setDeleteUserDialogExecuting, deleteUserSelected, setSelectedDataItemsList, setDeleteUserDialog]);\r\n\r\n\r\n    // Hooks ===\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {selectedDataItemsList? (\r\n                    <Dialog id=\"delete-user-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={deleteUserDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Delete user{selectedDataItemsList.length === 1? null : \"s\"}\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {deleteUserDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <DialogContentText>\r\n                                    {selectedDataItemsList.length === 1? (\r\n                                        <>\r\n                                            Are you sure you would like to delete the user?\r\n                                        </>\r\n                                        \r\n                                    ) : (\r\n                                        <>\r\n                                            {`Are you sure you would like to delete ${selectedDataItemsList.length} users?`}\r\n                                        </>\r\n                                    )}\r\n                                </DialogContentText>\r\n                            )}\r\n                        \r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={deleteUserDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<DeleteIcon />} onClick={() => { deleteHandler(); }} disabled={deleteUserDialogExecuting}>\r\n                                Delete\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nDeleteUserDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    deleteUserDialog: PropTypes.bool.isRequired,\r\n    setDeleteUserDialog: PropTypes.func.isRequired,\r\n    deleteUserDialogExecuting: PropTypes.bool.isRequired,\r\n    setDeleteUserDialogExecuting: PropTypes.func.isRequired,\r\n    selectedDataItemsList: PropTypes.arrayOf(PropTypes.object),\r\n    setSelectedDataItemsList: PropTypes.func.isRequired\r\n}\r\n\r\nDeleteUserDialog.defaultProps = \r\n{\r\n    appState: {},\r\n    getParentData: () => {},\r\n    setParentAlert: () => {},\r\n    deleteUserDialog: {},\r\n    setDeleteUserDialog: () => {},\r\n    deleteUserDialogExecuting: {},\r\n    setDeleteUserDialogExecuting: () => {},\r\n    selectedDataItemsList: {},\r\n    setSelectedDataItemsList: () => {}\r\n}\r\n\r\nexport default DeleteUserDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with the Users Management page.\r\n// Displays all existing user created and allows\r\n// user to delete, edit and preview them\r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Components ====================\r\nimport AlertMessage from '../../../../components/AlertMessage';\r\n\r\nimport UserTable from '../Components/UserTable/UserTable';\r\nimport UsersManagementControlPanel from '../Components/UsersManagementControlPanel/UsersManagementControlPanel';\r\n\r\nimport AssignUserDialog from '../Dialog/AssignUserDialog';\r\nimport CreateUserDialog from '../Dialog/CreateUserDialog';\r\nimport DeleteUserDialog from '../Dialog/DeleteUserDialog';\r\n\r\n// ==================== Helpers ====================\r\nimport get from '../../../../helpers/common/get';\r\nimport post from '../../../../helpers/common/post';\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI ====================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\nimport PeopleIcon from '@material-ui/icons/People';\r\n\r\n// ==================== Styles ====================\r\nconst useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n({\r\n    root: {\r\n        flexGrow: 1     // CSS determined this way, flexbox properties\r\n    }\r\n}));\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst UsersManagement = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, ToggleDrawerClose, CheckAuthenticationValidity, mode } = props;\r\n        \r\n        // IsDense ; is the template table in compact form\r\n        const [isDense, setIsDense] = useState(true);\r\n\r\n        // Current dataList variable\r\n        const [dataList, setDataList] = useState(null);\r\n\r\n        // Current dataList variable\r\n        const [searchFilteredDataList, setSearchFilteredDataList] = useState(null);\r\n\r\n        // Current selected items dataList variable\r\n        const [selectedDataItemsList, setSelectedDataItemsList] = useState(null);\r\n\r\n        // Assign User Dialog Logic variables\r\n        const [assignUserDialog, setAssignUserDialog] = useState(false);\r\n        const [assignUserDialogExecuting, setAssignUserDialogExecuting] = useState(false);\r\n\r\n        // Create User Dialog Logic variables\r\n        const [createUserDialog, setCreateUserDialog] = useState(false);\r\n        const [createUserDialogExecuting, setCreateUserDialogExecuting] = useState(false);\r\n\r\n        // Delete User Dialog Logic variables\r\n        const [deleteUserDialog, setDeleteUserDialog] = useState(false);\r\n        const [deleteUserDialogExecuting, setDeleteUserDialogExecuting] = useState(false);\r\n\r\n\r\n        // Alert variable\r\n        const [alert, setAlert] = useState(new AlertType());\r\n\r\n    // Functions ===\r\n\r\n        const populateList = useCallback((data) => \r\n        {\r\n            let tempArray = new Array();\r\n\r\n            if(data && Array.isArray(data))\r\n            {\r\n                data.forEach(item => {\r\n\r\n                    if(item._id === appState._id)\r\n                    {\r\n                        return;\r\n                    }\r\n\r\n                    tempArray.push(\r\n                        {\r\n                            _id: item._id,\r\n                            sequenceId: item.sequenceId,\r\n                            collections: item.collections,\r\n                            email: item.email,\r\n                            enabled: item.enabled,\r\n                            info: item.info,\r\n                            patients: item.patients,\r\n                            workers: item.workers,\r\n                            research: item.research,\r\n                            role: item.role,\r\n                            createdBy: item.createdBy,\r\n                            createdAt: item.updatedAt,\r\n                            modifiedBy: item.modifiedBy,\r\n                            updatedAt: item.updatedAt\r\n                        });\r\n                });\r\n            }\r\n\r\n            setDataList([...tempArray]);\r\n            setSearchFilteredDataList([...tempArray]);\r\n            setSelectedDataItemsList([]);\r\n        }, [ appState ] );\r\n\r\n        // Retrieve the list of Users\r\n        const getUsers = useCallback(() => {\r\n\r\n            if(appState)\r\n            {\r\n                if(mode === \"Admin\")\r\n                {\r\n                    get(\"users/\", appState.token, (err, res) => \r\n                    {\r\n                        if(err)\r\n                        {   \r\n                            //Bad callback call\r\n                            //setAlert(new AlertType(err.message, \"error\"));\r\n                            setAlert(new AlertType('Unable to retrieve Users. Please refresh and try again.', \"error\"));\r\n                        }\r\n                        else\r\n                        {\r\n                            if(res.status === 200)\r\n                            {\r\n                                populateList(res.data.response.users);\r\n                            }\r\n                            else\r\n                            {\r\n                                //Bad HTTP Response\r\n                                setAlert(new AlertType('Unable to retrieve Users. Please refresh and try again.', \"error\"));\r\n                            }\r\n                        }\r\n\r\n                    }); \r\n                }\r\n                else if(mode === \"Other\")\r\n                {\r\n                    get(\"users/\" + appState._id, appState.token, (err, res) => \r\n                    {\r\n                        if(err)\r\n                        {   \r\n                            //Bad callback call\r\n                            //setAlert(new AlertType(err.message, \"error\"));\r\n                            setAlert(new AlertType('Unable to retrieve Users. Please refresh and try again.', \"error\"));\r\n                        }\r\n                        else\r\n                        {\r\n                            if(res.status === 200)\r\n                            {\r\n                                populateList(res.data.user.patients);\r\n                            }\r\n                            else\r\n                            {\r\n                                //Bad HTTP Response\r\n                                setAlert(new AlertType('Unable to retrieve Users. Please refresh and try again.', \"error\"));\r\n                            }\r\n                        }\r\n\r\n                    }); \r\n                }\r\n                \r\n            }\r\n\r\n            \r\n        }, [ populateList, appState, mode ] );\r\n\r\n    // Hooks ===\r\n\r\n        // Fetch DataList | First Render Only\r\n        useEffect( () =>\r\n        {\r\n            ToggleDrawerClose();\r\n            setTimeout(() => {\r\n                CheckAuthenticationValidity( (tokenValid) => \r\n                {\r\n                    if(tokenValid)\r\n                    {\r\n                        getUsers();\r\n                    }\r\n                    else {\r\n                        //Bad HTTP Response\r\n                        setAlert(null);\r\n                    }\r\n                });\r\n            }, 200);\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            getUsers();\r\n        }, [ mode ]);\r\n\r\n        useEffect( () => {\r\n            setSearchFilteredDataList(dataList);\r\n            setSelectedDataItemsList([]);\r\n        }, [ dataList ] );\r\n\r\n    // Component Render Section ===\r\n    return (\r\n        alert != null? (\r\n            // Notice the shorthand React render Fragment <> & </> instead of <div> & </div>, both work the same\r\n            <div className={classes.root}>\r\n                <Grid container\r\n                direction=\"row\"\r\n                justifyContent=\"flex-start\"\r\n                alignItems=\"stretch\"\r\n                style={ {\"height\": \"100%\"} }\r\n                spacing={1}\r\n                >\r\n                    <Grid item xs={5}>\r\n                        <Box mx={1} my={1}>\r\n                            {mode === \"Admin\"? (\r\n                                <Typography variant=\"h5\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                                    Manage Users\r\n                                </Typography>\r\n                            ) : (\r\n                                <>\r\n                                </>\r\n                            )}\r\n                            {mode === \"Other\"? (\r\n                                <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-end\" spacing={2}>\r\n                                    <Grid item>\r\n                                        <PeopleIcon color=\"primary\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <Typography variant=\"h5\" color=\"secondary\" align=\"left\" gutterBottom={false}>\r\n                                            Your Members\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            ) : (\r\n                                <>\r\n                                </>\r\n                            )}\r\n                        </Box> \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Box mx={1} my={1}>\r\n                            <AlertMessage alert={alert} setParentAlert={setAlert} />\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Box mx={1} my={1} boxShadow={3}>\r\n                            <Card raised={true}>\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"column\"\r\n                                    justifyContent=\"flex-start\"\r\n                                    alignItems=\"stretch\"\r\n                                    spacing={0}\r\n                                >\r\n                                    {dataList && searchFilteredDataList && selectedDataItemsList? (\r\n                                        <Grid item xs={12}>\r\n                                            <UsersManagementControlPanel\r\n                                                mode={mode}\r\n                                                isDense={isDense}\r\n                                                setIsDense={setIsDense}\r\n                                                dataList={dataList}\r\n                                                getParentData={getUsers}\r\n                                                setSearchFilteredDataList={setSearchFilteredDataList}\r\n                                                setCreateUserDialog={setCreateUserDialog}\r\n                                                setAssignUserDialog={setAssignUserDialog}\r\n                                                setParentAlert={setAlert}\r\n                                            />\r\n                                            <UserTable\r\n                                                appState={appState}\r\n                                                isDense={isDense}\r\n                                                searchFilteredDataList={searchFilteredDataList}\r\n                                                selectedDataItemsList={selectedDataItemsList}\r\n                                                setSelectedDataItemsList={setSelectedDataItemsList}\r\n                                                setParentDeleteUserDialog={setDeleteUserDialog}\r\n                                                // setParentExportChapterDialog={setExportChapterDialog}\r\n                                            />\r\n                                        </Grid>\r\n                                    ) : (\r\n                                        <Grid item xs={12} container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1}>\r\n                                            <Grid item>\r\n                                                <Box mx={1} my={1} boxShadow={0}>\r\n                                                    <CircularProgress />\r\n                                                </Box>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    )}\r\n                                </Grid>\r\n                            </Card>\r\n                        </Box>    \r\n                    </Grid>\r\n                </Grid>\r\n                <AssignUserDialog\r\n                    assignUserDialog={assignUserDialog}\r\n                    setAssignUserDialog={setAssignUserDialog}\r\n                    assignUserDialogExecuting={assignUserDialogExecuting}\r\n                    setAssignUserDialogExecuting={setAssignUserDialogExecuting}\r\n                    setParentAlert={setAlert}\r\n                    getParentData={getUsers}\r\n                    selectedUserList={selectedDataItemsList}\r\n                    appState={appState}\r\n                />\r\n                <CreateUserDialog\r\n                    createUserDialog={createUserDialog}\r\n                    setCreateUserDialog={setCreateUserDialog}\r\n                    createUserDialogExecuting={createUserDialogExecuting}\r\n                    setCreateUserDialogExecuting={setCreateUserDialogExecuting}\r\n                    setParentAlert={setAlert}\r\n                    getParentData={getUsers}\r\n                    appState={appState}\r\n                />\r\n                <DeleteUserDialog\r\n                    deleteUserDialog={deleteUserDialog}\r\n                    setDeleteUserDialog={setDeleteUserDialog}\r\n                    deleteUserDialogExecuting={deleteUserDialogExecuting}\r\n                    setDeleteUserDialogExecuting={setDeleteUserDialogExecuting}\r\n                    selectedDataItemsList={selectedDataItemsList}\r\n                    setSelectedDataItemsList={setSelectedDataItemsList}\r\n                    setParentAlert={setAlert}\r\n                    getParentData={getUsers}\r\n                    appState={appState}\r\n                />\r\n            </div>\r\n        ) : (\r\n            <Typography variant=\"h6\" color=\"inherit\" align=\"center\" gutterBottom>\r\n                Not Authorized. Please refresh and try again.\r\n            </Typography>\r\n        )\r\n        \r\n    );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nUsersManagement.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    ToggleDrawerClose: PropTypes.func.isRequired,\r\n    CheckAuthenticationValidity: PropTypes.func.isRequired\r\n}\r\n\r\nUsersManagement.defaultProps = {\r\n    appState: {},\r\n    ToggleDrawerClose: () => {},\r\n    CheckAuthenticationValidity: () => {}\r\n}\r\n\r\nexport default UsersManagement;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with Changes User Dialog\r\n// ================================================\r\nimport React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\nimport patch from  '../../../../helpers/common/patch';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// ==================== MUI Icons ====================\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst ChangesUserDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, setParentAlert, user, toBePanelIndex, setPanelIndex,\r\n            changesUserDialog, setChangesUserDialog,\r\n            changesUserDialogExecuting, setChangesUserDialogExecuting } = props;\r\n\r\n    // Functions ===\r\n\r\n        // Saves current state of user and updates it in the database\r\n        // const saveUser = useCallback(() =>\r\n        // {\r\n\r\n        //     if(user)\r\n        //     {\r\n        //         let HttpQuery;\r\n\r\n        //         if(isTemplate)\r\n        //         {\r\n        //             HttpQuery =\r\n        //             {\r\n        //                 name: user.name,\r\n        //                 surveyJSON: user.surveyJSON,\r\n        //                 isPublic: user.isPublic\r\n        //             }\r\n        //         }\r\n        //         else\r\n        //         {\r\n        //             HttpQuery =\r\n        //             {\r\n        //                 approved: user.approved,\r\n        //                 completeStatus: user.completeStatus,\r\n        //                 responseJSON: user.responseJSON\r\n        //             }\r\n        //         }\r\n\r\n        //         patch((isTemplate? \"surveys/\" : \"membersurveys/\") + userID, appState.token, HttpQuery, (error, response) => \r\n        //         {\r\n        //             if(error)\r\n        //             {\r\n        //                 setChangesUserDialog(false);\r\n        //                 setParentAlert(new AlertType('Unable to retrieve save user. Please try again.', \"error\"));\r\n        //             }\r\n        //             else\r\n        //             {\r\n        //                 if(response.status === 200)\r\n        //                 {\r\n        //                     setParentAlert(new AlertType('Successfully Saved. You can continue editing if you wish.', \"success\")); \r\n        //                 }\r\n        //                 else\r\n        //                 {\r\n        //                     setChangesUserDialog(false);\r\n        //                     setParentAlert(new AlertType('Unable to retrieve save user. Please try again.', \"error\"));\r\n        //                 }\r\n        //             }\r\n        //         });\r\n        //     }\r\n        //     else\r\n        //     {\r\n        //         setChangesUserDialog(false);\r\n        //         setParentAlert(new AlertType('Unable to retrieve save user. Please try again.', \"error\"));\r\n        //     }\r\n            \r\n        // }, [ setChangesUserDialog, setParentAlert, user, userID, appState, isTemplate ]);\r\n\r\n        \r\n        const closeHandler = useCallback(() => {\r\n            setChangesUserDialog(false);\r\n        }, [ setChangesUserDialog ]);\r\n\r\n\r\n        const saveHandler = useCallback(() => {\r\n            try{\r\n                setChangesUserDialogExecuting(true);\r\n                // saveUser();\r\n                setChangesUserDialogExecuting(false);\r\n                setChangesUserDialog(false);\r\n                setPanelIndex(toBePanelIndex);\r\n            }\r\n            catch{\r\n\r\n            }\r\n        }, [ setChangesUserDialogExecuting, setChangesUserDialog, setParentAlert, setPanelIndex, toBePanelIndex ]);\r\n\r\n\r\n    // Hooks ===\r\n\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {user? (\r\n                    <Dialog id=\"save-user-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={changesUserDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Unsaved Changes\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {changesUserDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <DialogContentText>\r\n                                    You have some unsaved changes. Would you like to save the user changes?\r\n                                </DialogContentText>\r\n                            )}\r\n                        \r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={changesUserDialogExecuting}>\r\n                                Back\r\n                            </Button>\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<SaveIcon />} onClick={() => { saveHandler(); }} disabled={changesUserDialogExecuting}>\r\n                                Save\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nChangesUserDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    user: PropTypes.object,\r\n    toBePanelIndex: PropTypes.number.isRequired,\r\n    setPanelIndex: PropTypes.func.isRequired,\r\n    changesUserDialog: PropTypes.bool.isRequired,\r\n    setChangesUserDialog: PropTypes.func.isRequired,\r\n    changesUserDialogExecuting: PropTypes.bool.isRequired, \r\n    setChangesUserDialogExecuting: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nChangesUserDialog.defaultProps = \r\n{\r\n    appState: {},\r\n    setParentAlert: () => {},\r\n    user: {},\r\n    toBePanelIndex: {},\r\n    setPanelIndex: () => {},\r\n    changesUserDialog: {},\r\n    setChangesUserDialog: () => {},\r\n    changesUserDialogExecuting: {}, \r\n    setChangesUserDialogExecuting: () => {}\r\n}\r\n\r\nexport default ChangesUserDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport { TableHead } from '@material-ui/core';\r\nimport { TableRow } from '@material-ui/core';\r\nimport { TableCell } from '@material-ui/core';\r\nimport { TableSortLabel } from '@material-ui/core';\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\n// ==================== MUI Icons ====================\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        visuallyHidden: {\r\n            border: 0,\r\n            clip: 'rect(0 0 0 0)',\r\n            height: 1,\r\n            margin: -1,\r\n            overflow: 'hidden',\r\n            padding: 0,\r\n            position: 'absolute',\r\n            top: 20,\r\n            width: 1,\r\n          }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n    const headCellTitlesCollectionTemplate = [ //This is a user specified array is used to populate the table header cells. Notice the Template Specifications\r\n        { id: 'collectionName', numeric: false, disablePadding: true, label: 'Service Name' },\r\n        { id: 'collectionId', numeric: false, disablePadding: true, label: 'Service ID' },\r\n        { id: 'numProjects', numeric: true, disablePadding: false, label: '# of Associated Projects' },\r\n        { id: 'numMembers', numeric: true, disablePadding: false, label: '# of Associated Members' },\r\n        { id: 'numSurveyTemplates', numeric: true, disablePadding: false, label: '# of Chapter Templates' },\r\n        { id: 'numMemberSurveys', numeric: true, disablePadding: false, label: '# of Instances' },\r\n        { id: 'createdAt', numeric: true, disablePadding: false, label: 'Date Created' },\r\n        { id: 'updatedAt', numeric: true, disablePadding: false, label: 'Date Last Modified' },\r\n    ];\r\n\r\n    const headCellTitlesMemberCollection = [\r\n        { id: 'collectionName', numeric: false, disablePadding: true, label: 'Service Name' },\r\n        { id: 'collectionId', numeric: false, disablePadding: true, label: 'Service ID' },\r\n        { id: 'completeness', numeric: false, disablePadding: true, label: 'Completeness' },\r\n        { id: 'clientName', numeric: false, disablePadding: true, label: 'Client Name' },\r\n        { id: 'clientId', numeric: false, disablePadding: true, label: 'Client ID' },\r\n        { id: 'numMemberSurveys', numeric: true, disablePadding: false, label: '# of Member Chapters' },\r\n        { id: 'createdAt', numeric: true, disablePadding: false, label: 'Date Created' },\r\n        { id: 'updatedAt', numeric: true, disablePadding: false, label: 'Date Last Modified' },\r\n    ];\r\n\r\n    const headCellTitlesMemberCollectionClient = [\r\n        { id: 'collectionName', numeric: false, disablePadding: true, label: 'Service Name' },\r\n        { id: 'collectionId', numeric: false, disablePadding: true, label: 'Service ID' },\r\n        { id: 'completeness', numeric: false, disablePadding: true, label: 'Completeness' },\r\n        { id: 'createdAt', numeric: true, disablePadding: false, label: 'Date Created' },\r\n        { id: 'updatedAt', numeric: true, disablePadding: false, label: 'Date Last Modified' },\r\n    ];\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst CollectionTableHead = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { userID, isTemplates, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n\r\n        const [headCells, setHeadCells] = useState(null);\r\n\r\n        \r\n    // Functions ===\r\n\r\n        const createSortHandler = useCallback((property) => (event) => {\r\n            onRequestSort(event, property);\r\n        }, [ onRequestSort ]);\r\n\r\n    // Hooks ===\r\n\r\n    useEffect( () =>\r\n        {\r\n            if(userID)\r\n            {\r\n                setHeadCells(headCellTitlesMemberCollectionClient);\r\n            }\r\n            else\r\n            {\r\n                if(isTemplates)\r\n                {\r\n                    setHeadCells(headCellTitlesCollectionTemplate);\r\n                }\r\n                else \r\n                {\r\n                    setHeadCells(headCellTitlesMemberCollection);\r\n                }\r\n            }\r\n            \r\n        }, [ userID, isTemplates ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                            checked={rowCount > 0 && numSelected === rowCount}\r\n                            onChange={onSelectAllClick}\r\n                            inputProps={{ 'aria-label': 'select all' }}\r\n                        />\r\n                    </TableCell>\r\n                    {headCells? ( \r\n                        headCells.map((headCell) => (\r\n                            <TableCell\r\n                                key={headCell.id}\r\n                                align={headCell.numeric ? 'right' : 'left'}\r\n                                padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                                sortDirection={orderBy === headCell.id ? order : false}\r\n                            >\r\n                                <TableSortLabel\r\n                                    active={orderBy === headCell.id}\r\n                                    direction={orderBy === headCell.id ? order : 'asc'}\r\n                                    onClick={createSortHandler(headCell.id)}\r\n                                >\r\n                                {headCell.label}\r\n                                {orderBy === headCell.id ? (\r\n                                    <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                    </span>\r\n                                ) : null}\r\n                                </TableSortLabel>\r\n                            </TableCell>\r\n                        ))\r\n                    ) : ( \r\n                        null\r\n                    )}\r\n                </TableRow>\r\n            </TableHead>\r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nCollectionTableHead.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    userID: PropTypes.string,\r\n    isTemplates: PropTypes.bool.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n}\r\n\r\nCollectionTableHead.defaultProps = \r\n{\r\n    userID: null,\r\n    isTemplates: true,\r\n    numSelected: {},\r\n    onRequestSort: () => {},\r\n    onSelectAllClick: () => {},\r\n    order: {},\r\n    orderBy: {},\r\n    rowCount: {},\r\n}\r\n\r\nexport default CollectionTableHead;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';                // Used for link navigation to other areas on the website\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\nimport clsx from 'clsx';                                // Constructing className strings conditionally. Used for render logic\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport { lighten } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// ==================== MUI Icons ====================\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(1),\r\n          },\r\n          highlight:\r\n            theme.palette.type === 'light'\r\n              ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n                }\r\n              : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n                },\r\n          title: {\r\n            flex: '1 1 100%',\r\n          }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\nconst viewCollectionBaseLinkAdministration = \"/administration/collections/\";\r\nconst viewCollectionBaseLinkStaff = \"/staff/collections/\";\r\nconst viewCollectionBaseLinkClient = \"/client/collections/\";\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst CollectionTableToolbar = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, isTemplates, selectedDataItemsList, setParentDeleteCollectionDialog, setParentExportCollectionDialog} = props;\r\n        \r\n        const [viewUrl, setViewUrl] = useState(\"\");\r\n        const [editUrl, setEditUrl] = useState(\"\");\r\n\r\n        const [toolNone, setToolNone] = useState(false);\r\n        const [toolOne, setToolOne] = useState(false);\r\n        const [toolMultiple, setToolMultiple] = useState(false);\r\n\r\n    // Functions ===\r\n    \r\n        const toolHandler = useCallback(() => {\r\n            if(selectedDataItemsList.length === 0) {\r\n                setToolNone(true);\r\n                setToolOne(false);\r\n                setToolMultiple(false);\r\n            }\r\n            else if(selectedDataItemsList.length === 1) {\r\n                setToolNone(false);\r\n                setToolOne(true);\r\n                setToolMultiple(false);\r\n            }\r\n            else if(selectedDataItemsList.length > 1) {\r\n                setToolNone(false);\r\n                setToolOne(false);\r\n                setToolMultiple(true);\r\n            }\r\n        }, [ selectedDataItemsList, setToolNone, setToolOne, setToolMultiple]);\r\n    \r\n\r\n        const deleteHandler = useCallback(() => {\r\n            setParentDeleteCollectionDialog(true);\r\n        }, [ setParentDeleteCollectionDialog ]);\r\n\r\n        const exportHandler = useCallback(() => {\r\n            setParentExportCollectionDialog(true);\r\n        }, [ setParentExportCollectionDialog ]);\r\n        \r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () =>\r\n        {\r\n            toolHandler();  \r\n        }, [ selectedDataItemsList, toolHandler ]);\r\n\r\n        useEffect( () => {\r\n            \r\n            if(toolNone || toolMultiple)\r\n            {\r\n                setViewUrl(\"\");\r\n            }\r\n            else if(toolOne)\r\n            {\r\n                if(appState.role === \"Admin\")\r\n                {\r\n                    setViewUrl(viewCollectionBaseLinkAdministration + \"view/\" + selectedDataItemsList[0]._id);\r\n                }\r\n                else if(appState.role === \"Coordinator\" || appState.role === \"Volunteer\")\r\n                {\r\n                    setViewUrl(viewCollectionBaseLinkStaff + \"view/\" + selectedDataItemsList[0]._id);\r\n                }\r\n                else\r\n                {\r\n                    setViewUrl(viewCollectionBaseLinkClient + \"view/\" + selectedDataItemsList[0]._id);\r\n                }\r\n\r\n                \r\n            }\r\n\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [toolNone, toolOne, toolMultiple, isTemplates ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <Toolbar\r\n                className={clsx(classes.root, { [classes.highlight]: selectedDataItemsList.length > 0 } )}\r\n            >\r\n                {selectedDataItemsList.length > 0 ? (\r\n                    <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                        {selectedDataItemsList.length} Selected Item{selectedDataItemsList.length > 1 ? \"s\" : null}\r\n                    </Typography>\r\n                ) : (\r\n                    <Typography className={classes.title} variant=\"h6\" component=\"div\">\r\n                         {isTemplates? \"Service Template Results\" : \"Member Service Instance Results\"}\r\n                    </Typography>\r\n                )}\r\n\r\n                {toolNone ? (\r\n                    <>\r\n                        <Tooltip title=\"Filter list\">\r\n                            <IconButton aria-label=\"filter list\">\r\n                                <FilterListIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                ) : (null)}\r\n                \r\n                {toolOne? (\r\n                    <>\r\n                        <Tooltip title=\"View\">\r\n                            <IconButton aria-label=\"view\" component={Link} to={viewUrl} disabled>\r\n                                <VisibilityIcon/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                            \r\n                        {/* <Tooltip title=\"Edit\">\r\n                            <IconButton aria-label=\"edit\" component={Link} to={editUrl} >\r\n                                <EditIcon/>\r\n                            </IconButton>\r\n                        </Tooltip> */}\r\n                            \r\n                        <Tooltip title=\"Export\" onClick={() => exportHandler()}>\r\n                            <IconButton aria-label=\"export\">\r\n                                <SystemUpdateAltIcon/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                            \r\n                        <Tooltip title=\"Delete\">\r\n                            <IconButton aria-label=\"delete\" onClick={() => deleteHandler()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                ) : (null)}\r\n                {toolMultiple ? (\r\n                    <>\r\n                        {/* <Tooltip title=\"Export\">\r\n                            <IconButton aria-label=\"export\" onClick={() => exportHandler()}>\r\n                                <SystemUpdateAltIcon/>\r\n                            </IconButton>\r\n                        </Tooltip> */}\r\n\r\n                        <Tooltip title=\"Delete\">\r\n                            <IconButton aria-label=\"delete\" onClick={() => deleteHandler()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                ) : (null)}\r\n            </Toolbar>\r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nCollectionTableToolbar.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    selectedDataItemsList: PropTypes.array.isRequired,\r\n    setParentDeleteCollectionDialog: PropTypes.func.isRequired,\r\n    setParentExportCollectionDialog: PropTypes.func.isRequired,\r\n    isTemplates: PropTypes.bool.isRequired\r\n}\r\n\r\nCollectionTableToolbar.defaultProps = \r\n{\r\n    appState: {},\r\n    selectedDataItemsList: {},\r\n    setParentDeleteCollectionDialog: () => {},\r\n    setParentExportCollectionDialog: () => {},\r\n    isTemplates: true\r\n}\r\n\r\nexport default CollectionTableToolbar;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with Templates Table Component.\r\n// Displays all existing Templates created and allows\r\n// user to delete, edit and preview the Templates\r\n// survey questions.\r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// ===================== Components ======================\r\nimport CollectionTableHead from './CollectionTableHead';\r\nimport CollectionTableToolbar from './CollectionTableToolbar';\r\n\r\n// ==================== Helpers ====================\r\n\r\n// ==================== MUI ====================\r\nimport Box from '@material-ui/core/Box';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// ==================== Icons ====================\r\n\r\n// ==================== Static Helper Functions ====================\r\n\r\n    const descendingComparator = (a, b, orderBy) => {    // Establishing the result of a comparison between two objects in an array\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n    }\r\n\r\n    const getComparator = (order, orderBy) => {            // Deciding asc or desc comparison, notice the negative version of the funcion above\r\n\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    const stableSort = (array, comparator) => {\r\n\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(1),\r\n        },\r\n        tableRow: {\r\n            cursor: \"pointer\"\r\n        }\r\n    }));\r\n\r\n// ==================== Static Variables ====================\r\n\r\n//=================================================== TemplateTable Component ===================================================\r\nexport default function CollectionTable(props) {\r\n\r\n  // Variables ===\r\n\r\n         // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        const { appState, isDense, isTemplates, userID, searchFilteredDataList, setParentDeleteCollectionDialog, setParentExportCollectionDialog,\r\n            selectedDataItemsList, setSelectedDataItemsList } = props;\r\n\r\n        // Responsive Table variables\r\n        const [order, setOrder] = useState('asc');\r\n        const [orderBy, setOrderBy] = useState('collectionId');\r\n        const [page, setPage] = useState(0);\r\n        const [rowsPerPage, setRowsPerPage] = useState(20);\r\n\r\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, searchFilteredDataList.length - page * rowsPerPage);\r\n\r\n\r\n    // Functions ===\r\n\r\n        const handleRequestSort = useCallback((event, property) => {\r\n\r\n            // console.log(property);\r\n\r\n            let isAsc = orderBy === property && order === 'asc';\r\n            setOrder(isAsc ? 'desc' : 'asc');\r\n            setOrderBy(property);\r\n\r\n        }, [ order, setOrder, orderBy, setOrderBy ]);\r\n\r\n        const handleSelectAllClick = useCallback((event) => {\r\n\r\n            if (event.target.checked) {\r\n\r\n                let newSelecteds = []\r\n                \r\n                searchFilteredDataList.forEach(elem => \r\n                {\r\n                    newSelecteds.push(elem);\r\n                });\r\n                \r\n                setSelectedDataItemsList(newSelecteds);\r\n                \r\n                return;\r\n\r\n            }\r\n\r\n            setSelectedDataItemsList([]);\r\n        }, [ searchFilteredDataList, setSelectedDataItemsList ]);\r\n\r\n        const handleClick = useCallback((event, item) => {\r\n            \r\n            let previousSelectedIds = selectedDataItemsList.map(elem => elem._id);\r\n            let selectedIndex = previousSelectedIds.indexOf(item._id);\r\n            let newSelected = [];\r\n\r\n            if (selectedIndex === -1)\r\n            {\r\n                newSelected = newSelected.concat(selectedDataItemsList, item);\r\n            }\r\n            else if (selectedIndex === 0)\r\n            {\r\n                newSelected = newSelected.concat(selectedDataItemsList.slice(1));\r\n            }\r\n            else if (selectedIndex === selectedDataItemsList.length - 1)\r\n            {\r\n                newSelected = newSelected.concat(selectedDataItemsList.slice(0, -1));\r\n            }\r\n            else if (selectedIndex > 0)\r\n            {\r\n                newSelected = newSelected.concat(\r\n                    selectedDataItemsList.slice(0, selectedIndex),\r\n                    selectedDataItemsList.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            setSelectedDataItemsList(newSelected);\r\n        }, [ selectedDataItemsList, setSelectedDataItemsList ]);\r\n\r\n        const isSelected = useCallback((item) => {\r\n\r\n            let previousSelectedIds = selectedDataItemsList.map(elem => elem._id);\r\n            return previousSelectedIds.indexOf(item._id) !== -1;\r\n\r\n        }, [ selectedDataItemsList ]);\r\n        \r\n        const handleChangePage = useCallback((newPage) => {\r\n\r\n            setPage(newPage);\r\n\r\n        }, [ setPage ]);\r\n\r\n        const handleChangeRowsPerPage = useCallback((event) => {\r\n            setRowsPerPage(parseInt(event.target.value, 10));\r\n            setPage(0);\r\n        }, [ setRowsPerPage, setPage]);\r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () =>\r\n        {\r\n            setPage(0);\r\n        }, [ searchFilteredDataList ]);\r\n\r\n    // Render Section ===\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n        \r\n            <Box mx={1} my={1}>\r\n                <Paper className={classes.paper}>\r\n                    <CollectionTableToolbar\r\n                        appState={appState}\r\n                        isTemplates={isTemplates}\r\n                        selectedDataItemsList={selectedDataItemsList} \r\n                        setParentDeleteCollectionDialog={setParentDeleteCollectionDialog} \r\n                        setParentExportCollectionDialog={setParentExportCollectionDialog}\r\n                    />\r\n                    <TableContainer>\r\n                        <Table\r\n                            className={classes.table}\r\n                            aria-labelledby=\"tableTitle\"\r\n                            size={isDense ? 'small' : 'medium'}\r\n                            aria-label=\"enhanced table\"\r\n                        >\r\n                            <CollectionTableHead\r\n                                userID={userID}\r\n                                numSelected={selectedDataItemsList.length}\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                onSelectAllClick={handleSelectAllClick}\r\n                                onRequestSort={handleRequestSort}\r\n                                rowCount={searchFilteredDataList.length}\r\n                                isTemplates={isTemplates}\r\n                            />\r\n\r\n                            <TableBody>\r\n                                {stableSort(searchFilteredDataList, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((item, index) => {\r\n                                    const isItemSelected = isSelected(item);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n                                    \r\n                                    return (\r\n                                        <TableRow\r\n                                            className={classes.tableRow}\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, item)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={`row${index}-${item._id}`}\r\n                                            selected={isItemSelected}\r\n\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </TableCell>\r\n\r\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                                <Typography color=\"textPrimary\" variant=\"subtitle2\" noWrap style={{display: 'inline-block', width: '240px'}}>\r\n                                                    {isTemplates? item.name : item.collectionTemplate? item.collectionTemplate.name : \"\"}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"left\" padding=\"none\">\r\n                                                <Typography color=\"secondary\" variant=\"body2\" noWrap style={{display: 'inline-block', width: '120px'}}>\r\n                                                    {item._id}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n\r\n                                            {(isTemplates && item.projectList && item.memberList && item.memberCollectionList && item.surveyList)? (\r\n                                                <>\r\n                                                    <TableCell align=\"right\" padding=\"normal\">\r\n                                                        <Tooltip title={\r\n                                                            <>\r\n                                                                <Typography color=\"inherit\">Projects</Typography>\r\n                                                                <ol>\r\n                                                                    {item.projectList.map((subItem, index) => {\r\n                                                                        return (\r\n                                                                            <li key={`subrow${index}-${subItem._id}`}>\r\n                                                                                {subItem.name}\r\n                                                                            </li>\r\n                                                                        );\r\n                                                                    })}\r\n                                                                </ol>\r\n                                                                <em>{\"Projects apart of this\"}</em> <b>{'Service Template'}</b>.{' '}\r\n                                                            </>\r\n                                                        } placement=\"top\">\r\n                                                            <Button>\r\n                                                                <Typography color=\"secondary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                                    {item.projectList.length}\r\n                                                                </Typography>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    </TableCell>\r\n\r\n                                                    <TableCell align=\"right\" padding=\"normal\">\r\n                                                        <Tooltip title={\r\n                                                            <>\r\n                                                                <Typography color=\"inherit\">Members</Typography>\r\n                                                                {/* <ol>\r\n                                                                    {item.projectList.map((subItem, index) => {\r\n                                                                        return (\r\n                                                                            <li key={`subrow${index}-${subItem._id}`}>\r\n                                                                                {subItem._id}\r\n                                                                            </li>\r\n                                                                        );\r\n                                                                    })}\r\n                                                                </ol> */}\r\n                                                                <em>{\"Members apart of this\"}</em> <b>{'Service Template'}</b>.{' '}\r\n                                                            </>\r\n                                                        } placement=\"top\">\r\n                                                            <Button>\r\n                                                                <Typography color=\"secondary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                                    {item.memberList.length}\r\n                                                                </Typography>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    </TableCell>\r\n\r\n                                                    <TableCell align=\"right\" padding=\"normal\">\r\n                                                        <Tooltip title={\r\n                                                            <>\r\n                                                                <Typography color=\"inherit\">Survey Templates</Typography>\r\n                                                                <ol>\r\n                                                                    {item.surveyList.map((subItem, index) => {\r\n                                                                        return (\r\n                                                                            <li key={`subrow${index}-${subItem._id}`}>\r\n                                                                                {subItem.name}\r\n                                                                            </li>\r\n                                                                        );\r\n                                                                    })}\r\n                                                                </ol>\r\n                                                                <em>{\"Survey Templates apart of this\"}</em> <b>{'Service Template'}</b>.{' '}\r\n                                                            </>\r\n                                                        } placement=\"top\">\r\n                                                            <Button>\r\n                                                                <Typography color=\"secondary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                                    {item.surveyList.length}\r\n                                                                </Typography>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    </TableCell>\r\n\r\n                                                    <TableCell align=\"right\" padding=\"normal\">\r\n                                                        <Tooltip title={\r\n                                                            <>\r\n                                                                <Typography color=\"inherit\">Member Service Instances</Typography>\r\n                                                                {/* <ol>\r\n                                                                    {item.projectList.map((subItem, index) => {\r\n                                                                        return (\r\n                                                                            <li key={`subrow${index}-${subItem._id}`}>\r\n                                                                                {subItem._id}\r\n                                                                            </li>\r\n                                                                        );\r\n                                                                    })}\r\n                                                                </ol> */}\r\n                                                                <em>{\"Member Collections apart of this\"}</em> <b>{'Service Template'}</b>.{' '}\r\n                                                            </>\r\n                                                        } placement=\"top\">\r\n                                                            <Button>\r\n                                                                <Typography color=\"secondary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                                    {item.memberCollectionList.length}\r\n                                                                </Typography>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    </TableCell>\r\n                                                    \r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <TableCell align=\"left\" padding=\"none\">\r\n                                                        <Typography color=\"primary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                            {item.completeness}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n\r\n                                                    {userID? (\r\n                                                        <>\r\n                                                        </>\r\n                                                    ) : \r\n                                                        item.member? (\r\n                                                            <>\r\n                                                                <TableCell align=\"left\" padding=\"none\">\r\n                                                                    <Typography color=\"secondary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                                        {item.member.info.name}\r\n                                                                    </Typography>\r\n                                                                </TableCell>\r\n\r\n                                                                <TableCell align=\"left\" padding=\"none\">\r\n                                                                    <Typography color=\"textPrimary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                                        {item.member._id}\r\n                                                                    </Typography>\r\n                                                                </TableCell>\r\n\r\n                                                                <TableCell align=\"right\" padding=\"normal\">\r\n                                                                    <Tooltip title={\r\n                                                                        <>\r\n                                                                            <Typography color=\"inherit\">Member Chapters</Typography>\r\n                                                                            <ol>\r\n                                                                                {item.memberSurveyList.map((subItem, index) => {\r\n                                                                                    return (\r\n                                                                                        <li key={`subrow${index}-${subItem._id}`}>\r\n                                                                                            {subItem.name}\r\n                                                                                        </li>\r\n                                                                                    );\r\n                                                                                })}\r\n                                                                            </ol>\r\n                                                                            <em>{\"Member Chapters instantiated in this\"}</em> <b>{'Member Collection'}</b>.{' '}\r\n                                                                        </>\r\n                                                                    } placement=\"top\">\r\n                                                                        <Button>\r\n                                                                            <Typography color=\"secondary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                                                {item.memberSurveyList.length}\r\n                                                                            </Typography>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>\r\n                                                                </TableCell>\r\n                                                            </>\r\n                                                        ) : (\r\n                                                            <>\r\n                                                            </>\r\n                                                        )\r\n                                                    }\r\n                                                </>\r\n                                            )}\r\n\r\n                                            <TableCell align=\"right\">\r\n                                                <Typography color=\"primary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                    {new Date(item.createdAt).toLocaleDateString()}\r\n                                                </Typography>\r\n                                                <Typography color=\"secondary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                    {new Date(item.createdAt).toLocaleTimeString()}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n\r\n\r\n                                            <TableCell align=\"right\">\r\n                                                <Typography color=\"primary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                    {new Date(item.updatedAt).toLocaleDateString()}\r\n                                                </Typography>\r\n                                                <Box component=\"span\" mr={1}/>\r\n                                                <Typography color=\"secondary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                    {new Date(item.updatedAt).toLocaleTimeString()}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n\r\n                                {emptyRows > 0 && (\r\n                                    <TableRow style={{ height: (isDense ? 33 : 53) * emptyRows }}>\r\n                                        <TableCell colSpan={6} />\r\n                                    </TableRow>\r\n                                )}\r\n\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    {searchFilteredDataList.length > 0? (\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 15, 20, 25]}\r\n                            component=\"div\"\r\n                            count={searchFilteredDataList.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={searchFilteredDataList.length <= rowsPerPage? 0 : page}\r\n                            onPageChange={ (event, pageNumber) => { handleChangePage(pageNumber); }}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    ) : (\r\n                        null\r\n                    )}\r\n                </Paper>\r\n            </Box>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nCollectionTable.propTypes = {\r\n    appState: PropTypes.object.isRequired,\r\n    userID: PropTypes.string,\r\n    searchFilteredDataList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    setParentDeleteCollectionDialog: PropTypes.func.isRequired,\r\n    setParentExportCollectionDialog: PropTypes.func.isRequired,\r\n    selectedDataItemsList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    setSelectedDataItemsList: PropTypes.func.isRequired,\r\n    isTemplates: PropTypes.bool.isRequired,\r\n}\r\n\r\nCollectionTable.defaultProps =\r\n{\r\n    appState: {},\r\n    userID: null,\r\n    searchFilteredDataList: {},\r\n    setParentDeleteCollectionDialog: () => {},\r\n    setParentExportCollectionDialog: () => {},\r\n    selectedDataItemsList: {},\r\n    setSelectedDataItemsList: () => {},\r\n    isTemplates: true\r\n}","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../../helpers/models/AlertType'\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from  '@material-ui/core/ButtonGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\n// ==================== MUI Icons ====================\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport CheckBoxOutlineBlankOutlinedIcon from '@material-ui/icons/CheckBoxOutlineBlankOutlined';\r\nimport ListAltOutlinedIcon from '@material-ui/icons/ListAltOutlined';\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n// ================= Static Variables ================\r\nconst selectFilterOptionsTemplate = [ { key: \"CollectionId\", value: \"collectionId\", display: \"Service ID\"}, \r\n    { key: \"CollectionName\", value: \"collectionName\", display: \"Service Name\"}, \r\n    { key: \"NumSurveyTemplates\", value: \"numSurveyTemplates\", display: \"# Chapter Templates\"} ];\r\n\r\nconst selectFilterOptionsMember = [ { key: \"CollectionId\", value: \"collectionId\", display: \"Service ID\"}, \r\n    { key: \"CollectionName\", value: \"collectionName\", display: \"Service Name\"}, \r\n    { key: \"NumMemberSurveys\", value: \"numMemberSurveys\", display: \"# Member Chapters\"}, \r\n    { key: \"ClientId\", value: \"clientId\", display: \"Client ID\"}, \r\n    { key: \"ClientName\", value: \"clientName\", display: \"Client Name\"}, \r\n    { key: \"Completeness\", value: \"completeness\", display: \"Completeness\"} ];\r\n\r\nconst selectFilterOptionsMemberClient = [ { key: \"CollectionId\", value: \"collectionId\", display: \"Service ID\"}, \r\n{ key: \"CollectionName\", value: \"collectionName\", display: \"Service Name\"}, \r\n{ key: \"Completeness\", value: \"completeness\", display: \"Completeness\"} ]\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst CollectionsManagementControlPanel = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const {  setParentAlert,\r\n            isDense, setIsDense,\r\n            isTemplates, setIsTemplates,\r\n            dataList, getParentData,\r\n            userID,\r\n            setSearchFilteredDataList,\r\n            setCreateCollectionTemplateDialog, setCreateMemberCollectionDialog, setAssignMemberDialog, setAssignProjectDialog } = props;\r\n\r\n        const [selectSearchFilterOption, setSelectSearchFilterOption ] = useState(selectFilterOptionsTemplate[0].value);\r\n        const [searchFilter, setSearchFilter] = useState(\"\");\r\n\r\n    // Functions ===\r\n\r\n        const pullHandler = useCallback(() =>\r\n        {\r\n            try\r\n            {\r\n                getParentData();\r\n                setParentAlert(new AlertType('Refreshed initiated...', \"info\"));\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n            \r\n        }, [ getParentData, setParentAlert ]);\r\n\r\n        const createCollectionTemplateHandler = useCallback(() =>\r\n        {\r\n            setCreateCollectionTemplateDialog(true);\r\n        }, [ setCreateCollectionTemplateDialog ]);\r\n\r\n        const createMemberCollectionHandler = useCallback(() =>\r\n        {\r\n            setCreateMemberCollectionDialog(true);\r\n        }, [ setCreateMemberCollectionDialog ]);\r\n\r\n        const compactHandler = useCallback((event) =>\r\n        {\r\n            setIsDense(event.target.checked);\r\n        }, [ setIsDense ]);\r\n\r\n        const collectionTemplateButtonHandler = useCallback(() =>\r\n        {\r\n            setIsTemplates(true);\r\n            setSelectSearchFilterOption(selectFilterOptionsTemplate[0].value);\r\n        }, [ setIsTemplates ]);\r\n\r\n        const AssignMemberHandler = useCallback(() =>\r\n        {\r\n            setAssignMemberDialog(true);\r\n        }, [ setAssignMemberDialog ]);\r\n\r\n        const AssignProjectHandler = useCallback(() =>\r\n        {\r\n            setAssignProjectDialog(true);\r\n        }, [ setAssignProjectDialog ]);\r\n\r\n        const memberCollectionButtonHandler = useCallback(() =>\r\n        {\r\n            setIsTemplates(false);\r\n\r\n            if(userID)\r\n            {\r\n                setSelectSearchFilterOption(selectFilterOptionsMemberClient[0].value);\r\n            }\r\n            else\r\n            {\r\n                setSelectSearchFilterOption(selectFilterOptionsMember[0].value);\r\n            }\r\n            \r\n        }, [ setIsTemplates, userID ]);\r\n\r\n        const selectSearchHandler = useCallback((event) =>\r\n        {\r\n            setSearchFilter(\"\");\r\n            setSelectSearchFilterOption(event.target.value);\r\n\r\n        }, [ setSelectSearchFilterOption ]);\r\n\r\n        const searchHandler = useCallback((event) =>\r\n        {\r\n            let tempFilter = event.target.value.toUpperCase();\r\n            let tempArray = [];\r\n            dataList.forEach( item => \r\n            {\r\n                switch(selectSearchFilterOption)\r\n                {\r\n                    case \"collectionId\":\r\n\r\n                            if(item._id.toUpperCase().indexOf(tempFilter) > -1)\r\n                            {\r\n                                tempArray.push(item);\r\n                            }\r\n    \r\n                            break;\r\n\r\n                    case \"collectionName\":\r\n                        \r\n                        if(isTemplates)\r\n                        {\r\n                            if(item.name.toUpperCase().indexOf(tempFilter) > -1)\r\n                            {\r\n                                tempArray.push(item);\r\n                            }\r\n\r\n                        }\r\n                        else\r\n                        {\r\n                            if(item.collectionTemplate.name.toUpperCase().indexOf(tempFilter) > -1)\r\n                            {\r\n                                tempArray.push(item);\r\n                            }\r\n                        }\r\n\r\n                        \r\n                        break;\r\n\r\n                    case \"clientId\":\r\n\r\n                        if(item.member._id.toUpperCase().indexOf(tempFilter) > -1)\r\n                        {\r\n                            tempArray.push(item);\r\n                        }\r\n\r\n                        break;\r\n                    \r\n                    case \"clientName\":\r\n\r\n                            if(item.member.info.name.toUpperCase().indexOf(tempFilter) > -1)\r\n                            {\r\n                                tempArray.push(item);\r\n                            }\r\n    \r\n                            break;\r\n\r\n                    case \"completeness\":\r\n\r\n                        if(item.completeness.toUpperCase().indexOf(tempFilter) > -1)\r\n                        {\r\n                            tempArray.push(item);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case \"numSurveyTemplates\":\r\n\r\n                        if(item.surveyTemplates.length.toUpperCase().indexOf(tempFilter) > -1)\r\n                        {\r\n                            tempArray.push(item);\r\n                        }\r\n\r\n                        break;\r\n                    \r\n                    case \"numMemberSurveys\":\r\n\r\n                        if(item.memberSurveys.length.toUpperCase().indexOf(tempFilter) > -1)\r\n                        {\r\n                            tempArray.push(item);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    default:\r\n                }\r\n                \r\n            });\r\n\r\n            setSearchFilter(event.target.value);\r\n            setSearchFilteredDataList(tempArray);\r\n\r\n        }, [ dataList, setSearchFilteredDataList, selectSearchFilterOption, isTemplates ]);\r\n\r\n\r\n    // Hooks ===\r\n\r\n        // First Render only because of the [ ] empty array tracking with the useEffect\r\n        useEffect( () =>\r\n        {\r\n            setSearchFilter(\"\");\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ dataList ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(searchFilter === \"\")\r\n            {\r\n                setSearchFilteredDataList(dataList);\r\n            }\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ setSelectSearchFilterOption, searchFilter ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                <Box mx={2} my={1} boxShadow={0}>\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justifyContent=\"flex-start\"\r\n                        alignItems=\"stretch\"\r\n                        spacing={1}\r\n                    >\r\n                        <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                            <Grid item>\r\n                                <Typography variant=\"h6\" component=\"h6\">\r\n                                    Manage\r\n                                </Typography>\r\n                                <Divider />\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <Box mx={3} my={1} boxShadow={0}>\r\n                                    <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n                                        <Grid item>\r\n                                                <ButtonGroup size=\"small\" variant=\"contained\" color=\"secondary\">\r\n                                                        <Button \r\n                                                            startIcon={<CheckBoxOutlineBlankOutlinedIcon />}\r\n                                                            disabled={isTemplates}\r\n                                                            onClick={ () => { collectionTemplateButtonHandler(); }}\r\n                                                        >\r\n                                                            Service Templates\r\n                                                        </Button>\r\n                                                        <Button\r\n                                                            startIcon={<ListAltOutlinedIcon />}\r\n                                                            disabled={!isTemplates}\r\n                                                            onClick={ () => { memberCollectionButtonHandler(); }}\r\n                                                        >\r\n                                                            Service Instances\r\n                                                        </Button>\r\n                                                </ButtonGroup>\r\n                                            </Grid>\r\n                                        <Grid item>\r\n                                            <Tooltip\r\n                                                placement=\"bottom\"\r\n                                                title=\"Refresh Online Collections\"\r\n                                            >\r\n                                                <Button \r\n                                                    size=\"small\" \r\n                                                    variant=\"contained\" \r\n                                                    color=\"primary\"\r\n                                                    startIcon={<RefreshIcon />}\r\n                                                    onClick={() => { pullHandler(); }}\r\n                                                >\r\n                                                    Refresh\r\n                                                </Button>\r\n                                            </Tooltip> \r\n                                        </Grid>\r\n                                        {isTemplates? (\r\n                                            <>\r\n                                                <Grid item>\r\n                                                    <Tooltip\r\n                                                        placement=\"bottom\"\r\n                                                        title=\"Create Service Template\"\r\n                                                    >\r\n                                                        <Button \r\n                                                            size=\"small\" \r\n                                                            variant=\"contained\" \r\n                                                            color=\"primary\"\r\n                                                            startIcon={<AddBoxOutlinedIcon />}\r\n                                                            onClick={() => { createCollectionTemplateHandler(); }}\r\n                                                        >\r\n                                                            Start a Service Template\r\n                                                        </Button>\r\n                                                    </Tooltip> \r\n                                                </Grid>\r\n                                                <Grid item>\r\n                                                    <Tooltip\r\n                                                        placement=\"bottom\"\r\n                                                        title=\"Assign Members to Service\"\r\n                                                    >\r\n                                                        <Button \r\n                                                            size=\"small\" \r\n                                                            variant=\"contained\" \r\n                                                            color=\"secondary\"\r\n                                                            disabled={!isTemplates}\r\n                                                            startIcon={<AddBoxOutlinedIcon />}\r\n                                                            onClick={() => { AssignMemberHandler(); }}\r\n                                                        >\r\n                                                            Assign Member\r\n                                                        </Button>\r\n                                                    </Tooltip> \r\n                                                </Grid>\r\n                                                <Grid item>\r\n                                                    <Tooltip\r\n                                                        placement=\"bottom\"\r\n                                                        title=\"Assign Projects to Service\"\r\n                                                    >\r\n                                                        <Button \r\n                                                            size=\"small\" \r\n                                                            variant=\"contained\" \r\n                                                            color=\"secondary\"\r\n                                                            disabled={!isTemplates}\r\n                                                            startIcon={<AddBoxOutlinedIcon />}\r\n                                                            onClick={() => { AssignProjectHandler(); }}\r\n                                                        >\r\n                                                            Assign Project\r\n                                                        </Button>\r\n                                                    </Tooltip> \r\n                                                </Grid>\r\n                                            </>\r\n                                        ) : (\r\n                                            <Grid item>\r\n                                                <Tooltip\r\n                                                    placement=\"bottom\"\r\n                                                    title=\"Create a Member Service Instance\"\r\n                                                >\r\n                                                    <Button \r\n                                                        size=\"small\" \r\n                                                        variant=\"contained\" \r\n                                                        color=\"primary\"\r\n                                                        startIcon={<AddBoxOutlinedIcon />}\r\n                                                        onClick={() => { createMemberCollectionHandler(); }}\r\n                                                    >\r\n                                                        Start a Service Instance\r\n                                                    </Button>\r\n                                                </Tooltip> \r\n                                            </Grid>\r\n                                            \r\n                                        )}\r\n                                    </Grid>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Tooltip\r\n                                    placement=\"left\"\r\n                                    title=\"Use this page to manage your services.\"\r\n                                >\r\n                                    <IconButton>\r\n                                        <HelpOutlineIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                            <Box mx={1} my={1} boxShadow={0}>\r\n                                <Card>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={3}>\r\n                                            <Grid item>\r\n                                                <Typography color=\"textPrimary\" variant=\"subtitle2\">\r\n                                                    Table Options\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <FormControlLabel\r\n                                                    control={<Switch checked={isDense} onChange={ (event) => { compactHandler(event); }} />}\r\n                                                    label=\"Compact\"\r\n                                                    labelPlacement=\"end\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <FormControl id=\"search-filter-select-label\" variant=\"filled\" size=\"small\" style={{minWidth: 140}} disabled={dataList? false : true}>\r\n                                                    <InputLabel>\r\n                                                        Search Filter\r\n                                                    </InputLabel>\r\n                                                    <Select\r\n                                                        autoWidth={true}\r\n                                                        labelId=\"search-filter-select-label\"\r\n                                                        value={selectSearchFilterOption}\r\n                                                        onChange={(event) => { selectSearchHandler(event); } }\r\n                                                    >\r\n                                                        {userID?\r\n                                                                isTemplates? (\r\n                                                                    <MenuItem value=\"\">\r\n                                                                        <em>None</em>\r\n                                                                    </MenuItem>\r\n                                                                ) : (\r\n                                                                    selectFilterOptionsMemberClient.map( item => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={item.key} value={item.value}>\r\n                                                                                <em>{item.display}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })\r\n                                                                )      \r\n                                                            : \r\n                                                                isTemplates? (\r\n                                                                    selectFilterOptionsTemplate.map( item => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={item.key} value={item.value}>\r\n                                                                                <em>{item.display}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })\r\n                                                                ) : (\r\n                                                                    selectFilterOptionsMember.map( item => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={item.key} value={item.value}>\r\n                                                                                <em>{item.display}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })\r\n                                                                )       \r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                <TextField label=\"Search\"\r\n                                                    type=\"search\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"filled\"\r\n                                                    fullWidth\r\n                                                    value={searchFilter}\r\n                                                    onChange={ (event) => { searchHandler(event); }}\r\n                                                    disabled={dataList? false : true}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Card>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={1}>\r\n                            <Grid item>\r\n                                <Typography variant=\"h6\" component=\"h6\">\r\n                                    Table\r\n                                </Typography>\r\n                                <Divider />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </>\r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nCollectionsManagementControlPanel.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    isDense: PropTypes.bool.isRequired,\r\n    setIsDense: PropTypes.func.isRequired,\r\n    isTemplates:PropTypes.bool.isRequired,\r\n    setIsTemplates: PropTypes.func.isRequired,\r\n    dataList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    userID: PropTypes.string,\r\n    setSearchFilteredDataList: PropTypes.func.isRequired,\r\n    setCreateCollectionTemplateDialog: PropTypes.func.isRequired,\r\n    setCreateMemberCollectionDialog: PropTypes.func.isRequired,\r\n    setAssignMemberDialog: PropTypes.func.isRequired,\r\n    setAssignProjectDialog: PropTypes.func.isRequired\r\n                        \r\n}\r\n\r\nCollectionsManagementControlPanel.defaultProps = \r\n{\r\n    setParentAlert: () => {},\r\n    setIsDense: () => {},\r\n    setIsTemplates: () => {},\r\n    dataList: {},\r\n    getParentData: () => {},\r\n    userID: null,\r\n    setSearchFilteredDataList: () => {},\r\n    setCreateCollectionTemplateDialog: () => {},\r\n    setCreateMemberCollectionDialog: () => {},\r\n    setAssignMemberDialog: () => {},\r\n    setAssignProjectDialog: () => {}\r\n}\r\n\r\nexport default CollectionsManagementControlPanel;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with ExportCollectionDialog\r\n// ================================================\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\nimport * as Survey from \"survey-react\";\r\nimport * as SurveyPDF from 'survey-pdf';\r\nimport \"survey-react/survey.css\";\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// ==================== MUI Icons ====================\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\nconst surveyStyle = \"default\";\r\n \r\n// const surveyOptions = {\r\n\r\n// }; \r\n\r\nconst defaultPdfWidth = 210;\r\nconst defaultPdfHeight = 297; \r\n\r\nconst pdfDimensions = {\r\n    inputProps: { min: 1 }\r\n}\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst ExportCollectionDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n\r\n        const { getParentData, setParentAlert, selectedDataItemsList,\r\n            exportCollectionDialog, setExportCollectionDialog,\r\n            exportCollectionDialogExecuting, setExportCollectionDialogExecuting, isTemplates  } = props;\r\n\r\n        const [pdfWidth, setPdfWidth] = useState(defaultPdfWidth);\r\n        const [pdfHeight, setPdfHeight] = useState(defaultPdfHeight);\r\n\r\n        const [totalExported, setTotalExported] = useState(0);\r\n\r\n    // Functions ===\r\n\r\n        const exportCollectionChapters = useCallback(() =>\r\n        {\r\n            if(pdfWidth > 0 && pdfHeight > 0 && selectedDataItemsList.length > 0)\r\n            {\r\n                let promises = new Array();\r\n\r\n                selectedDataItemsList.forEach(item =>\r\n                {\r\n                    if(isTemplates)\r\n                    {\r\n                        item.surveyList.forEach(subItem => {\r\n\r\n                            promises.push(\r\n                                new Promise((resolve, reject) => {\r\n                                    \r\n                                    let surveyJSON = \"\";\r\n                                    let responseJSON = \"{}\";\r\n                                    \r\n                                    if(subItem.surveyJSON !== \"\")\r\n                                    {\r\n                                        surveyJSON = JSON.parse(subItem.surveyJSON);\r\n                                    }\r\n                                    \r\n                                    if(Object.prototype.hasOwnProperty.call(subItem, \"responseJSON\"))\r\n                                    {\r\n                                        responseJSON = JSON.parse(subItem.responseJSON);\r\n                                    }\r\n            \r\n                                    const pdfOptions = {\r\n                                        format: [parseInt(pdfWidth) || defaultPdfWidth, parseInt(pdfHeight) || defaultPdfHeight],\r\n                                        fontSize: 14,\r\n                                        margins: {\r\n                                            left: 10,\r\n                                            right: 10,\r\n                                            top: 18,\r\n                                            bot: 10\r\n                                        }\r\n                                    };\r\n            \r\n                                    let surveyPDF = new SurveyPDF.SurveyPDF(surveyJSON, pdfOptions);\r\n                                    \r\n                                    if(Object.prototype.hasOwnProperty.call(subItem, \"responseJSON\"))\r\n                                    {\r\n                                        surveyPDF.data = responseJSON;\r\n                                    }\r\n    \r\n                                    surveyPDF.save(new Date().getTime().toString() + subItem._id + subItem.name + \".pdf\");\r\n                                    resolve();\r\n                                })\r\n                            .catch((error) => {\r\n                                console.log('Error: ', error);\r\n                            }));\r\n                        });\r\n                    }\r\n                    else\r\n                    {\r\n                        item.memberSurveyList.forEach(subItem => {\r\n\r\n                            promises.push(\r\n                                new Promise((resolve, reject) => {\r\n                                    \r\n                                    let surveyJSON = \"\";\r\n                                    let responseJSON = \"{}\";\r\n                                    \r\n                                    if(subItem.surveyTemplate.surveyJSON !== \"\")\r\n                                    {\r\n                                        surveyJSON = JSON.parse(subItem.surveyJSON);\r\n                                    }\r\n                                    \r\n                                    if(Object.prototype.hasOwnProperty.call(subItem, \"responseJSON\"))\r\n                                    {\r\n                                        responseJSON = JSON.parse(subItem.responseJSON);\r\n                                    }\r\n            \r\n                                    const pdfOptions = {\r\n                                        format: [parseInt(pdfWidth) || defaultPdfWidth, parseInt(pdfHeight) || defaultPdfHeight],\r\n                                        fontSize: 14,\r\n                                        margins: {\r\n                                            left: 10,\r\n                                            right: 10,\r\n                                            top: 18,\r\n                                            bot: 10\r\n                                        }\r\n                                    };\r\n            \r\n                                    let surveyPDF = new SurveyPDF.SurveyPDF(surveyJSON, pdfOptions);\r\n                                    \r\n                                    if(Object.prototype.hasOwnProperty.call(subItem, \"responseJSON\"))\r\n                                    {\r\n                                        surveyPDF.data = responseJSON;\r\n                                    }\r\n                                    \r\n                                    if(isTemplates)\r\n                                    {\r\n                                        surveyPDF.save(new Date().getTime().toString() + subItem._id + subItem.name + \".pdf\");\r\n                                    }\r\n                                    else\r\n                                    {\r\n                                        surveyPDF.save(new Date().getTime().toString() + subItem._id + subItem.collectionTemplate.name + \".pdf\");\r\n                                    }\r\n\r\n                                    resolve();\r\n                                })\r\n                            .catch((error) => {\r\n                                console.log('Error: ', error);\r\n                            }));\r\n                        });\r\n                    }\r\n\r\n                });\r\n\r\n                Promise.all(promises).then(() => {\r\n                    setParentAlert(new AlertType(`Successfully exported ${totalExported} chapter${totalExported > 1? \"s\" : \"\"}.`, \"success\"));\r\n                })\r\n                .catch(() =>{\r\n                    setParentAlert(new AlertType(`Unable export ${totalExported} chapter${totalExported > 1? \"s\" : \"\"}. Please refresh and try again.`, \"error\"));\r\n                });\r\n            }\r\n            else\r\n            {\r\n                throw new Error('Bad Export.');\r\n            }\r\n        }, [ pdfWidth, pdfHeight, selectedDataItemsList, totalExported ]);\r\n        \r\n        const closeHandler = useCallback(() => {\r\n            setExportCollectionDialog(false);\r\n            setPdfWidth(defaultPdfWidth);\r\n            setPdfHeight(defaultPdfHeight);\r\n        }, [ setPdfWidth, setPdfHeight, setExportCollectionDialog ]);\r\n\r\n\r\n        const exportHandler = useCallback(() => {\r\n            try{\r\n                setExportCollectionDialogExecuting(true);\r\n                exportCollectionChapters();\r\n                setExportCollectionDialogExecuting(false);\r\n                setExportCollectionDialog(false);\r\n                setPdfWidth(defaultPdfWidth);\r\n                setPdfHeight(defaultPdfHeight);\r\n                getParentData();\r\n            }\r\n            catch{\r\n                setParentAlert(new AlertType(`Unable export collection(s). Please refresh and try again.`, \"error\"));\r\n            }\r\n        }, [ setPdfWidth, setPdfHeight, exportCollectionChapters, selectedDataItemsList, setExportCollectionDialogExecuting, setExportCollectionDialog, setParentAlert, getParentData]);\r\n\r\n        const widthHandler = useCallback((event) =>\r\n        {\r\n            if(event.target.value !== \"\")\r\n            {\r\n                setPdfWidth(parseInt(event.target.value));\r\n            }\r\n            \r\n        }, [ setPdfWidth ]);\r\n\r\n        const heightHandler = useCallback((event) =>\r\n        {\r\n\r\n            if(event.target.value !== \"\")\r\n            {\r\n                setPdfHeight(parseInt(event.target.value));\r\n            }\r\n\r\n        }, [ setPdfHeight ]);\r\n\r\n    // Hooks ===\r\n\r\n        // First Render only because of the [ ] empty array tracking with the useEffect\r\n        useEffect( () =>\r\n        {\r\n            Survey.StylesManager.applyTheme(surveyStyle);\r\n\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(selectedDataItemsList)\r\n            {\r\n                setTotalExported(() => {\r\n                    \r\n                    let sum = 0;\r\n                    \r\n                    if(isTemplates)\r\n                    {\r\n                        selectedDataItemsList.forEach(item => {\r\n                            sum+=item.surveyList.length\r\n                        });\r\n                    }\r\n                    else\r\n                    {\r\n                        selectedDataItemsList.forEach(item => {\r\n                            sum+=item.memberSurveyList.length\r\n                        });\r\n                    }\r\n                   \r\n                    return sum;\r\n                });\r\n            }\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ selectedDataItemsList ]);\r\n\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {exportCollectionDialog? (\r\n                    <Dialog id=\"export-collection-chapter-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={exportCollectionDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Export collection{selectedDataItemsList.length > 1? \"s\" : \"\"}\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {exportCollectionDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <>\r\n                                    <DialogContentText>\r\n                                        Exporting {selectedDataItemsList.length} collection{selectedDataItemsList.length > 1? \"s\" : \"\"}, totalling {totalExported} chapter{totalExported > 1? \"s\" : \"\"}. Please enter valid pdf width and height values for your export.\r\n                                    </DialogContentText>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                            <Grid item xs>\r\n                                                <TextField label=\"Pdf Width\"\r\n                                                    type=\"number\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"filled\"\r\n                                                    InputProps={pdfDimensions}\r\n                                                    error={pdfWidth <= 0? true : false && parseInt(pdfHeight)}\r\n                                                    fullWidth\r\n                                                    value={pdfWidth}\r\n                                                    onChange={ (event) => { widthHandler(event); }}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                <TextField label=\"Pdf Height\"\r\n                                                    type=\"number\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"filled\"\r\n                                                    InputProps={pdfDimensions}\r\n                                                    error={pdfHeight <= 0? true : false && parseInt(pdfHeight)}\r\n                                                    fullWidth\r\n                                                    value={pdfHeight}\r\n                                                    onChange={ (event) => { heightHandler(event); }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </>\r\n                            )}\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={exportCollectionDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<SystemUpdateAltIcon />} onClick={() => { exportHandler(); }} disabled={exportCollectionDialogExecuting}>\r\n                                Export\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nExportCollectionDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    getParentData: PropTypes.func.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    selectedDataItemsList: PropTypes.arrayOf(PropTypes.object),\r\n    exportCollectionDialog: PropTypes.bool.isRequired,\r\n    setExportCollectionDialog: PropTypes.func.isRequired,\r\n    exportCollectionDialogExecuting: PropTypes.bool.isRequired,\r\n    setExportCollectionDialogExecuting: PropTypes.func.isRequired,\r\n    isTemplates: PropTypes.bool.isRequired\r\n}\r\n\r\nExportCollectionDialog.defaultProps = \r\n{\r\n    getParentData: () => {},\r\n    setParentAlert: () => {},\r\n    selectedDataItemsList: {},\r\n    exportCollectionDialog: {},\r\n    setExportCollectionDialog: () => {},\r\n    exportCollectionDialogExecuting: {},\r\n    setExportCollectionDialogExecuting: () => {},\r\n    isTemplates: true\r\n}\r\n\r\nexport default ExportCollectionDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with SaveChapterDialog\r\n// ================================================\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\nimport get from  '../../../../helpers/common/get';\r\nimport post from '../../../../helpers/common/post'\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { FormControl, InputLabel, Select, MenuItem, Typography } from '@material-ui/core';\r\n\r\n// ==================== MUI Icons ====================\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst CreateCollectionDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, setParentAlert, getParentData, userID,\r\n            createCollectionTemplateDialog, setCreateCollectionTemplateDialog,\r\n            createCollectionTemplateDialogExecuting, setCreateCollectionTemplateDialogExecuting } = props;\r\n    \r\n        // const [userList, setUserList] = useState(null);\r\n\r\n        const [surveyTemplatesList, setSurveyTemplatesList] = useState(null);\r\n\r\n        const [selectedSurveyTemplate, setSelectedSurveyTemplate] = useState(\"\");\r\n\r\n        const [selectedSurveyTemplatesList, setSelectedSurveyTemplatesList] = useState([]);\r\n\r\n        const [collectionTemplateName, setCollectionTemplateName] = useState(\"\");\r\n\r\n        // const [user, setUser] = useState(\"\");\r\n\r\n    // Functions ===\r\n\r\n        const getSurveyTemplates = useCallback(() =>\r\n        {\r\n\r\n            get('surveys/', appState.token, (error, response) => \r\n            {\r\n                if(error)\r\n                {\r\n                    setParentAlert(new AlertType('Unable to get public templates. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(response.status === 200)\r\n                    {\r\n                        // console.log(\"Patient Query\", response.data.response);\r\n                        setSurveyTemplatesList(response.data.surveyList);\r\n                    }\r\n                    else\r\n                    {\r\n                        setParentAlert(new AlertType('Unable to get public templates. Please refresh and try again.', \"error\"));\r\n\r\n                    }\r\n                }\r\n            });\r\n        }, [ appState ]);\r\n\r\n        // const getPatients = useCallback(() =>\r\n        // {\r\n        //     let query;\r\n\r\n        //     if(userID)\r\n        //     {\r\n        //         query = {\r\n        //             _id: userID\r\n        //         }; \r\n        //     }\r\n        //     else\r\n        //     {\r\n        //        query = {\r\n        //             role: {\r\n        //                 $in: 'Patient'\r\n        //             }\r\n        //         }; \r\n        //     }\r\n            \r\n        //     post('users/query', appState.token, query, (error, response) => \r\n        //     {\r\n        //         if(error)\r\n        //         {\r\n        //             setParentAlert(new AlertType('Unable to get patients. Please refresh and try again.', \"error\"));\r\n        //         }\r\n        //         else\r\n        //         {\r\n        //             if(response.status === 200)\r\n        //             {\r\n        //                 // console.log(\"Patient Query\", response.data.response);\r\n        //                 populateUserData(response.data.response.users); \r\n        //             }\r\n        //             else\r\n        //             {\r\n        //                 setParentAlert(new AlertType('Unable to get patients. Please refresh and try again.', \"error\"));\r\n        //             }\r\n        //         }\r\n        //     });\r\n        // }, [ appState, populateUserData ]);\r\n\r\n        // const populateUserData = useCallback((data) => \r\n        // {\r\n        //     let tempArray = new Array();\r\n\r\n        //     if(data && Array.isArray(data))\r\n        //     {\r\n        //         data.forEach(item => {\r\n\r\n        //             tempArray.push(\r\n        //                 {\r\n        //                     _id: item._id,\r\n        //                     name: item.info.name,\r\n        //                     role: item.role,\r\n        //                     email: item.email,\r\n        //                     createdAt: item.createdAt\r\n        //                 });\r\n        //         });\r\n        //     }\r\n\r\n        //     setUserList([...tempArray]);\r\n\r\n        // }, [ ] );\r\n\r\n        const createCollection = useCallback(() =>\r\n        {\r\n            if(!collectionTemplateName || collectionTemplateName == \"\" || selectedSurveyTemplatesList.length == 0)\r\n            {\r\n                setParentAlert(new AlertType('Unable create collection. Please make sure Template Name is and selected Chapter Templates are not empty.', \"error\"))\r\n                return;\r\n            }\r\n\r\n            let tempSelectedSurveyTemplatesList = new Array();\r\n\r\n            selectedSurveyTemplatesList.forEach(item => {\r\n                tempSelectedSurveyTemplatesList.push(item._id);\r\n            });\r\n\r\n            let data = {\r\n                name: collectionTemplateName,\r\n                surveyList: tempSelectedSurveyTemplatesList,\r\n                createdBy: appState._id,\r\n                modifiedBy: appState._id,\r\n            }\r\n            \r\n            post(\"collections/\",  appState.token, data, (error, response) => \r\n            {\r\n                if(error)\r\n                {\r\n                    setParentAlert(new AlertType('Unable create collection. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(response.status === 201)\r\n                    {\r\n                        getParentData();\r\n                        setParentAlert(new AlertType('Collection created.', \"success\"));\r\n                    }\r\n                    else\r\n                    {\r\n                        setParentAlert(new AlertType('Unable create collection. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n            });\r\n\r\n        }, [ appState, collectionTemplateName, selectedSurveyTemplatesList ] );\r\n\r\n        \r\n        const collectionTemplateNameHandler = useCallback((event) =>\r\n        {\r\n            setCollectionTemplateName(event.target.value);\r\n        }, [ ]);\r\n\r\n        const selectSurveyTemplateHandler = useCallback((event) =>\r\n        {\r\n            setSelectedSurveyTemplate(event.target.value);\r\n        }, [ ]);\r\n\r\n        const addSurveyTemplateHandler = useCallback((item) =>\r\n        {\r\n            if(selectedSurveyTemplate && selectedSurveyTemplate != \"\")\r\n            {\r\n                let tempSurveyObject = surveyTemplatesList.find(item => item._id == selectedSurveyTemplate);\r\n\r\n                if(tempSurveyObject != undefined)\r\n                {\r\n                    setSelectedSurveyTemplatesList([...selectedSurveyTemplatesList, tempSurveyObject]);\r\n                    setSelectedSurveyTemplate(\"\");\r\n                }\r\n            }\r\n\r\n        }, [ selectedSurveyTemplate, selectedSurveyTemplatesList]);\r\n\r\n        const removeSurveyTemplateHandler = useCallback((item) =>\r\n        {\r\n            let tempList = selectedSurveyTemplatesList;\r\n\r\n            tempList.splice(selectedSurveyTemplatesList.findIndex(oldItem => oldItem._id == item._id), 1);\r\n\r\n            setSelectedSurveyTemplatesList([...tempList]);\r\n\r\n        }, [selectedSurveyTemplatesList, setSelectedSurveyTemplatesList ]);\r\n\r\n        const closeHandler = useCallback(() => {\r\n            setCreateCollectionTemplateDialog(false);\r\n        }, [ setCreateCollectionTemplateDialog ]);\r\n\r\n\r\n        const createHandler = useCallback(() => {\r\n            try{\r\n                setCreateCollectionTemplateDialogExecuting(true);\r\n                createCollection();\r\n                setCreateCollectionTemplateDialogExecuting(false);\r\n                setCreateCollectionTemplateDialog(false);\r\n            }\r\n            catch{\r\n\r\n            }\r\n        }, [ setCreateCollectionTemplateDialogExecuting, createCollection, setCreateCollectionTemplateDialog, setParentAlert]);\r\n\r\n        // const patientHandler = useCallback((event) =>\r\n        // {\r\n        //     setUser(event.target.value);\r\n        // }, [ ]);\r\n\r\n    // Hooks ===\r\n\r\n    \r\n        // Fetch User List | First Render Only\r\n        useEffect( () =>\r\n        {\r\n            getSurveyTemplates();\r\n            // getPatients();\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {createCollectionTemplateDialog? (\r\n                    <Dialog id=\"create-collection-template-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={createCollectionTemplateDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Create Collection Template\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {createCollectionTemplateDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <>\r\n                                    <DialogContentText>\r\n                                        Please select <em><u>Chapter Templates</u></em> to be apart of this new <em><u>Collection Template</u></em>.\r\n                                    </DialogContentText>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                            <Grid item>\r\n                                                <TextField label=\"Collection Name\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"filled\"\r\n                                                    error={collectionTemplateName === \"\"? true : false}\r\n                                                    fullWidth\r\n                                                    value={collectionTemplateName}\r\n                                                    onChange={ (event) => { collectionTemplateNameHandler(event); }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                        <Grid item xs container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1}>\r\n                                                {surveyTemplatesList? (\r\n                                                    <>\r\n                                                        <Grid item xs={11}>\r\n                                                            <FormControl id=\"survey-templates-options\" variant=\"filled\" size=\"small\" fullWidth disabled={!surveyTemplatesList}>\r\n                                                                <InputLabel>\r\n                                                                    Survey Templates\r\n                                                                </InputLabel>\r\n                                                                <Select\r\n                                                                    fullWidth\r\n                                                                    labelId=\"survey-templates-options-label\"\r\n                                                                    value={selectedSurveyTemplate}\r\n                                                                    onChange={(event) => { selectSurveyTemplateHandler(event); } }\r\n                                                                >\r\n                                                                    <MenuItem value=\"\">\r\n                                                                        <em>None</em>\r\n                                                                    </MenuItem>\r\n                                                                    {surveyTemplatesList.map( (item, index) => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={`SelectOption${item._id}`} value={item._id}\r\n                                                                                disabled={(selectedSurveyTemplatesList.findIndex(oldItem => oldItem._id == item._id) == -1)? false : true}\r\n                                                                            >\r\n                                                                                <em>{item.name}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })}\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={1}>\r\n                                                            <IconButton variant=\"outlined\" size=\"medium\" color=\"inherit\" onClick={ () => { addSurveyTemplateHandler(); } }\r\n                                                                disabled={selectedSurveyTemplate == \"\"? true : false}>\r\n                                                                <AddCircleIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <CircularProgress />\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                {(selectedSurveyTemplatesList)? (\r\n                                                     <Collapse in={(selectedSurveyTemplatesList.length > 0)? true : false}>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\r\n                                                            <em>{\"The following selected chapter templates\"}</em> <u>{'to be added:'}</u>\r\n                                                        </Typography>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"primary\" gutterBottom={true}>\r\n                                                            <ol>\r\n                                                                {selectedSurveyTemplatesList.map((item, index) => {\r\n                                                                    return (\r\n                                                                        <li key={`${item._id}${index}`}>\r\n                                                                            {item.name}\r\n                                                                            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\"\r\n                                                                                onClick={ (item) => { removeSurveyTemplateHandler(item); } }\r\n                                                                            >\r\n                                                                                <CancelIcon fontSize=\"inherit\" />\r\n                                                                            </IconButton>\r\n                                                                        </li>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </ol>\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                ) : (\r\n                                                    <>\r\n                                                    </>\r\n                                                )}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </>\r\n                            )}\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={createCollectionTemplateDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            {/* <Button color=\"primary\" variant=\"contained\" startIcon={<AddBoxOutlinedIcon />} onClick={() => { createHandler(); }} disabled={createCollectionTemplateDialogExecuting || user == \"\"}>\r\n                                Create\r\n                            </Button> */}\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<AddBoxOutlinedIcon />} onClick={() => { createHandler(); }} disabled={createCollectionTemplateDialogExecuting || selectedSurveyTemplatesList.length == 0 || collectionTemplateName == \"\"}>\r\n                                Create\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nCreateCollectionDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    userID: PropTypes.string,\r\n    createCollectionTemplateDialog: PropTypes.bool.isRequired,\r\n    setCreateCollectionTemplateDialog: PropTypes.func.isRequired,\r\n    createCollectionTemplateDialogExecuting: PropTypes.bool.isRequired,\r\n    setCreateCollectionTemplateDialogExecuting: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nCreateCollectionDialog.defaultProps = \r\n{\r\n    appState: {},\r\n    setParentAlert: () => {},\r\n    getParentData:  () => {},\r\n    userID: null,\r\n    setCreateCollectionTemplateDialog:  () => {},\r\n    setCreateCollectionTemplateDialogExecuting:  () => {}\r\n}\r\n\r\nexport default CreateCollectionDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with SaveChapterDialog\r\n// ================================================\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\nimport del from '../../../../helpers/common/delete';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// ==================== MUI Icons ====================\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst DeleteCollectionDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, getParentData, setParentAlert,\r\n            deleteCollectionDialog, setDeleteCollectionDialog,\r\n            deleteCollectionDialogExecuting, setDeleteCollectionDialogExecuting,\r\n            selectedDataItemsList, setSelectedDataItemsList, isTemplates  } = props;\r\n\r\n\r\n    // Functions ===\r\n\r\n        const deleteCollectionSelected = useCallback(() =>\r\n        {\r\n            if(selectedDataItemsList)\r\n            {\r\n                selectedDataItemsList.forEach(item => {\r\n                    del(\"collections/\" + item._id, appState.token, (error, response) => \r\n                    {\r\n                        if(error)\r\n                        {\r\n                            setDeleteCollectionDialog(false);\r\n                            setParentAlert(new AlertType('Unable to delete collection(s). Please try again.', \"error\"));\r\n                        }\r\n                        else\r\n                        {\r\n                            if(response.status === 200)\r\n                            {\r\n                                getParentData();\r\n                                setParentAlert(new AlertType('Successfully deleted collection(s). You can continue working.', \"success\")); \r\n                            }   \r\n                            else\r\n                            {\r\n                                setDeleteCollectionDialog(false);\r\n                                setParentAlert(new AlertType('Unable to delete collection(s). Please try again.', \"error\"));\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setDeleteCollectionDialog(false);\r\n                setParentAlert(new AlertType('Unable to delete collection(s). Please try again.', \"error\"));\r\n            }\r\n\r\n            // window.location.reload(); Last resort, refresh the entire page\r\n        }, [ appState, selectedDataItemsList, setDeleteCollectionDialog, setParentAlert, getParentData]);\r\n\r\n        const deleteMemberCollectionSelected = useCallback(() =>\r\n        {\r\n            if(selectedDataItemsList)\r\n            {\r\n                selectedDataItemsList.forEach(item => {\r\n                    del(\"membercollections/\" + item._id, appState.token, (error, response) => \r\n                    {\r\n                        if(error)\r\n                        {\r\n                            setDeleteCollectionDialog(false);\r\n                            setParentAlert(new AlertType('Unable to delete Member collection(s). Please try again.', \"error\"));\r\n                        }\r\n                        else\r\n                        {\r\n                            if(response.status === 200)\r\n                            {\r\n                                getParentData();\r\n                                setParentAlert(new AlertType('Successfully deleted Member collection(s). You can continue working.', \"success\")); \r\n                            }   \r\n                            else\r\n                            {\r\n                                setDeleteCollectionDialog(false);\r\n                                setParentAlert(new AlertType('Unable to delete Member collection(s). Please try again.', \"error\"));\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setDeleteCollectionDialog(false);\r\n                setParentAlert(new AlertType('Unable to delete Member collection(s). Please try again.', \"error\"));\r\n            }\r\n\r\n            // window.location.reload(); Last resort, refresh the entire page\r\n        }, [ appState, selectedDataItemsList, setDeleteCollectionDialog, setParentAlert, getParentData]);\r\n\r\n        \r\n        const closeHandler = useCallback(() => {\r\n            setDeleteCollectionDialog(false);\r\n        }, [ setDeleteCollectionDialog ]);\r\n\r\n\r\n        const deleteHandler = useCallback(() => {\r\n            try{\r\n                setDeleteCollectionDialogExecuting(true);\r\n                if(isTemplates)\r\n                {\r\n                    deleteCollectionSelected();\r\n                }\r\n                else\r\n                {\r\n                    deleteMemberCollectionSelected();\r\n                }\r\n                \r\n                setDeleteCollectionDialogExecuting(false);\r\n                setDeleteCollectionDialog(false);\r\n                setSelectedDataItemsList([]);\r\n            }\r\n            catch{\r\n\r\n            }\r\n        }, [ isTemplates, setDeleteCollectionDialogExecuting, deleteCollectionSelected, deleteMemberCollectionSelected, setSelectedDataItemsList, setDeleteCollectionDialog]);\r\n\r\n\r\n    // Hooks ===\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {selectedDataItemsList? (\r\n                    <Dialog id=\"delete-collection-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={deleteCollectionDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Delete collection{selectedDataItemsList.length === 1? null : \"s\"}\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {deleteCollectionDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <DialogContentText>\r\n                                    {selectedDataItemsList.length === 1? (\r\n                                        <>\r\n                                            Are you sure you would like to delete the collection?\r\n                                        </>\r\n                                        \r\n                                    ) : (\r\n                                        <>\r\n                                            {`Are you sure you would like to delete ${selectedDataItemsList.length} collections?`}\r\n                                        </>\r\n                                    )}\r\n                                </DialogContentText>\r\n                            )}\r\n                        \r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={deleteCollectionDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<DeleteIcon />} onClick={() => { deleteHandler(); }} disabled={deleteCollectionDialogExecuting}>\r\n                                Delete\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nDeleteCollectionDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    deleteCollectionDialog: PropTypes.bool.isRequired,\r\n    setDeleteCollectionDialog: PropTypes.func.isRequired,\r\n    deleteCollectionDialogExecuting: PropTypes.bool.isRequired,\r\n    setDeleteCollectionDialogExecuting: PropTypes.func.isRequired,\r\n    selectedDataItemsList: PropTypes.arrayOf(PropTypes.object),\r\n    setSelectedDataItemsList: PropTypes.func.isRequired,\r\n    isTemplates: PropTypes.bool.isRequired\r\n}\r\n\r\nDeleteCollectionDialog.defaultProps = \r\n{\r\n    appState: {},\r\n    getParentData: () => {},\r\n    setParentAlert: () => {},\r\n    deleteCollectionDialog: {},\r\n    setDeleteCollectionDialog: () => {},\r\n    deleteCollectionDialogExecuting: {},\r\n    setDeleteCollectionDialogExecuting: () => {},\r\n    selectedDataItemsList: {},\r\n    setSelectedDataItemsList: () => {},\r\n    isTemplates: true\r\n}\r\n\r\nexport default DeleteCollectionDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\nimport CollectionTable from '../../../Collections/Components/CollectionTable/CollectionTable';\r\nimport CollectionsManagementControlPanel from '../../../Collections/Components/CollectionsManagementControlPanel/CollectionsManagementControlPanel';\r\n\r\nimport ExportCollectionDialog from '../../../Collections/Dialog/ExportCollectionDialog';\r\nimport CreateCollectionTemplateDialog from '../../../Collections/Dialog/CreateCollectionTemplateDialog';\r\nimport DeleteCollectionDialog from '../../../Collections/Dialog/DeleteCollectionDialog';\r\n\r\n\r\n// ==================== Helpers =====================\r\nimport get from '../../../../../helpers/common/get';\r\nimport AlertType from '../../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\n// ==================== MUI Icons ====================\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst UserCollectionsTab = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, userID, setParentAlert, panelId, panelIndex, userOriginal } = props;\r\n\r\n         // IsDense ; is the template table in compact form\r\n        const [isDense, setIsDense] = useState(true);\r\n\r\n        // Current dataList variable\r\n        const [dataList, setDataList] = useState(null);\r\n\r\n        // Current dataList variable\r\n        const [searchFilteredDataList, setSearchFilteredDataList] = useState(null);\r\n\r\n        // Current selected items dataList variable\r\n        const [selectedDataItemsList, setSelectedDataItemsList] = useState(null);\r\n\r\n        // Create Collection Dialog Logic variables\r\n        const [createCollectionDialog, setCreateCollectionDialog] = useState(false);\r\n        const [createCollectionDialogExecuting, setCreateCollectionDialogExecuting] = useState(false);\r\n\r\n        // Export Collection Chapter Dialog Logic variables\r\n        const [exportCollectionDialog, setExportCollectionDialog] = useState(false);\r\n        const [exportCollectionDialogExecuting, setExportCollectionDialogExecuting] = useState(false);\r\n\r\n        // Delete Collection Dialog Logic variables\r\n        const [deleteCollectionDialog, setDeleteCollectionDialog] = useState(false);\r\n        const [deleteCollectionDialogExecuting, setDeleteCollectionDialogExecuting] = useState(false);\r\n\r\n    // Functions ===\r\n\r\n        const populateList = useCallback((data) =>\r\n        {\r\n            let tempArray = new Array();\r\n\r\n            if(data && Array.isArray(data))\r\n            {\r\n                data.forEach(item => {\r\n\r\n                    tempArray.push(\r\n                        {\r\n                            _id: item._id,\r\n                            patientName: item.patientName,\r\n                            patientId: item.patientId,\r\n                            chapterTemplates: item.chapterTemplates,\r\n                            memberChapters: item.memberChapters,\r\n                            overallCompleteness: item.overallCompleteness,\r\n                            createdBy: item.createdBy,\r\n                            createdAt: item.updatedAt,\r\n                            modifiedBy: item.modifiedBy,\r\n                            updatedAt: item.updatedAt\r\n                        });\r\n                });\r\n            }\r\n\r\n            setDataList([...tempArray]);\r\n            setSearchFilteredDataList([...tempArray]);\r\n            setSelectedDataItemsList([]);\r\n        }, [ ] );\r\n\r\n        // Loads existing user chosen by user from the database\r\n        const getUserCollections = useCallback(() =>\r\n        {\r\n            if(userID != null)\r\n            {\r\n                get(\"collections/patient/\" + userID, appState.token, (error, response) => \r\n                {\r\n                    if(error)\r\n                    {\r\n                        setParentAlert(new AlertType('Unable to retrieve user Collections. Please refresh and try again.', \"error\"));\r\n                    }\r\n                    else\r\n                    {\r\n                        if(response.status === 200 || response.status === 304)\r\n                        {\r\n                            populateList(response.data.collections);\r\n                        }\r\n                        else\r\n                        {\r\n                            setParentAlert(new AlertType('Unable to retrieve user Collections. Please refresh and try again.', \"error\"));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setParentAlert(new AlertType('Unable to retrieve user Collections. Please refresh and try again.', \"error\"));\r\n            }\r\n        }, [ userID, appState, populateList ]);\r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () => {\r\n            setSearchFilteredDataList(dataList);\r\n            setSelectedDataItemsList([]);\r\n        }, [ dataList ] );\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(panelIndex !== panelId)\r\n            {\r\n                setDataList(null);\r\n                setSearchFilteredDataList(null);\r\n                setSelectedDataItemsList(null);\r\n            }\r\n            else\r\n            {\r\n                if(userID)\r\n                {\r\n                  getUserCollections();  \r\n                }\r\n            }\r\n\r\n        }, [ panelIndex, panelId, userID, getUserCollections]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            userOriginal != null? (\r\n                <div\r\n                    role=\"tabpanel\"\r\n                    hidden={panelIndex !== panelId}\r\n                    id={`Panel-${panelId}`}\r\n                >\r\n                    <Collapse in={panelIndex == panelId? true : false}>\r\n                        {dataList? (\r\n                            <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justifyContent=\"flex-start\"\r\n                                alignItems=\"stretch\"\r\n                                spacing={1}\r\n                            >\r\n                                <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"h6\" component=\"h6\">\r\n                                            My Collections\r\n                                        </Typography>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <Box mx={3} my={1} boxShadow={0}>\r\n                                            <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n                                                \r\n                                            </Grid>\r\n                                        </Box>\r\n                                    </Grid>\r\n                                    {/* <Grid item>\r\n                                        <Tooltip\r\n                                            placement=\"left\"\r\n                                            title=\"This page views user information.\"\r\n                                        >\r\n                                            <IconButton>\r\n                                                <HelpOutlineIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </Grid> */}\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Card raised={true}>\r\n                                            <Grid\r\n                                                container\r\n                                                direction=\"column\"\r\n                                                justifyContent=\"flex-start\"\r\n                                                alignItems=\"stretch\"\r\n                                                spacing={0}\r\n                                            >\r\n                                                {dataList && searchFilteredDataList && selectedDataItemsList? (\r\n                                                    <Grid item xs={12}>\r\n                                                        <CollectionsManagementControlPanel\r\n                                                            isDense={isDense}\r\n                                                            setIsDense={setIsDense}\r\n                                                            dataList={dataList}\r\n                                                            getParentData={getUserCollections}\r\n                                                            userID={userID}\r\n                                                            setSearchFilteredDataList={setSearchFilteredDataList}\r\n                                                            setCreateCollectionDialog={setCreateCollectionDialog}\r\n                                                            setParentAlert={setParentAlert}\r\n                                                        />\r\n                                                        <CollectionTable\r\n                                                            appState={appState}\r\n                                                            isDense={isDense}\r\n                                                            userID={userID}\r\n                                                            searchFilteredDataList={searchFilteredDataList}\r\n                                                            selectedDataItemsList={selectedDataItemsList}\r\n                                                            setSelectedDataItemsList={setSelectedDataItemsList}\r\n                                                            setParentDeleteCollectionDialog={setDeleteCollectionDialog}\r\n                                                            setParentExportCollectionDialog={setExportCollectionDialog}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                ) : (\r\n                                                    <Grid item xs={12} container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1}>\r\n                                                        <Grid item>\r\n                                                            <Box mx={1} my={1} boxShadow={0}>\r\n                                                                <CircularProgress />\r\n                                                            </Box>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                )}\r\n                                            </Grid>\r\n                                        </Card>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        ) : (\r\n                            <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justifyContent=\"flex-start\"\r\n                                alignItems=\"stretch\"\r\n                                spacing={1}\r\n                            >\r\n                                <Grid item xs={12} container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1}>\r\n                                    <Grid item>\r\n                                        <Box mx={1} my={1} boxShadow={0}>\r\n                                            <CircularProgress />\r\n                                        </Box>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        )}\r\n                    </Collapse>\r\n                    <CreateCollectionTemplateDialog\r\n                        createCollectionDialog={createCollectionDialog}\r\n                        setCreateCollectionDialog={setCreateCollectionDialog}\r\n                        createCollectionDialogExecuting={createCollectionDialogExecuting}\r\n                        setCreateCollectionDialogExecuting={setCreateCollectionDialogExecuting}\r\n                        setParentAlert={setParentAlert}\r\n                        getParentData={getUserCollections}\r\n                        userID={userID}\r\n                        appState={appState}\r\n                    />\r\n                    <ExportCollectionDialog\r\n                        exportCollectionDialog={exportCollectionDialog}\r\n                        setExportCollectionDialog={setExportCollectionDialog}\r\n                        exportCollectionDialogExecuting={exportCollectionDialogExecuting}\r\n                        setExportCollectionDialogExecuting={setExportCollectionDialogExecuting}\r\n                        selectedDataItemsList={selectedDataItemsList}\r\n                        setParentAlert={setParentAlert}\r\n                        getParentData={getUserCollections}\r\n                    />\r\n                    <DeleteCollectionDialog\r\n                        deleteCollectionDialog={deleteCollectionDialog}\r\n                        setDeleteCollectionDialog={setDeleteCollectionDialog}\r\n                        deleteCollectionDialogExecuting={deleteCollectionDialogExecuting}\r\n                        setDeleteCollectionDialogExecuting={setDeleteCollectionDialogExecuting}\r\n                        selectedDataItemsList={selectedDataItemsList}\r\n                        setSelectedDataItemsList={setSelectedDataItemsList}\r\n                        setParentAlert={setParentAlert}\r\n                        getParentData={getUserCollections}\r\n                        appState={appState}\r\n                    />\r\n                </div>   \r\n            ) : (\r\n                <>\r\n                </>\r\n                // <Typography variant=\"h6\" color=\"inherit\" align=\"center\" gutterBottom>\r\n                //     Not Authorized. Please refresh and try again.\r\n                // </Typography>\r\n            )\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nUserCollectionsTab.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    userID: PropTypes.string.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    panelId: PropTypes.number.isRequired,\r\n    panelIndex: PropTypes.number.isRequired,\r\n    userOriginal: PropTypes.object\r\n}\r\n\r\nUserCollectionsTab.defaultProps = \r\n{\r\n    appState: {},\r\n    userID: null,\r\n    setParentAlert: () => {},\r\n    panelId: null,\r\n    panelIndex: null,\r\n    userOriginal: {}\r\n}\r\n\r\nexport default UserCollectionsTab;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n// import ChangesUserDialog from '../Dialog/ChangesUserDialog';\r\n\r\n// ==================== Helpers =====================\r\nimport get from '../../../../../helpers/common/get';\r\nimport AlertType from '../../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { TextField } from '@material-ui/core';\r\n\r\n// ==================== MUI Icons ====================\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Ballot from '@material-ui/icons/Ballot';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\nconst backLink = \"/administration/users/management\";\r\nconst nameRegex = /^[a-zA-Z]+$/;\r\nconst phoneRegex =/^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/;\r\nconst wordsRegex = /^.+$/\r\nconst streetRegex = /^(\\d{1,})[a-zA-Z0-9\\s]+(\\.)?$/;    //WIP currently accepts number only\r\nconst postalCodeRegex = /^[ABCEGHJ-NPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][ -]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i;\r\n\r\nconst viewUserLinkAdministration = \"/administration\";\r\nconst viewUserLinkStaff = \"/staff\";\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst UserCommunityTab = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, userID, setParentAlert, getParentInfo, panelId, panelIndex, userOriginal } = props;\r\n\r\n        const [userEdit, setUserEdit] = useState(null);\r\n\r\n    // Functions ===\r\n\r\n        const resetInformationProperties = useCallback((event) => \r\n        {\r\n            if(userOriginal)\r\n            {\r\n                setUserEdit(\r\n                    {\r\n                        ...userOriginal,\r\n                    }\r\n                );\r\n            }\r\n\r\n        }, [ userOriginal ]);\r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () => \r\n        {\r\n            setUserEdit(userOriginal);\r\n\r\n        }, [ userOriginal ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(panelIndex !== panelId)\r\n            {\r\n                resetInformationProperties();\r\n            }\r\n\r\n        }, [ panelIndex, panelId, resetInformationProperties]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            userOriginal != null? (\r\n                <div\r\n                    role=\"tabpanel\"\r\n                    hidden={panelIndex !== panelId}\r\n                    id={`Panel-${panelId}`}\r\n                >\r\n                    <Collapse in={panelIndex == panelId? true : false}>\r\n                        {userEdit? (\r\n                            <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justifyContent=\"flex-start\"\r\n                                alignItems=\"stretch\"\r\n                                spacing={1}\r\n                            >\r\n                                <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"h6\" component=\"h6\">\r\n                                            My Community\r\n                                        </Typography>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <Box mx={3} my={1} boxShadow={0}>\r\n                                            <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n                                                {/* <Grid item>\r\n                                                    <Tooltip\r\n                                                        placement=\"bottom\"\r\n                                                        title=\"Unlock editable fields\"\r\n                                                    >\r\n                                                        <IconButton\r\n                                                            size=\"small\"\r\n                                                            color=\"primary\"\r\n                                                            onClick={() => { editablePropertiesHandler(); }}\r\n                                                        >\r\n                                                            {editable? (\r\n                                                                <LockOpenIcon />\r\n                                                            ) : (\r\n                                                                <LockIcon />\r\n                                                            )}\r\n                                                        </IconButton>\r\n                                                    </Tooltip> \r\n                                                </Grid>\r\n                                                <Grid item\r\n                                                    hidden={!editable}\r\n                                                >\r\n                                                    <Collapse in={editable}>\r\n                                                        <ButtonGroup color=\"primary\">\r\n                                                            <Button \r\n                                                                size=\"small\" \r\n                                                                variant=\"outlined\" \r\n                                                                color=\"default\"\r\n                                                                startIcon={<RefreshIcon />}\r\n                                                                onClick={() => { resetInformationProperties(); }}\r\n                                                            >\r\n                                                                Reset\r\n                                                            </Button>\r\n                                                            <Button \r\n                                                                size=\"small\" \r\n                                                                variant=\"outlined\" \r\n                                                                color=\"secondary\"\r\n                                                                disabled={!changedInformationProperties}\r\n                                                                startIcon={<SaveIcon />}\r\n                                                                onClick={() => { saveInformationProperties(); }}\r\n                                                            >\r\n                                                                Save\r\n                                                            </Button> \r\n                                                        </ButtonGroup>\r\n                                                    </Collapse>\r\n                                                </Grid>\r\n                                                <Grid item\r\n                                                    // hidden={!editable}\r\n                                                >\r\n                                                    <Collapse in={changedInformationProperties}>\r\n                                                        <Typography variant=\"caption\" color=\"textSecondary\" align=\"left\" gutterBottom>\r\n                                                            { changedInformationProperties? \"Changes have been made.\" : \"\" }\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                </Grid> */}\r\n                                            </Grid>\r\n                                        </Box>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Tooltip\r\n                                            placement=\"left\"\r\n                                            title=\"This page views user information.\"\r\n                                        >\r\n                                            <IconButton>\r\n                                                <HelpOutlineIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={3}>\r\n                                            {userEdit.role === \"Patient\"? (\r\n                                                <>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography variant=\"subtitle2\" component=\"h6\" color=\"textPrimary\">\r\n                                                            Assigned Helpers\r\n                                                        </Typography>\r\n                                                        <Divider light/>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Button \r\n                                                            size=\"small\" \r\n                                                            variant=\"outlined\" \r\n                                                            color=\"primary\"\r\n                                                            startIcon={<PersonIcon />}\r\n                                                            disabled\r\n                                                            // onClick={() => { resetInformationProperties(); }}\r\n                                                        >\r\n                                                            remove\r\n                                                        </Button>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Button \r\n                                                            size=\"small\" \r\n                                                            variant=\"outlined\" \r\n                                                            color=\"secondary\"\r\n                                                            startIcon={<PersonIcon />}\r\n                                                            disabled\r\n                                                            // onClick={() => { resetInformationProperties(); }}\r\n                                                        >\r\n                                                            assign\r\n                                                        </Button>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                                                        <Grid item xs>\r\n                                                            {userEdit.workers? (\r\n                                                                <List dense={false}>\r\n                                                                    {userEdit.workers.map( (item, index) => {\r\n\r\n                                                                        let link = appState.role === \"Admin\"? viewUserLinkAdministration : \"\";\r\n                                                                        link = appState.role === \"Coordinator\"? viewUserLinkStaff : link;\r\n                                                                        link = appState.role === \"Volunteer\"? viewUserLinkStaff : link;\r\n\r\n                                                                        return (\r\n                                                                            <ListItem key={`helper${index}-${item._id}`} dense={false} divider={true}>\r\n                                                                                <ListItemAvatar>\r\n                                                                                    <Avatar>\r\n                                                                                        <AccountCircleIcon />\r\n                                                                                    </Avatar>\r\n                                                                                </ListItemAvatar>\r\n                                                                                <ListItemText\r\n                                                                                    primary={item.info? item.info.name : \"\"}\r\n                                                                                    secondary={item.role? item.role : \"\"}\r\n                                                                                />\r\n                                                                                <ListItemSecondaryAction>\r\n                                                                                    \r\n                                                                                        <IconButton edge=\"end\" aria-label=\"edit\" size=\"small\"\r\n                                                                                            disabled\r\n                                                                                            component={Link} to={link + \"/users/view/\" + item._id}\r\n                                                                                        >\r\n                                                                                            <VisibilityIcon/>\r\n                                                                                        </IconButton>\r\n                                                                                    \r\n                                                                                </ListItemSecondaryAction>\r\n                                                                            </ListItem> \r\n                                                                        );\r\n                                                                    })}\r\n                                                                </List>\r\n                                                            ) : (\r\n                                                                <Typography variant=\"body2\" component=\"h6\" color=\"textPrimary\">\r\n                                                                    None available\r\n                                                                </Typography>\r\n                                                            )}\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography variant=\"subtitle2\" component=\"h6\" color=\"textPrimary\">\r\n                                                            Assigned Clients\r\n                                                        </Typography>\r\n                                                        <Divider light/>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Button \r\n                                                            size=\"small\" \r\n                                                            variant=\"outlined\" \r\n                                                            color=\"primary\"\r\n                                                            startIcon={<PersonIcon />}\r\n                                                            disabled\r\n                                                            // onClick={() => { resetInformationProperties(); }}\r\n                                                        >\r\n                                                            remove\r\n                                                        </Button>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Button \r\n                                                            size=\"small\" \r\n                                                            variant=\"outlined\" \r\n                                                            color=\"secondary\"\r\n                                                            startIcon={<PersonIcon />}\r\n                                                            disabled\r\n                                                            // onClick={() => { resetInformationProperties(); }}\r\n                                                        >\r\n                                                            assign\r\n                                                        </Button>\r\n                                                    </Grid>\r\n                                                    <Grid item xs></Grid>\r\n                                                    <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                                                        <Grid item xs>\r\n                                                            {userEdit.patients? (\r\n                                                                <List dense={false}>\r\n                                                                    {userEdit.patients.map( (item, index) => {\r\n\r\n                                                                        let link = appState.role === \"Admin\"? viewUserLinkAdministration : \"\";\r\n                                                                        link = appState.role === \"Coordinator\"? viewUserLinkStaff : link;\r\n                                                                        link = appState.role === \"Volunteer\"? viewUserLinkStaff : link;\r\n\r\n                                                                        return (\r\n                                                                            <ListItem key={`client${index}-${item._id}`} dense={false} divider={true}>\r\n                                                                                <ListItemAvatar>\r\n                                                                                    <Avatar>\r\n                                                                                        <AccountCircleIcon />\r\n                                                                                    </Avatar>\r\n                                                                                </ListItemAvatar>\r\n                                                                                <ListItemText\r\n                                                                                    primary={item.info? item.info.name : \"\"}\r\n                                                                                    secondary={item.role? item.role : \"\"}\r\n                                                                                />\r\n                                                                                <ListItemSecondaryAction>\r\n                                                                                \r\n                                                                                        <IconButton edge=\"end\" aria-label=\"edit\" size=\"small\"\r\n                                                                                            disabled={item._id === appState._id? true : false}\r\n                                                                                            component={Link} to={link + \"/users/view/\" + item._id}\r\n                                                                                        >\r\n                                                                                            <VisibilityIcon/>\r\n                                                                                        </IconButton>\r\n                                                                                    \r\n                                                                                </ListItemSecondaryAction>\r\n                                                                            </ListItem> \r\n                                                                        );\r\n                                                                    })}\r\n                                                                </List>\r\n                                                            ) : (\r\n                                                                <Typography variant=\"body2\" component=\"h6\" color=\"textPrimary\">\r\n                                                                    None available\r\n                                                                </Typography>\r\n                                                            )}\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </>\r\n                                            )}\r\n                                            \r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        ) : (\r\n                            <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justifyContent=\"flex-start\"\r\n                                alignItems=\"stretch\"\r\n                                spacing={1}\r\n                            >\r\n                                <Grid item xs={12} container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1}>\r\n                                    <Grid item>\r\n                                        <Box mx={1} my={1} boxShadow={0}>\r\n                                            <CircularProgress />\r\n                                        </Box>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        )}\r\n                    </Collapse>\r\n                </div>   \r\n            ) : (\r\n                <>\r\n                </>\r\n                // <Typography variant=\"h6\" color=\"inherit\" align=\"center\" gutterBottom>\r\n                //     Not Authorized. Please refresh and try again.\r\n                // </Typography>\r\n            )\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nUserCommunityTab.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    userID: PropTypes.string.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    getParentInfo: PropTypes.func.isRequired,\r\n    panelId: PropTypes.number.isRequired,\r\n    panelIndex: PropTypes.number.isRequired,\r\n    userOriginal: PropTypes.object\r\n}\r\n\r\nUserCommunityTab.defaultProps = \r\n{\r\n    appState: {},\r\n    userID: null,\r\n    setParentAlert: () => {},\r\n    getParentInfo: () => {},\r\n    panelId: null,\r\n    panelIndex: null,\r\n    userOriginal: {}\r\n}\r\n\r\nexport default UserCommunityTab;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ============================================\r\n// Sends a PUT request to server using axios\r\n// in order to modify already existing data\r\n// ============================================\r\nimport axios from 'axios';\r\n\r\nfunction _put(url, token, data, callback)\r\n{\r\n    axios({\r\n        method: 'put',\r\n        url: '/api/' + url,\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + token\r\n        },\r\n        data: JSON.stringify(data),\r\n        timeout: 5000\r\n    })\r\n    .then(response => {\r\n        callback(null, response);\r\n    })\r\n    .catch(error => {\r\n        callback(error, null);\r\n    });\r\n}\r\n\r\nexport default _put;","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n// import ChangesUserDialog from '../Dialog/ChangesUserDialog';\r\n\r\n// ==================== Helpers =====================\r\nimport post from '../../../../../helpers/common/post';\r\nimport get from '../../../../../helpers/common/get';\r\nimport put from '../../../../../helpers/common/put';\r\nimport AlertType from '../../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport MarkunreadIcon from '@material-ui/icons/Markunread';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { ListSubheader, TextField } from '@material-ui/core';\r\n\r\n// ==================== MUI Icons ====================\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\nconst useStyles = makeStyles((theme) =>    //Notice the hook useStyles\r\n({\r\n    root: {\r\n        flexGrow: 1,     // CSS determined this way, flexbox properties\r\n        height: '100%'\r\n    },\r\n    rootGrid: {\r\n        height: '100%'\r\n    }\r\n}));\r\n\r\n\r\n// ================= Static Variables ================\r\nconst backLink = \"/administration/users/management\";\r\nconst nameRegex = /^[a-zA-Z]+$/;\r\nconst phoneRegex = /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/;\r\nconst wordsRegex = /^.+$/\r\nconst streetRegex = /^(\\d{1,})[a-zA-Z0-9\\s]+(\\.)?$/;    //WIP currently accepts number only\r\nconst postalCodeRegex = /^[ABCEGHJ-NPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][ -]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i;\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst UserNotesTab = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n    // Style variable declaration\r\n    const classes = useStyles();\r\n\r\n    // Declaration of Stateful Variables ===\r\n    const { appState, userID, setParentAlert, getParentInfo, panelId, panelIndex, userOriginal } = props;\r\n\r\n    // Variables for Assigned user (select box)\r\n    const [userData, setUserData] = useState([]);\r\n    const [value, setValue] = useState([]);\r\n\r\n    // Variables to save/add note\r\n    const [note, setNote] = useState(\"\");\r\n    const [userEdit, setUserEdit] = useState(null);\r\n\r\n    // Variables to fetch message list\r\n    const [notesList, setNoteList] = useState([]);\r\n\r\n    // Adds note to database\r\n    const saveNote = useCallback((event) => {\r\n        let noteData = {\r\n            'senderId': userID,\r\n            'receiverId': value,\r\n            'message': note\r\n        };\r\n        console.log(noteData);\r\n        if (userID != null) {\r\n            post(\"notes/\", appState.token, noteData, (error, res) => {\r\n                if (error) {\r\n                    setParentAlert(new AlertType('Unable to save note. Please refresh and try again.', \"error\"));\r\n                }\r\n                else {\r\n                    if (res.status === 200 || res.status === 304) {\r\n                        setParentAlert(new AlertType('Successfully saved note.', \"success\"));\r\n                        setNote(\"\");\r\n                        setValue(\"\");\r\n                    }\r\n                    else {\r\n                        setParentAlert(new AlertType('Unable to save note. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }, [setNote, note]);\r\n\r\n    // Resets notes Textbox \r\n    const resetNote = useCallback((event) => {\r\n        setNote(\"\");\r\n        setValue([]);\r\n    }, []);\r\n\r\n    // Fetch assigned users to send notes\r\n    const getUsers = useCallback((event) => {\r\n        if (userID != null) {\r\n            get(\"users/getAllUsers/\" + userID, appState.token, (err, res) => {\r\n\r\n                var arr = [];                \r\n                for (var i = 0; i < res.data.user.patients.length; i++) {\r\n                    var obj = {\r\n                        \"name\": res.data.user.patients[i].info.name,\r\n                        \"id\": res.data.user.patients[i]._id\r\n                    }\r\n                    arr.push(obj);\r\n                }\r\n\r\n                for (var i = 0; i < res.data.user.admins.length; i++) {\r\n                    var obj = {\r\n                        \"name\": res.data.user.admins[i].info.name,\r\n                        \"id\": res.data.user.admins[i]._id\r\n                    }\r\n                    arr.push(obj);\r\n                }\r\n\r\n                for (var i = 0; i < res.data.user.coordinators.length; i++) {\r\n                    var obj = {\r\n                        \"name\": res.data.user.coordinators[i].info.name,\r\n                        \"id\": res.data.user.coordinators[i]._id\r\n                    }\r\n                    arr.push(obj);\r\n                }\r\n\r\n                for (var i = 0; i < res.data.user.volunteers.length; i++) {\r\n                    var obj = {\r\n                        \"name\": res.data.user.volunteers[i].info.name,\r\n                        \"id\": res.data.user.volunteers[i]._id\r\n                    }\r\n                    arr.push(obj);\r\n                }\r\n\r\n                \r\n                setUserData(arr);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    // Fetches the dropdown box value \r\n    const userSelectHandler = useCallback((event) => {\r\n        setValue(event.target.value);\r\n    }, [setValue]);\r\n\r\n    // Update note status when read\r\n    const handleNoteStatus = useCallback((noteId) => {\r\n        for (var i = 0; i < notesList.length; i++) {\r\n            if (noteId === notesList[i].id)\r\n                notesList[i].id.status = \"read\";\r\n        }\r\n        put(\"notes/\", appState.token, { 'noteID': noteId }, (err, res) => {\r\n            // console.log(res);\r\n        });\r\n    }, [setValue, value]);\r\n\r\n    // ISO date to mmm-dd-yyyy\r\n    const getFormattedDate = (d) => {\r\n        var date = new Date(d);\r\n        var dateTime = getMonthName(date.getMonth()) + ' ' + date.getDate() + ' , ' + date.getFullYear() + ' ' + date.getHours() + ':' + date.getUTCMinutes();\r\n        return dateTime;\r\n    }\r\n\r\n    // Formatting month for date\r\n    const getMonthName = (m) => {\r\n        if (m === 0)\r\n            return \"JAN\";\r\n        if (m === 1)\r\n            return \"FEB\";\r\n        if (m === 2)\r\n            return \"MAR\";\r\n        if (m === 3)\r\n            return \"APR\";\r\n        if (m === 4)\r\n            return \"MAY\";\r\n        if (m === 5)\r\n            return \"JUN\";\r\n        if (m === 6)\r\n            return \"JUL\";\r\n        if (m === 7)\r\n            return \"AUG\";\r\n        if (m === 8)\r\n            return \"SEP\";\r\n        if (m === 9)\r\n            return \"OCT\";\r\n        if (m === 10)\r\n            return \"NOV\";\r\n        if (m === 11)\r\n            return \"DEC\";\r\n    }\r\n\r\n    // Fetch Notes list of current user\r\n    const getNotes = useCallback((event) => {\r\n        if (userID != null) {\r\n            get(\"notes/\" + userID, appState.token, (err, res) => {\r\n                if(err == null ) {\r\n                    for (var i = 0; i < res.data.foundNotes.length; i++) {\r\n                        var obj = res.data.foundNotes[i];\r\n                        obj.createdAt = getFormattedDate(obj.createdAt);\r\n                        notesList.push(obj);                    \r\n                    } \r\n                } \r\n            });\r\n        }\r\n    }, [appState]);\r\n\r\n    // List the notes received\r\n    const renderRow = notesList.map((note) => {\r\n        var id = note._id;\r\n        return (\r\n            <>\r\n                <div>\r\n                    <Card variant=\"outlined\" style={{marginTop: 15}}>\r\n                        <List subheader={\r\n                            <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                                {note.senderId.info.name}\r\n                            </ListSubheader>\r\n                        }>\r\n                            <ListItem key={note._id}>\r\n                                <ListItemText\r\n                                    primary={note.message}\r\n                                    secondary={note.createdAt}\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"end\" aria-label=\"edit\" size=\"small\"\r\n                                        onClick={() => { handleNoteStatus(id); }}\r\n                                    >\r\n                                        {note.status == \"unread\" ? (<MarkunreadIcon />) : (<MailOutlineIcon />)}\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Card>\r\n                </div>\r\n            </>\r\n        );\r\n    });\r\n\r\n    // Hooks ===\r\n\r\n    useEffect(() => {\r\n        setUserEdit(userOriginal);\r\n    }, [userOriginal]);\r\n\r\n    useEffect( () => {\r\n        getUsers();\r\n        if (notesList.length == 0)\r\n            getNotes();\r\n    }, [value, setValue]);\r\n\r\n    // Render Section ===\r\n    return (\r\n        userOriginal != null ? (\r\n            <div\r\n                role=\"tabpanel\"\r\n                hidden={panelIndex !== panelId}\r\n                id={`Panel-${panelId}`}\r\n            >\r\n                <Collapse in={panelIndex == panelId ? true : false}>\r\n                    {userEdit ? (\r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                            justifyContent=\"flex-start\"\r\n                            alignItems=\"stretch\"\r\n                            spacing={1}\r\n                        >\r\n                            <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                                <Grid item>\r\n                                    <Typography variant=\"h6\" component=\"h6\">\r\n                                        Add Note\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Box boxShadow={0}>\r\n                                        <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n                                            <Grid item>\r\n                                                <Tooltip\r\n                                                    placement=\"left\"\r\n                                                    title=\"This allows sending notes.\"\r\n                                                >\r\n                                                    <IconButton>\r\n                                                        <HelpOutlineIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <Box mx={3} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    size=\"small\"\r\n                                                    variant=\"outlined\"\r\n                                                    color=\"default\"\r\n                                                    startIcon={<RefreshIcon />}\r\n                                                    onClick={() => { resetNote(); }}\r\n                                                >\r\n                                                    Reset\r\n                                                </Button>\r\n                                                <Button\r\n                                                    size=\"small\"\r\n                                                    variant=\"outlined\"\r\n                                                    color=\"secondary\"\r\n                                                    startIcon={<SaveIcon />}\r\n                                                    onClick={() => saveNote()}\r\n                                                >\r\n                                                    Save\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Box mx={3} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n                                            <Grid item lg={8}>\r\n                                                <FormControl fullWidth variant=\"filled\" size=\"small\" className={classes.formControl}>\r\n                                                    <InputLabel id=\"select-label-Member\">Member</InputLabel>\r\n                                                    <Select\r\n                                                        className={classes.selectEmpty}\r\n                                                        labelId=\"select-label-Member\"\r\n                                                        id=\"select-user\"\r\n                                                        fullWidth\r\n                                                        defaultValue=\"\"\r\n                                                        disabled={userData ? false : true}\r\n                                                        onChange={(event) => { userSelectHandler(event); }}\r\n                                                    >\r\n                                                        {userData.map((item, index) => {\r\n                                                            return (\r\n                                                                <MenuItem key={item.id} value={item.id}>\r\n                                                                    <em>{item.name}</em>\r\n                                                                </MenuItem>\r\n                                                            )\r\n                                                        })}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Box mx={3} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n                                            <Grid item lg={8}>\r\n                                                <TextField id=\"Note\" multiline rows={5} variant=\"outlined\" placeholder=\"Write your notes here...\" fullWidth label=\"Note\" onChange={(event) => { setNote(event.target.value); }}\r\n                                                    value={note}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                                <Grid item>\r\n                                    <Typography variant=\"h6\" component=\"h6\">\r\n                                        My Notes\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Tooltip\r\n                                        placement=\"left\"\r\n                                        title=\"This allows all notes received for current user\"\r\n                                    >\r\n                                        <IconButton>\r\n                                            <HelpOutlineIcon />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            <Grid item >\r\n                                {\r\n                                    notesList.length != 0 ? renderRow : \"There are no notes available for you!\"\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                    ) : (\r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                            justifyContent=\"flex-start\"\r\n                            alignItems=\"stretch\"\r\n                            spacing={1}\r\n                        >\r\n                            <Grid item xs={12} container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1}>\r\n                                <Grid item>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <CircularProgress />\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                </Collapse>\r\n            </div>\r\n        ) : (\r\n            <>\r\n            </>\r\n            // <Typography variant=\"h6\" color=\"inherit\" align=\"center\" gutterBottom>\r\n            //     Not Authorized. Please refresh and try again.\r\n            // </Typography>\r\n        )\r\n    );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nUserNotesTab.propTypes =\r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    userID: PropTypes.string.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    getParentInfo: PropTypes.func.isRequired,\r\n    panelId: PropTypes.number.isRequired,\r\n    panelIndex: PropTypes.number.isRequired,\r\n    userOriginal: PropTypes.object\r\n}\r\n\r\nUserNotesTab.defaultProps =\r\n{\r\n    appState: {},\r\n    userID: null,\r\n    setParentAlert: () => { },\r\n    getParentInfo: () => { },\r\n    panelId: null,\r\n    panelIndex: null,\r\n    userOriginal: {}\r\n}\r\n\r\nexport default UserNotesTab;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n// import ChangesUserDialog from '../Dialog/ChangesUserDialog';\r\n\r\n// ==================== Helpers =====================\r\nimport patch from '../../../../../helpers/common/patch';\r\nimport AlertType from '../../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { TextField } from '@material-ui/core';\r\n\r\n// ==================== MUI Icons ====================\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\nconst backLink = \"/administration/users/management\";\r\nconst nameRegex = /^[a-zA-Z]+$/;\r\nconst phoneRegex =/^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/;\r\nconst wordsRegex = /^.+$/\r\nconst streetRegex = /^(\\d{1,})[a-zA-Z0-9\\s]+(\\.)?$/;    //WIP currently accepts number only\r\nconst postalCodeRegex = /^[ABCEGHJ-NPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][ -]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i;\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst UserInformationTab = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, userID, setParentAlert, getParentInfo, panelId, panelIndex, userOriginal } = props;\r\n\r\n        const [userEdit, setUserEdit] = useState(null);\r\n\r\n        // Unlock editable fields\r\n        const [editable, setEditable] = useState(false);\r\n\r\n        const [changedInformationProperties, setChangedInformationProperties] = useState(false);\r\n\r\n        //  Editable Variables ==========\r\n\r\n            const [name, setName] = useState(\"\");\r\n            const [nameError, setNameError] = useState(false);\r\n\r\n            const [dateOfBirth, setDateOfBirth] = useState(\"\");\r\n            const [dateOfBirthError, setDateOfBirthError] = useState(false);\r\n\r\n            const [gender, setGender] = useState(\"\");\r\n            const [genderError, setGenderError] = useState(false);\r\n\r\n            const [gender2, setGender2] = useState(\"\");\r\n            const [isGender2, setIsGender2] = useState(\"\");\r\n            const [gender2Error, setGender2Error] = useState(false);\r\n\r\n            const [language, setLanguage] = useState(\"\");\r\n            const [languageError, setLanguageError] = useState(false);\r\n\r\n            const [language2, setLanguage2] = useState(\"\");\r\n            const [isLanguage2, setIsLanguage2] = useState(false);\r\n            const [language2Error, setLanguage2Error] = useState(false);\r\n\r\n            // Non-Required Parameters ========================================\r\n\r\n            const [phone, setPhone] = useState(\"\");\r\n            const [phoneError, setPhoneError] = useState(false);\r\n\r\n            const [street, setStreet] = useState(\"\");\r\n            const [streetError, setStreetError] = useState(false);\r\n\r\n            const [postalCode, setPostalCode] = useState(\"\");\r\n            const [postalCodeError, setPostalCodeError] = useState(false);\r\n\r\n            const [city, setCity] = useState(\"\");\r\n            const [cityError, setCityError] = useState(false);\r\n\r\n            const [province, setProvince] = useState(\"\");\r\n            const [provinceError, setProvinceError] = useState(false);\r\n\r\n            const [country, setCountry] = useState(\"\");\r\n            const [countryError, setCountryError] = useState(false);\r\n\r\n    // Functions ===\r\n\r\n        const editablePropertiesHandler = useCallback((event) => {\r\n\r\n            setEditable(!editable);\r\n\r\n            if(userOriginal)\r\n            {\r\n                setUserEdit(\r\n                    {\r\n                        ...userOriginal,\r\n                    }\r\n                );\r\n\r\n                setName(userOriginal.info.name);\r\n                setNameError(false);\r\n                \r\n                setDateOfBirth(userOriginal.info.dateOfBirth);\r\n                setDateOfBirthError(false);\r\n                \r\n                if(userOriginal.info.gender != \"Male\" && userOriginal.info.gender != \"Female\")\r\n                {\r\n                    setGender(\"NonBinary\");\r\n    \r\n                    setIsGender2(true);\r\n\r\n                    if(userOriginal && userOriginal.info)\r\n                    {\r\n                        setGender2(userOriginal.info.gender);\r\n\r\n                        if(userOriginal.info.gender.length === 0)\r\n                        {\r\n                            setGender2Error(true);\r\n                        }\r\n                        else\r\n                        {\r\n                            setGender2Error(false);\r\n                        }\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    setGender(userOriginal.info.gender);\r\n\r\n                    setIsGender2(false);\r\n                    setGender2(\"\");\r\n                    setGender2Error(false);\r\n                }\r\n\r\n                setGenderError(false);\r\n                \r\n                if(userOriginal.info.language != \"English\")\r\n                {\r\n                    setLanguage(\"Other\");\r\n\r\n                    setLanguage2(userOriginal.info.language);\r\n\r\n                    if(userOriginal.info.language.length === 0)\r\n                    {\r\n                        setLanguage2Error(true);\r\n                    }\r\n                    else\r\n                    {\r\n                        setLanguage2Error(false);\r\n                    }\r\n                    \r\n                }\r\n                else\r\n                {\r\n                    setLanguage(userOriginal.info.language);\r\n                    \r\n                    setIsLanguage2(false);\r\n                    setLanguage2(\"\");\r\n                    setLanguage2Error(false);\r\n                }\r\n\r\n                setLanguageError(false);\r\n                \r\n                if(userOriginal.info && userOriginal.info.phone)\r\n                {\r\n                    setPhone(userOriginal.info.phone);\r\n                }\r\n                else\r\n                {\r\n                    setPhone(\"\");\r\n                }\r\n\r\n                setPhoneError(false);\r\n\r\n                if(userOriginal.info && userOriginal.info.currentAddress && userOriginal.info.currentAddress.street)\r\n                {\r\n                    setStreet(userOriginal.info.currentAddress.street);\r\n                }\r\n                else\r\n                {\r\n                    setStreet(\"\");\r\n                }\r\n\r\n                setStreetError(false);\r\n\r\n                if(userOriginal.info && userOriginal.info.currentAddress && userOriginal.info.currentAddress.city)\r\n                {\r\n                    setCity(userOriginal.info.currentAddress.city);\r\n                }\r\n                else\r\n                {\r\n                    setCity(\"\");\r\n                }\r\n\r\n                setCityError(false);\r\n\r\n                if(userOriginal.info && userOriginal.info.currentAddress && userOriginal.info.currentAddress.code)\r\n                {\r\n                    setPostalCode(userOriginal.info.currentAddress.code);\r\n                }\r\n                else\r\n                {\r\n                    setPostalCode(\"\");\r\n                }\r\n\r\n                setPostalCodeError(false);\r\n\r\n                if(userOriginal.info && userOriginal.info.currentAddress && userOriginal.info.currentAddress.state)\r\n                {\r\n                    setProvince(userOriginal.info.currentAddress.state);\r\n                }\r\n                else\r\n                {\r\n                    setProvince(\"\");\r\n                }\r\n\r\n                setProvinceError(false);\r\n\r\n                if(userOriginal.info && userOriginal.info.currentAddress && userOriginal.info.currentAddress.country)\r\n                {\r\n                    setCountry(userOriginal.info.currentAddress.country);\r\n                }\r\n                else\r\n                {\r\n                    setCountry(\"\");\r\n                }\r\n\r\n                setCountryError(false);\r\n            }\r\n\r\n        }, [ editable, setEditable, userOriginal, setUserEdit, setName, setNameError, setDateOfBirth, setDateOfBirthError, setGender, setGenderError, setIsGender2, setGender2, setGender2Error,\r\n            setLanguage, setLanguageError, setIsLanguage2, setLanguage2, setLanguage2Error, setPhone, setPhoneError, setStreet, setStreetError, setPostalCode, setPostalCodeError, setCity, setCityError,\r\n            setProvince, setProvinceError, setCountry, setCountryError ]);\r\n\r\n        const nameHandler = useCallback((event) => {\r\n            \r\n            if(event.target.value.length === 0)\r\n            {\r\n                setNameError(true);\r\n            }\r\n\r\n            setUserEdit({\r\n                ...userEdit,\r\n                info: {\r\n                    ...userEdit.info,\r\n                    name: event.target.value\r\n                }\r\n            });\r\n\r\n        }, [ userEdit, setUserEdit, setNameError ]);\r\n\r\n        const genderHandler = useCallback((event) => \r\n        {\r\n            setGender(event.target.value);\r\n        }, [ setGender ]);\r\n\r\n        const gender2Handler = useCallback((event) => \r\n        {\r\n            if(wordsRegex.test(String(event.target.value)))\r\n            {\r\n                setGender2Error(false);\r\n            }\r\n            else\r\n            {   \r\n                setGender2Error(true);\r\n            }\r\n\r\n            setGender2(event.target.value);\r\n\r\n        }, [ wordsRegex, setGender2, setGender2Error ]);\r\n\r\n        const dateOfBirthHandler = useCallback((event) => \r\n        {\r\n            setUserEdit({\r\n                ...userEdit,\r\n                info: {\r\n                    ...userEdit.info,\r\n                    dateOfBirth: new Date(event.target.value)\r\n                }\r\n            });\r\n\r\n        }, [ userEdit, setUserEdit, setDateOfBirthError ]);\r\n\r\n        const languageHandler = useCallback((event) => \r\n        {\r\n            setLanguage(event.target.value);\r\n        }, [ setLanguage ]);\r\n\r\n        const language2Handler = useCallback((event) => \r\n        {\r\n            if(wordsRegex.test(String(event.target.value)))\r\n            {\r\n                setLanguage2Error(false);\r\n            }\r\n            else\r\n            {   \r\n                setLanguage2Error(true);\r\n            }\r\n\r\n            setLanguage2(event.target.value);\r\n\r\n        }, [ wordsRegex, setLanguage2, setLanguage2Error ]);\r\n\r\n        const phoneHandler = useCallback((event) => \r\n        {\r\n            if(phoneRegex.test(String(event.target.value)))\r\n            {\r\n                setPhoneError(false);\r\n            }\r\n            else\r\n            {   \r\n                if(event.target.value.length === 0)\r\n                {\r\n                    setPhoneError(false);\r\n                }\r\n                else\r\n                {\r\n                    setPhoneError(true);\r\n                }\r\n                \r\n            }\r\n\r\n            // setUserEdit({\r\n            //     ...userEdit,\r\n            //     info: {\r\n            //         ...userEdit.info,\r\n            //         phone: event.target.value\r\n            //     }\r\n            // });\r\n\r\n            setPhone(event.target.value);\r\n\r\n        }, [ setPhone, setPhoneError, phoneRegex ]);\r\n\r\n        const streetHandler = useCallback((event) => \r\n        {\r\n            if(streetRegex.test(String(event.target.value)))\r\n            {\r\n                setStreetError(false);\r\n            }\r\n            else\r\n            {   \r\n                if(event.target.value.length === 0)\r\n                {\r\n                    setStreetError(false);\r\n                }\r\n                else\r\n                {\r\n                    setStreetError(true);\r\n                }\r\n                \r\n            }\r\n\r\n            // setUserEdit({\r\n            //     ...userEdit,\r\n            //     info: {\r\n            //         ...userEdit.info,\r\n            //         currentAddress: {\r\n            //             ...userEdit.info.currentAddress,\r\n            //             street: event.target.value\r\n            //         }\r\n            //     }\r\n            // });\r\n\r\n            setStreet(event.target.value);\r\n\r\n        }, [ setStreet, setStreetError, streetRegex ]);\r\n\r\n        const cityHandler = useCallback((event) => \r\n        {\r\n            // setUserEdit({\r\n            //     ...userEdit,\r\n            //     info: {\r\n            //         ...userEdit.info,\r\n            //         currentAddress: {\r\n            //             ...userEdit.info.currentAddress,\r\n            //             city: event.target.value\r\n            //         }\r\n            //     }\r\n            // });\r\n\r\n            setCity(event.target.value);\r\n\r\n        }, [ setCity ]);\r\n\r\n        const provinceHandler = useCallback((event) => \r\n        {\r\n            // setUserEdit({\r\n            //     ...userEdit,\r\n            //     info: {\r\n            //         ...userEdit.info,\r\n            //         currentAddress: {\r\n            //             ...userEdit.info.currentAddress,\r\n            //             state: event.target.value\r\n            //         }\r\n            //     }\r\n            // });\r\n\r\n            setProvince(event.target.value);\r\n\r\n        }, [ setProvince ]);\r\n\r\n        const postalCodeHandler = useCallback((event) => \r\n        {\r\n            if(postalCodeRegex.test(String(event.target.value)))\r\n            {\r\n                setPostalCodeError(false);\r\n            }\r\n            else\r\n            {   \r\n                if(event.target.value.length === 0)\r\n                {\r\n                    setPostalCodeError(false);\r\n                }\r\n                else\r\n                {\r\n                    setPostalCodeError(true);\r\n                }\r\n            }\r\n\r\n            // setUserEdit({\r\n            //     ...userEdit,\r\n            //     info: {\r\n            //         ...userEdit.info,\r\n            //         currentAddress: {\r\n            //             ...userEdit.info.currentAddress,\r\n            //             code: event.target.value\r\n            //         }\r\n            //     }\r\n            // });\r\n\r\n            setPostalCode(event.target.value);\r\n\r\n        }, [ setPostalCode, setPostalCodeError, postalCodeRegex ]);\r\n\r\n        const countryHandler = useCallback((event) => \r\n        {\r\n            // setUserEdit({\r\n            //     ...userEdit,\r\n            //     info: {\r\n            //         ...userEdit.info,\r\n            //         currentAddress: {\r\n            //             ...userEdit.info.currentAddress,\r\n            //             country: event.target.value\r\n            //         }\r\n            //     }\r\n            // });\r\n\r\n            setCountry(event.target.value);\r\n\r\n        }, [ setCountry ]);\r\n\r\n        const resetInformationProperties = useCallback((event) => \r\n        {\r\n            if(userOriginal)\r\n            {\r\n                setUserEdit(\r\n                    {\r\n                        ...userOriginal,\r\n                    }\r\n                );\r\n\r\n                setName(userOriginal.info.name);\r\n                setNameError(false);\r\n                \r\n                setDateOfBirth(userOriginal.info.dateOfBirth);\r\n                setDateOfBirthError(false);\r\n                \r\n                if(userOriginal.info.gender != \"Male\" && userOriginal.info.gender != \"Female\")\r\n                {\r\n                    setGender(\"NonBinary\");\r\n    \r\n                    setIsGender2(true);\r\n\r\n                    if(userOriginal && userOriginal.info)\r\n                    {\r\n                        setGender2(userOriginal.info.gender);\r\n\r\n                        if(userOriginal.info.gender.length === 0)\r\n                        {\r\n                            setGender2Error(true);\r\n                        }\r\n                        else\r\n                        {\r\n                            setGender2Error(false);\r\n                        }\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    setGender(userOriginal.info.gender);\r\n\r\n                    setIsGender2(false);\r\n                    setGender2(\"\");\r\n                    setGender2Error(false);\r\n                }\r\n\r\n                setGenderError(false);\r\n                \r\n                if(userOriginal.info.language != \"English\")\r\n                {\r\n                    setLanguage(\"Other\");\r\n\r\n                    setLanguage2(userOriginal.info.language);\r\n\r\n                    if(userOriginal.info.language.length === 0)\r\n                    {\r\n                        setLanguage2Error(true);\r\n                    }\r\n                    else\r\n                    {\r\n                        setLanguage2Error(false);\r\n                    }\r\n                    \r\n                }\r\n                else\r\n                {\r\n                    setLanguage(userOriginal.info.language);\r\n                    \r\n                    setIsLanguage2(false);\r\n                    setLanguage2(\"\");\r\n                    setLanguage2Error(false);\r\n                }\r\n\r\n                setLanguageError(false);\r\n\r\n                if(userOriginal.info && userOriginal.info.phone)\r\n                {\r\n                    setPhone(userOriginal.info.phone);\r\n                }\r\n                else\r\n                {\r\n                    setPhone(\"\");\r\n                }\r\n\r\n                setPhoneError(false);\r\n\r\n                if(userOriginal.info && userOriginal.info.currentAddress && userOriginal.info.currentAddress.street)\r\n                {\r\n                    setStreet(userOriginal.info.currentAddress.street);\r\n                }\r\n                else\r\n                {\r\n                    setStreet(\"\");\r\n                }\r\n\r\n                setStreetError(false);\r\n\r\n                if(userOriginal.info && userOriginal.info.currentAddress && userOriginal.info.currentAddress.city)\r\n                {\r\n                    setCity(userOriginal.info.currentAddress.city);\r\n                }\r\n                else\r\n                {\r\n                    setCity(\"\");\r\n                }\r\n\r\n                setCityError(false);\r\n\r\n                if(userOriginal.info && userOriginal.info.currentAddress && userOriginal.info.currentAddress.code)\r\n                {\r\n                    setPostalCode(userOriginal.info.currentAddress.code);\r\n                }\r\n                else\r\n                {\r\n                    setPostalCode(\"\");\r\n                }\r\n\r\n                setPostalCodeError(false);\r\n\r\n                if(userOriginal.info && userOriginal.info.currentAddress && userOriginal.info.currentAddress.state)\r\n                {\r\n                    setProvince(userOriginal.info.currentAddress.state);\r\n                }\r\n                else\r\n                {\r\n                    setProvince(\"\");\r\n                }\r\n\r\n                setProvinceError(false);\r\n\r\n                if(userOriginal.info && userOriginal.info.currentAddress && userOriginal.info.currentAddress.country)\r\n                {\r\n                    setCountry(userOriginal.info.currentAddress.country);\r\n                }\r\n                else\r\n                {\r\n                    setCountry(\"\");\r\n                }\r\n\r\n                setCountryError(false);\r\n            }\r\n\r\n        }, [ userOriginal, setUserEdit, setName, setNameError, setDateOfBirth, setDateOfBirthError, setGender, setGenderError, setIsGender2, setGender2, setGender2Error,\r\n            setLanguage, setLanguageError, setIsLanguage2, setLanguage2, setLanguage2Error, setPhone, setPhoneError, setStreet, setStreetError, setPostalCode, setPostalCodeError, setCity, setCityError,\r\n            setProvince, setProvinceError, setCountry, setCountryError ]);\r\n\r\n        const saveInformationProperties = useCallback((event) =>\r\n        {\r\n            if(nameError || genderError || gender2Error || dateOfBirthError || languageError || language2Error\r\n                || phoneError || streetError || cityError || postalCodeError || provinceError || countryError)\r\n            {\r\n                setParentAlert(new AlertType('One or more fields have errors. Please correct them and try again.', \"error\"));\r\n                return;\r\n            }\r\n\r\n            let updateData = {\r\n                info: {\r\n                    name: userEdit.info.name,\r\n                    dateOfBirth: userEdit.info.dateOfBirth,\r\n                    currentAddress: {\r\n                        _id: userEdit.info.currentAddress._id,\r\n                        // street: userEdit.info.currentAddress.street || \"\",\r\n                        // city: userEdit.info.currentAddress.city || \"\",\r\n                        // code: userEdit.info.currentAddress.code || \"\",\r\n                        // state: userEdit.info.currentAddress.state || \"\",\r\n                        country: userEdit.info.currentAddress.country\r\n                    }\r\n                }\r\n            };\r\n\r\n            if(isGender2)\r\n            {\r\n                if(gender2 !== userEdit.info.gender)\r\n                {\r\n                    updateData = {\r\n                        ...updateData,\r\n                        info: {\r\n                            ...updateData.info,\r\n                            gender: gender2\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if(gender !== userEdit.info.gender)\r\n                {\r\n                    updateData = {\r\n                        ...updateData,\r\n                        info: {\r\n                            ...updateData.info,\r\n                            gender: gender\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            \r\n            if(isLanguage2)\r\n            {\r\n                if(language2 !== userEdit.info.language)\r\n                {\r\n                    updateData = {\r\n                        ...updateData,\r\n                        info: {\r\n                            ...updateData.info,\r\n                            language: language2\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if(language !== userEdit.info.language)\r\n                {\r\n                    updateData = {\r\n                        ...updateData,\r\n                        info: {\r\n                            ...updateData.info,\r\n                            language: language\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n\r\n            if(phone !== userEdit.info.phone)\r\n            {\r\n                updateData = {\r\n                    ...updateData,\r\n                    info: {\r\n                        ...updateData.info,\r\n                        phone: phone\r\n                    }\r\n                };\r\n            }\r\n\r\n            if(street !== userEdit.info.currentAddress.street)\r\n            {\r\n                updateData = {\r\n                    ...updateData,\r\n                    info: {\r\n                        ...updateData.info,\r\n                        currentAddress: {\r\n                            ...updateData.info.currentAddress,\r\n                            street: street\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            if(city !== userEdit.info.currentAddress.city)\r\n            {\r\n                updateData = {\r\n                    ...updateData,\r\n                    info: {\r\n                        ...updateData.info,\r\n                        currentAddress: {\r\n                            ...updateData.info.currentAddress,\r\n                            city: city\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            if(postalCode !== userEdit.info.currentAddress.code)\r\n            {\r\n                updateData = {\r\n                    ...updateData,\r\n                    info: {\r\n                        ...updateData.info,\r\n                        currentAddress: {\r\n                            ...updateData.info.currentAddress,\r\n                            code: postalCode\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            if(province !== userEdit.info.currentAddress.state)\r\n            {\r\n                updateData = {\r\n                    ...updateData,\r\n                    info: {\r\n                        ...updateData.info,\r\n                        currentAddress: {\r\n                            ...updateData.info.currentAddress,\r\n                            state: province\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            // console.log(updateData);\r\n    \r\n            if(userID != null)\r\n            {\r\n                patch(\"users/\" + userID, appState.token, updateData, (error, response) => \r\n                {\r\n                    if(error)\r\n                    {\r\n                        setParentAlert(new AlertType('Unable to save changes to User. Please refresh and try again.', \"error\"));\r\n                    }\r\n                    else\r\n                    {\r\n                        if(response.status === 200 || response.status === 304)\r\n                        {\r\n                            getParentInfo();\r\n                            resetInformationProperties();\r\n                            setParentAlert(new AlertType('Successfully saved changes to user.', \"success\"));\r\n                        }\r\n                        else\r\n                        {\r\n                            setParentAlert(new AlertType('Unable to save changes to User. Please refresh and try again.', \"error\"));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setParentAlert(new AlertType('Unable to save changes to User. Please refresh and try again.', \"error\"));\r\n            }\r\n            \r\n\r\n        }, [ appState, userID, userEdit, setParentAlert, getParentInfo,\r\n             nameError, genderError, gender2Error, dateOfBirthError, languageError, language2Error, phoneError, streetError, cityError, postalCodeError, provinceError, countryError,\r\n             gender, isGender2, gender2, language, isLanguage2, language2, phone, street, city, postalCode, province ]);\r\n\r\n    // Hooks ===\r\n            \r\n        useEffect( () => \r\n        {\r\n            setUserEdit(userOriginal);\r\n\r\n            if(userOriginal)\r\n            {\r\n\r\n                if(userOriginal.info.gender != \"Male\" && userOriginal.info.gender != \"Female\")\r\n                {\r\n                    setGender(\"NonBinary\");\r\n                }\r\n                else\r\n                {\r\n                    setGender(userOriginal.info.gender);\r\n                }\r\n\r\n                setGenderError(false);\r\n                \r\n                if(userOriginal.info.language != \"English\")\r\n                {\r\n                    setLanguage(\"Other\");\r\n                }\r\n                else\r\n                {\r\n                    setLanguage(userOriginal.info.language);             \r\n                }\r\n\r\n                setLanguageError(false);\r\n                \r\n                if(userOriginal.info && userOriginal.info.phone)\r\n                {\r\n                    setPhone(userOriginal.info.phone);\r\n                }\r\n                else\r\n                {\r\n                    setPhone(\"\");\r\n                }\r\n\r\n                setPhoneError(false);\r\n\r\n                if(userOriginal.info && userOriginal.info.currentAddress && userOriginal.info.currentAddress.street)\r\n                {\r\n                    setStreet(userOriginal.info.currentAddress.street);\r\n                }\r\n                else\r\n                {\r\n                    setStreet(\"\");\r\n                }\r\n\r\n                setStreetError(false);\r\n\r\n                if(userOriginal.info && userOriginal.info.currentAddress && userOriginal.info.currentAddress.city)\r\n                {\r\n                    setCity(userOriginal.info.currentAddress.city);\r\n                }\r\n                else\r\n                {\r\n                    setCity(\"\");\r\n                }\r\n\r\n                setCityError(false);\r\n\r\n                if(userOriginal.info && userOriginal.info.currentAddress && userOriginal.info.currentAddress.code)\r\n                {\r\n                    setPostalCode(userOriginal.info.currentAddress.code);\r\n                }\r\n                else\r\n                {\r\n                    setPostalCode(\"\");\r\n                }\r\n\r\n                setPostalCodeError(false);\r\n\r\n                if(userOriginal.info && userOriginal.info.currentAddress && userOriginal.info.currentAddress.state)\r\n                {\r\n                    setProvince(userOriginal.info.currentAddress.state);\r\n                }\r\n                else\r\n                {\r\n                    setProvince(\"\");\r\n                }\r\n\r\n                setProvinceError(false);\r\n\r\n                if(userOriginal.info && userOriginal.info.currentAddress && userOriginal.info.currentAddress.country)\r\n                {\r\n                    setCountry(userOriginal.info.currentAddress.country);\r\n                }\r\n                else\r\n                {\r\n                    setCountry(\"\");\r\n                }\r\n\r\n                setCountryError(false);\r\n\r\n            }\r\n\r\n        }, [ userOriginal ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(panelIndex !== panelId)\r\n            {\r\n                resetInformationProperties();\r\n            }\r\n\r\n        }, [ panelIndex, panelId, resetInformationProperties]);\r\n\r\n        useEffect( () => \r\n        {\r\n            if(JSON.stringify(userEdit) === JSON.stringify(userOriginal))\r\n            {\r\n                setChangedInformationProperties(false);\r\n            }\r\n            else\r\n            {\r\n                setChangedInformationProperties(true);\r\n            }\r\n          \r\n        }, [ userOriginal, userEdit, setChangedInformationProperties ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(gender == \"NonBinary\")\r\n            {\r\n                setIsGender2(true);\r\n\r\n                if(userOriginal && userOriginal.info)\r\n                {\r\n                    setGender2(userOriginal.info.gender);\r\n\r\n                    if(userOriginal.info.gender.length === 0)\r\n                    {\r\n                        setGender2Error(true);\r\n                    }\r\n                    else\r\n                    {\r\n                        setGender2Error(false);\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setIsGender2(false);\r\n                setGender2(\"\");\r\n                setGender2Error(false);\r\n            }\r\n        }, [ userOriginal, gender, setIsGender2, setGender2, setGender2Error ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(language == \"Other\")\r\n            {\r\n                setIsLanguage2(true);\r\n\r\n                if(userOriginal && userOriginal.info)\r\n                {\r\n                    setLanguage2(userOriginal.info.language);\r\n\r\n                    if(userOriginal.info.language.length === 0)\r\n                    {\r\n                        setLanguage2Error(true);\r\n                    }\r\n                    else\r\n                    {\r\n                        setLanguage2Error(false);\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setIsLanguage2(false);\r\n                setLanguage2(\"\");\r\n                setLanguage2Error(false);\r\n            }\r\n        }, [ userOriginal, language, setIsLanguage2, setLanguage2, setLanguage2Error ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(userEdit)\r\n            {\r\n                if(new Date(userEdit.info.dateOfBirth).toISOString().split('T')[0] > new Date().toISOString().split('T')[0])\r\n                {\r\n                    setDateOfBirthError(true);\r\n                }\r\n                else\r\n                {\r\n                    setDateOfBirthError(false);\r\n                }   \r\n            }\r\n            \r\n        }, [ userEdit, setDateOfBirthError ] );\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(userOriginal && userOriginal.info)\r\n            {\r\n                if(!isGender2)\r\n                {\r\n                    if(gender !== userOriginal.info.gender)\r\n                    {\r\n                        setChangedInformationProperties(true);\r\n                    }\r\n                    else\r\n                    {\r\n                        setChangedInformationProperties(false);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    if(gender2 !== userOriginal.info.gender)\r\n                    {\r\n                        setChangedInformationProperties(true);\r\n                    }\r\n                    else\r\n                    {\r\n                        setChangedInformationProperties(false);\r\n                    } \r\n                }\r\n            }\r\n        }, [ userOriginal, gender, isGender2, gender2, setChangedInformationProperties ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(userOriginal && userOriginal.info)\r\n            {\r\n                if(!isLanguage2)\r\n                {\r\n                    if(language !== userOriginal.info.language)\r\n                    {\r\n                        setChangedInformationProperties(true);\r\n                    }\r\n                    else\r\n                    {\r\n                        setChangedInformationProperties(false);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    if(isLanguage2 && language2 !== userOriginal.info.language)\r\n                    {\r\n                        setChangedInformationProperties(true);\r\n                    }\r\n                    else\r\n                    {\r\n                        setChangedInformationProperties(false);\r\n                    } \r\n                }\r\n            }\r\n        }, [ userOriginal, language, isLanguage2, language2, setChangedInformationProperties ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(userOriginal && userOriginal.info)\r\n            {\r\n                if(phone !== userOriginal.info.phone)\r\n                {\r\n                    if(phone.length === 0 && userOriginal.info.phone === undefined)\r\n                    {\r\n                        setChangedInformationProperties(false); \r\n                    }\r\n                    else\r\n                    {\r\n                        setChangedInformationProperties(true);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    setChangedInformationProperties(false); \r\n                }\r\n            }\r\n        }, [ phone, userOriginal, setChangedInformationProperties]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(userOriginal && userOriginal.info && userOriginal.info.currentAddress)\r\n            {\r\n                if(street !== userOriginal.info.currentAddress.street)\r\n                {\r\n                    if(street.length === 0 && userOriginal.info.currentAddress.street === undefined)\r\n                    {\r\n                        setChangedInformationProperties(false); \r\n                    }\r\n                    else\r\n                    {\r\n                        setChangedInformationProperties(true);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    setChangedInformationProperties(false); \r\n                }\r\n            }\r\n        }, [ street, userOriginal, setChangedInformationProperties]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(userOriginal && userOriginal.info && userOriginal.info.currentAddress)\r\n            {\r\n                if(city !== userOriginal.info.currentAddress.city)\r\n                {\r\n                    if(city.length === 0 && userOriginal.info.currentAddress.city === undefined)\r\n                    {\r\n                        setChangedInformationProperties(false); \r\n                    }\r\n                    else\r\n                    {\r\n                        setChangedInformationProperties(true);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    setChangedInformationProperties(false); \r\n                }\r\n            }\r\n        }, [ city, userOriginal, setChangedInformationProperties]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(userOriginal && userOriginal.info && userOriginal.info.currentAddress)\r\n            {\r\n                if(postalCode !== userOriginal.info.currentAddress.code)\r\n                {\r\n                    if(postalCode.length === 0 && userOriginal.info.currentAddress.code === undefined)\r\n                    {\r\n                        setChangedInformationProperties(false); \r\n                    }\r\n                    else\r\n                    {\r\n                        setChangedInformationProperties(true);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    setChangedInformationProperties(false); \r\n                }\r\n            }\r\n        }, [ postalCode, userOriginal, setChangedInformationProperties]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(userOriginal && userOriginal.info && userOriginal.info.currentAddress)\r\n            {\r\n                if(province !== userOriginal.info.currentAddress.state)\r\n                {\r\n                    if(province.length === 0 && userOriginal.info.currentAddress.state === undefined)\r\n                    {\r\n                        setChangedInformationProperties(false); \r\n                    }\r\n                    else\r\n                    {\r\n                        setChangedInformationProperties(true);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    setChangedInformationProperties(false); \r\n                }\r\n            }\r\n        }, [ province, userOriginal, setChangedInformationProperties]);\r\n\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            userOriginal != null? (\r\n                <div\r\n                    role=\"tabpanel\"\r\n                    hidden={panelIndex !== panelId}\r\n                    id={`Panel-${panelId}`}\r\n                >\r\n                    <Collapse in={panelIndex == panelId? true : false}>\r\n                        {userEdit? (\r\n                            <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justifyContent=\"flex-start\"\r\n                                alignItems=\"stretch\"\r\n                                spacing={1}\r\n                            >\r\n                                <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"h6\" component=\"h6\">\r\n                                            My Information\r\n                                        </Typography>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <Box mx={3} my={1} boxShadow={0}>\r\n                                            <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n                                                <Grid item>\r\n                                                    <Tooltip\r\n                                                        placement=\"bottom\"\r\n                                                        title=\"Unlock editable fields\"\r\n                                                    >\r\n                                                        <IconButton\r\n                                                            size=\"small\"\r\n                                                            color=\"primary\"\r\n                                                            onClick={() => { editablePropertiesHandler(); }}\r\n                                                        >\r\n                                                            {editable? (\r\n                                                                <LockOpenIcon />\r\n                                                            ) : (\r\n                                                                <LockIcon />\r\n                                                            )}\r\n                                                        </IconButton>\r\n                                                    </Tooltip> \r\n                                                </Grid>\r\n                                                <Grid item\r\n                                                    hidden={!editable}\r\n                                                >\r\n                                                    <Collapse in={editable}>\r\n                                                        <ButtonGroup color=\"primary\">\r\n                                                            <Button \r\n                                                                size=\"small\" \r\n                                                                variant=\"outlined\" \r\n                                                                color=\"default\"\r\n                                                                startIcon={<RefreshIcon />}\r\n                                                                onClick={() => { resetInformationProperties(); }}\r\n                                                            >\r\n                                                                Reset\r\n                                                            </Button>\r\n                                                            <Button \r\n                                                                size=\"small\" \r\n                                                                variant=\"outlined\" \r\n                                                                color=\"secondary\"\r\n                                                                disabled={!changedInformationProperties}\r\n                                                                startIcon={<SaveIcon />}\r\n                                                                onClick={() => { saveInformationProperties(); }}\r\n                                                            >\r\n                                                                Save\r\n                                                            </Button> \r\n                                                        </ButtonGroup>\r\n                                                    </Collapse>\r\n                                                </Grid>\r\n                                                <Grid item\r\n                                                    // hidden={!editable}\r\n                                                >\r\n                                                    <Collapse in={changedInformationProperties}>\r\n                                                        <Typography variant=\"caption\" color=\"textSecondary\" align=\"left\" gutterBottom>\r\n                                                            { changedInformationProperties? \"Changes have been made.\" : \"\" }\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Box>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Tooltip\r\n                                            placement=\"left\"\r\n                                            title=\"This page views user information.\"\r\n                                        >\r\n                                            <IconButton>\r\n                                                <HelpOutlineIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={3}>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"subtitle2\" component=\"h6\" color=\"textPrimary\">\r\n                                                    System Information\r\n                                                </Typography>\r\n                                                <Divider light/>\r\n                                            </Grid>        \r\n                                            <Grid item xs={1}>\r\n                                                <TextField id=\"Sequence-id\" size=\"small\" variant=\"outlined\" fullWidth label=\"Sequence ID\" readOnly disabled value={userEdit.sequence_id}/>\r\n                                            </Grid>\r\n                                            <Grid item xs={1}>\r\n                                                <TextField id=\"Sequence-prefix\" size=\"small\" variant=\"outlined\" fullWidth label=\"Facility Prefix\" readOnly disabled value={(userEdit.facilityId)? userEdit.facilityId.prefix : \"\"}/>\r\n                                            </Grid>\r\n                                            <Grid item xs={3}>\r\n                                                <TextField id=\"Facility-name\" size=\"small\" variant=\"outlined\" fullWidth label=\"Facility\" readOnly disabled value={(userEdit.facilityId)? userEdit.facilityId.name : \"\"}/>\r\n                                            </Grid>\r\n                                            <Grid item xs={7}></Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"subtitle2\" component=\"h6\" color=\"textPrimary\">\r\n                                                    General User Information\r\n                                                </Typography>\r\n                                                <Divider light/>\r\n                                            </Grid>     \r\n                                            <Grid item xs={5}>\r\n                                                <TextField id=\"Name\" required size=\"small\" variant=\"outlined\" fullWidth label=\"Name\" onChange={(event) => { nameHandler(event); }} value={userEdit.info.name} error={nameError}\r\n                                                    readOnly={editable? false : true}\r\n                                                    disabled={editable? false : true}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={7}></Grid>\r\n                                            <Grid item xs={1}>\r\n                                                <TextField\r\n                                                    id=\"Gender\"\r\n                                                    select\r\n                                                    required\r\n                                                    fullWidth\r\n                                                    label=\"Gender\"\r\n                                                    value={gender}\r\n                                                    onChange={(event) => { genderHandler(event); }}\r\n                                                    size=\"small\"\r\n                                                    variant=\"outlined\"\r\n                                                    readOnly={editable? false : true}\r\n                                                    disabled={editable? false : true}\r\n                                                >\r\n                                                    <MenuItem key={'Male'} value={'Male'}>Male</MenuItem>\r\n                                                    <MenuItem key={'Female'} value={'Female'}>Female</MenuItem>\r\n                                                    <MenuItem key={'NonBinary'} value={'NonBinary'}>Non-Binary</MenuItem>\r\n                                                </TextField>\r\n                                            </Grid>\r\n                                            <Grid item xs={1}>\r\n                                                <TextField id=\"Gender2\" fullWidth label=\"Specify Gender\" onChange={(event) => { gender2Handler(event); }} value={gender2} error={gender2Error}\r\n                                                    size=\"small\"\r\n                                                    variant=\"outlined\"\r\n                                                    required={isGender2}\r\n                                                    readOnly={!editable || !isGender2}\r\n                                                    disabled={!editable || !isGender2}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={10}></Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <TextField\r\n                                                    id=\"Date-Of-Birth\"\r\n                                                    fullWidth  \r\n                                                    label=\"Date of Birth\"\r\n                                                    type=\"date\"\r\n                                                    value={new Date(userEdit.info.dateOfBirth).toISOString().split('T')[0]}\r\n                                                    error={dateOfBirthError}\r\n                                                    onChange={(event) => { dateOfBirthHandler(event); }}\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true\r\n                                                    }}\r\n                                                    inputProps={\r\n                                                        {\r\n                                                            required: true,\r\n                                                            max: new Date().toISOString().split('T')[0]\r\n                                                        }\r\n                                                    }\r\n                                                    size=\"small\"\r\n                                                    variant=\"outlined\"\r\n                                                    required\r\n                                                    readOnly={editable? false : true}\r\n                                                    disabled={editable? false : true} \r\n                                                />\r\n                                            </Grid>\r\n                                            {/* <Grid item xs={1}>\r\n                                                <IconButton size=\"small\">\r\n                                                    <EditIcon />\r\n                                                </IconButton>\r\n                                            </Grid> */}\r\n                                            <Grid item xs={10}></Grid>\r\n                                            <Grid item xs={1}>\r\n                                                <TextField\r\n                                                    id=\"Language\"\r\n                                                    select\r\n                                                    required\r\n                                                    fullWidth\r\n                                                    label=\"Language\"\r\n                                                    value={language}\r\n                                                    onChange={(event) => { languageHandler(event); }}\r\n                                                    size=\"small\"\r\n                                                    variant=\"outlined\"\r\n                                                    readOnly={editable? false : true}\r\n                                                    disabled={editable? false : true}\r\n                                                >\r\n                                                    <MenuItem key={'English'} value={'English'}>English</MenuItem>\r\n                                                    <MenuItem key={'Other'} value={'Other'}>Other</MenuItem>\r\n                                                </TextField>\r\n                                            </Grid>\r\n                                            <Grid item xs={1}>\r\n                                                <TextField id=\"Language2\" fullWidth label=\"Specify Language\" onChange={(event) => { language2Handler(event); }} value={language2} error={language2Error}\r\n                                                    size=\"small\"\r\n                                                    variant=\"outlined\"\r\n                                                    required={isLanguage2}\r\n                                                    readOnly={!editable || !isLanguage2}\r\n                                                    disabled={!editable || !isLanguage2}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={10}></Grid>\r\n                                            {/* <Grid item xs={2}>\r\n                                                <TextField id=\"Language\" size=\"small\" variant=\"outlined\" fullWidth label=\"Language\" value={(userEdit.info)? userEdit.info.language : \"\"} error={languageError}\r\n                                                    readOnly={editable? false : true}\r\n                                                    disabled={editable? false : true} \r\n                                                />\r\n                                            </Grid> */}\r\n                                            {/* <Grid item xs={1}>\r\n                                                <IconButton size=\"small\">\r\n                                                    <EditIcon />\r\n                                                </IconButton>\r\n                                            </Grid> */}\r\n                                            <Grid item xs={10}></Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"subtitle2\" component=\"h6\" color=\"textPrimary\">\r\n                                                    User Contact Information\r\n                                                </Typography>\r\n                                                <Divider light/>\r\n                                            </Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <TextField id=\"Phone\" size=\"small\" variant=\"outlined\" fullWidth label=\"Phone\" onChange={(event) => { phoneHandler(event); }}\r\n                                                    value={phone} error={phoneError}\r\n                                                    readOnly={editable? false : true}\r\n                                                    disabled={editable? false : true} \r\n                                                />\r\n                                            </Grid>\r\n                                            {/* <Grid item xs={1}>\r\n                                                <IconButton size=\"small\">\r\n                                                    <EditIcon />\r\n                                                </IconButton>\r\n                                            </Grid> */}\r\n                                            <Grid item xs={10}></Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <TextField id=\"Street\" size=\"small\" variant=\"outlined\" fullWidth label=\"Street\" onChange={(event) => { streetHandler(event); }}\r\n                                                    value={street} error={streetError}\r\n                                                    readOnly={editable? false : true}\r\n                                                    disabled={editable? false : true} \r\n                                                />\r\n                                            </Grid>\r\n                                            {/* <Grid item xs={1}>\r\n                                                <IconButton size=\"small\">\r\n                                                    <EditIcon />\r\n                                                </IconButton>\r\n                                            </Grid> */}\r\n                                            <Grid item xs={10}></Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <TextField id=\"City\" size=\"small\" variant=\"outlined\" fullWidth label=\"City\" onChange={(event) => { cityHandler(event); }}\r\n                                                    value={city} error={cityError}\r\n                                                    readOnly={editable? false : true}\r\n                                                    disabled={editable? false : true} \r\n                                                />\r\n                                            </Grid>\r\n                                            {/* <Grid item xs={1}>\r\n                                                <IconButton size=\"small\">\r\n                                                    <EditIcon />\r\n                                                </IconButton>\r\n                                            </Grid> */}\r\n                                            <Grid item xs={10}></Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <TextField id=\"PostalCode\" size=\"small\" variant=\"outlined\" fullWidth label=\"Postal Code\" onChange={(event) => { postalCodeHandler(event); }}\r\n                                                    value={postalCode} error={postalCodeError}\r\n                                                    readOnly={editable? false : true}\r\n                                                    disabled={editable? false : true} \r\n                                                />\r\n                                            </Grid>\r\n                                            {/* <Grid item xs={1}>\r\n                                                <IconButton size=\"small\">\r\n                                                    <EditIcon />\r\n                                                </IconButton>\r\n                                            </Grid> */}\r\n                                            <Grid item xs={10}></Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <TextField\r\n                                                    id=\"Province\"\r\n                                                    select\r\n                                                    fullWidth\r\n                                                    label=\"Province\"\r\n                                                    value={province}\r\n                                                    onChange={(event) => { provinceHandler(event); }}\r\n                                                    size=\"small\"\r\n                                                    variant=\"outlined\"\r\n                                                    readOnly={editable? false : true}\r\n                                                    disabled={editable? false : true} \r\n                                                >\r\n                                                    <MenuItem key={'None'} value={''}>None</MenuItem>\r\n                                                    <MenuItem key={'AB'} value={'AB'}>Alberta</MenuItem>\r\n                                                    <MenuItem key={'BC'} value={'BC'}>British Columbia</MenuItem>\r\n                                                    <MenuItem key={'MB'} value={'MB'}>Manitoba</MenuItem>\r\n                                                    <MenuItem key={'NB'} value={'NB'}>New Brunswick</MenuItem>\r\n                                                    <MenuItem key={'NL'} value={'NL'}>Newfoundland and Labrador</MenuItem>\r\n                                                    <MenuItem key={'NT'} value={'NT'}>Northwest Territories</MenuItem>\r\n                                                    <MenuItem key={'NS'} value={'NS'}>Nova Scotia</MenuItem>\r\n                                                    <MenuItem key={'NU'} value={'NU'}>Nunavut</MenuItem>\r\n                                                    <MenuItem key={'ON'} value={'ON'}>Ontario</MenuItem>\r\n                                                    <MenuItem key={'PE'} value={'PE'}>Prince Edward Island</MenuItem>\r\n                                                    <MenuItem key={'QC'} value={'QC'}>Quebec</MenuItem>\r\n                                                    <MenuItem key={'SK'} value={'SK'}>Saskatchewan</MenuItem>\r\n                                                    <MenuItem key={'YT'} value={'YT'}>Yukon</MenuItem>\r\n                                                </TextField>\r\n                                            </Grid>\r\n                                            {/* <Grid item xs={1}>\r\n                                                <IconButton size=\"small\">\r\n                                                    <EditIcon />\r\n                                                </IconButton>\r\n                                            </Grid> */}\r\n                                            <Grid item xs={10}></Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <TextField id=\"Country\" size=\"small\" variant=\"outlined\" fullWidth label=\"Country\"\r\n                                                    value={country} error={countryError}\r\n                                                    required\r\n                                                    readOnly\r\n                                                    disabled={editable? false : true}\r\n                                                />\r\n                                            </Grid>\r\n                                            {/* <Grid item xs={1}>\r\n                                                <IconButton size=\"small\">\r\n                                                    <EditIcon />\r\n                                                </IconButton>\r\n                                            </Grid> */}\r\n                                            <Grid item xs={10}></Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        ) : (\r\n                            <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justifyContent=\"flex-start\"\r\n                                alignItems=\"stretch\"\r\n                                spacing={1}\r\n                            >\r\n                                <Grid item xs={12} container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1}>\r\n                                    <Grid item>\r\n                                        <Box mx={1} my={1} boxShadow={0}>\r\n                                            <CircularProgress />\r\n                                        </Box>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        )}\r\n                    </Collapse>\r\n                </div>   \r\n            ) : (\r\n                <>\r\n                </>\r\n                // <Typography variant=\"h6\" color=\"inherit\" align=\"center\" gutterBottom>\r\n                //     Not Authorized. Please refresh and try again.\r\n                // </Typography>\r\n            )\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nUserInformationTab.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    userID: PropTypes.string.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    getParentInfo: PropTypes.func.isRequired,\r\n    panelId: PropTypes.number.isRequired,\r\n    panelIndex: PropTypes.number.isRequired,\r\n    userOriginal: PropTypes.object\r\n}\r\n\r\nUserInformationTab.defaultProps = \r\n{\r\n    appState: {},\r\n    userID: null,\r\n    setParentAlert: () => {},\r\n    getParentInfo: () => {},\r\n    panelId: null,\r\n    panelIndex: null,\r\n    userOriginal: {}\r\n}\r\n\r\nexport default UserInformationTab;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Components ==================\r\n// import ChangesUserDialog from '../Dialog/ChangesUserDialog';\r\n\r\n// ==================== Helpers =====================\r\nimport patch from '../../../../../helpers/common/patch';\r\nimport AlertType from '../../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { TextField } from '@material-ui/core';\r\n\r\n// ==================== MUI Icons ====================\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\nconst backLink = \"/administration/users/management\";\r\nconst emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\nconst passwordRegex = /^.{4,}$/;\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst UserGeneralPropertiesTab = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, userID, setParentAlert, getParentInfo, panelId, panelIndex, userOriginal } = props;\r\n\r\n        const [userEdit, setUserEdit] = useState(null);\r\n\r\n        // Unlock editable fields\r\n        const [editable, setEditable] = useState(false);\r\n\r\n        const [changedGeneralProperties, setChangedGeneralProperties] = useState(false);\r\n\r\n        //  Editable Variables ==========\r\n\r\n            const [emailError, setEmailError] = useState(false);\r\n            \r\n            const [password, setPassword] = useState(\"\");\r\n            const [passwordError, setPasswordError] = useState(false);\r\n            \r\n            const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n            const [confirmPasswordError, setConfirmPasswordError] = useState(false);\r\n\r\n            const [role, setRole] = useState(\"\");\r\n\r\n            const [enabled, setEnabled] = useState(false);\r\n\r\n    // Functions ===\r\n\r\n        const enabledHandler = useCallback((event) => {\r\n\r\n            // setUserEdit({\r\n            //     ...userEdit,\r\n            //     enabled: event.target.checked\r\n            // });\r\n\r\n            setEnabled(event.target.checked);\r\n\r\n        }, [ setEnabled ]);\r\n\r\n        const editablePropertiesHandler = useCallback((event) => {\r\n\r\n            setEditable(!editable);\r\n\r\n            if(userOriginal)\r\n            {\r\n                setUserEdit({\r\n                ...userOriginal\r\n                });\r\n\r\n                setEmailError(false);\r\n                setPassword(\"\");\r\n                setPasswordError(false);\r\n                setConfirmPassword(\"\");\r\n                setConfirmPasswordError(false);\r\n\r\n                setRole(userOriginal.role);\r\n                setEnabled(userOriginal.enabled); \r\n            }\r\n\r\n        }, [ editable, setEditable, userOriginal, setEmailError, setPasswordError, setConfirmPasswordError, setRole, setEnabled ]);\r\n\r\n        const roleHandler = useCallback((event) => {\r\n\r\n            // setUserEdit({\r\n            //     ...userEdit,\r\n            //     role: event.target.value\r\n            // });\r\n\r\n            setRole(event.target.value);\r\n\r\n        }, [ setRole ]);\r\n\r\n        const emailHandler = useCallback((event) => \r\n        {\r\n            if(emailRegex.test(String(event.target.value)))\r\n            {\r\n                setEmailError(false);\r\n            }\r\n            else\r\n            {   \r\n                setEmailError(true);\r\n            }\r\n\r\n            setUserEdit({\r\n                ...userEdit,\r\n                email: event.target.value\r\n            });\r\n            \r\n        }, [ userEdit, setUserEdit, setEmailError, emailRegex ]);\r\n\r\n        const passwordHandler = useCallback((event) =>\r\n        {\r\n            if(passwordRegex.test(String(event.target.value)))\r\n            {\r\n                setPasswordError(false);\r\n            }\r\n            else\r\n            {   \r\n                setPasswordError(true);\r\n            }\r\n\r\n            setPassword(event.target.value);\r\n        }, [ setPassword, setPasswordError, passwordRegex ]);\r\n\r\n        const confirmPasswordHandler = useCallback((event) => \r\n        {\r\n            if(event.target.value != password)\r\n            {\r\n                setConfirmPasswordError(true);\r\n            }\r\n            else\r\n            {\r\n                setConfirmPasswordError(false);\r\n            }\r\n            \r\n            setConfirmPassword(event.target.value);\r\n\r\n        }, [ setConfirmPassword, password ]);\r\n\r\n        const resetGeneralProperties = useCallback((event) => \r\n        {\r\n            if(userOriginal)\r\n            {\r\n                setUserEdit({\r\n                ...userOriginal\r\n                });\r\n\r\n                setEmailError(false);\r\n                setPassword(\"\");\r\n                setPasswordError(false);\r\n                setConfirmPassword(\"\");\r\n                setConfirmPasswordError(false);\r\n\r\n                setRole(userOriginal.role);\r\n                setEnabled(userOriginal.enabled); \r\n            }\r\n\r\n        }, [ userOriginal, setUserEdit, setEmailError, setPassword, setPasswordError, setConfirmPassword, setConfirmPasswordError, setRole, setEnabled ]);\r\n\r\n        const saveGeneralProperties = useCallback((event) =>\r\n        {\r\n            if(emailError || passwordError || confirmPasswordError)\r\n            {\r\n                setParentAlert(new AlertType('One or more fields have errors. Please correct them and try again.', \"error\"));\r\n                return;\r\n            }\r\n\r\n            let updateData = {\r\n                email: userEdit.email,\r\n                role: role,\r\n                enabled: enabled,\r\n            };\r\n\r\n            if(password.length > 0 && confirmPassword.length > 0)\r\n            {\r\n                // Object.assign(updateData, {password: password});\r\n                updateData = { ...updateData, password: password };\r\n            }\r\n\r\n            // console.log(updateData);\r\n    \r\n            if(userID != null)\r\n            {\r\n                patch(\"users/\" + userID, appState.token, updateData, (error, response) => \r\n                {\r\n                    if(error)\r\n                    {\r\n                        setParentAlert(new AlertType('Unable to save changes to User. Please refresh and try again.', \"error\"));\r\n                    }\r\n                    else\r\n                    {\r\n                        if(response.status === 200 || response.status === 304)\r\n                        {\r\n                            getParentInfo();\r\n                            resetGeneralProperties();\r\n                            setParentAlert(new AlertType('Successfully saved changes to user.', \"success\"));\r\n                        }\r\n                        else\r\n                        {\r\n                            setParentAlert(new AlertType('Unable to save changes to User. Please refresh and try again.', \"error\"));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setParentAlert(new AlertType('Unable to save changes to User. Please refresh and try again.', \"error\"));\r\n            }\r\n            \r\n\r\n        }, [ appState, userID, emailError, passwordError, confirmPasswordError, userEdit, role, enabled, password, confirmPassword, setParentAlert, getParentInfo ] );\r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () => \r\n        {\r\n            if(userOriginal && Object.keys(userOriginal).length > 0 && Object.getPrototypeOf(userOriginal) === Object.prototype)\r\n            {\r\n               setUserEdit(userOriginal);\r\n\r\n               setRole(userOriginal.role);\r\n\r\n               setEnabled(userOriginal.enabled);\r\n            }\r\n\r\n        }, [ userOriginal ]);\r\n\r\n        useEffect( () => \r\n        {\r\n            if(userOriginal)\r\n            {\r\n                if(role !== userOriginal.role)\r\n                {\r\n                    setChangedGeneralProperties(true);\r\n                }\r\n                else\r\n                {\r\n                    setChangedGeneralProperties(false);\r\n                }\r\n            }\r\n\r\n        }, [ userOriginal, role ]);\r\n\r\n        useEffect( () => \r\n        {\r\n            if(userOriginal)\r\n            {\r\n                if(enabled !== userOriginal.enabled)\r\n                {\r\n                    setChangedGeneralProperties(true);\r\n                }\r\n                else\r\n                {\r\n                    setChangedGeneralProperties(false);\r\n                }\r\n            }\r\n\r\n        }, [ userOriginal, enabled ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(panelIndex !== panelId)\r\n            {\r\n                resetGeneralProperties();\r\n            }\r\n\r\n        }, [ panelIndex, panelId, resetGeneralProperties]);\r\n\r\n        useEffect( () => \r\n        {\r\n            if(JSON.stringify(userEdit) === JSON.stringify(userOriginal))\r\n            {\r\n                setChangedGeneralProperties(false);\r\n            }\r\n            else\r\n            {\r\n                setChangedGeneralProperties(true);\r\n            }\r\n          \r\n        }, [ userOriginal, userEdit, setChangedGeneralProperties ]);\r\n\r\n        useEffect( () => \r\n        {\r\n            if((password.length > 0 && confirmPassword.length > 0) &&\r\n                (password === confirmPassword) && (!passwordError && !confirmPasswordError))\r\n            {\r\n                setChangedGeneralProperties(true);\r\n            }\r\n\r\n        }, [ password, confirmPassword, passwordError, confirmPasswordError, setChangedGeneralProperties ]);\r\n\r\n        useEffect( () => \r\n        {\r\n            if(password.length === 0)\r\n            {\r\n                setConfirmPasswordError(false);\r\n            }\r\n            else if(password.length > 0)\r\n            {\r\n                if(confirmPassword.length === 0)\r\n                {\r\n                    setConfirmPasswordError(true);\r\n                }\r\n                else if(confirmPassword.length > 0)\r\n                {\r\n                    if(password === confirmPassword)\r\n                    {\r\n                        // Technically should check if valid password specifications as well\r\n                        setConfirmPasswordError(false);\r\n                    }\r\n                    else\r\n                    {\r\n                        setConfirmPasswordError(true);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }, [ password, confirmPassword, setConfirmPasswordError ]);\r\n\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            userOriginal != null? (\r\n                <div\r\n                    role=\"tabpanel\"\r\n                    hidden={panelIndex !== panelId}\r\n                    id={`Panel-${panelId}`}\r\n                >\r\n                    <Collapse in={panelIndex == panelId? true : false}>\r\n                        {userEdit? (\r\n                            <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justifyContent=\"flex-start\"\r\n                                alignItems=\"stretch\"\r\n                                spacing={1}\r\n                            >\r\n                                <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"h6\" component=\"h6\">\r\n                                            General Properties\r\n                                        </Typography>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <Box mx={3} my={1} boxShadow={0}>\r\n                                            <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n                                                <Grid item>\r\n                                                    <Tooltip\r\n                                                        placement=\"bottom\"\r\n                                                        title=\"Unlock editable fields\"\r\n                                                    >\r\n                                                        <IconButton\r\n                                                            size=\"small\"\r\n                                                            color=\"primary\"\r\n                                                            onClick={() => { editablePropertiesHandler(); }}\r\n                                                        >\r\n                                                            {editable? (\r\n                                                                <LockOpenIcon />\r\n                                                            ) : (\r\n                                                                <LockIcon />\r\n                                                            )}\r\n                                                        </IconButton>\r\n                                                    </Tooltip> \r\n                                                </Grid>\r\n                                                <Grid item\r\n                                                    hidden={!editable}\r\n                                                >\r\n                                                    <Collapse in={editable}>\r\n                                                        <ButtonGroup color=\"primary\">\r\n                                                            <Button \r\n                                                                size=\"small\" \r\n                                                                variant=\"outlined\" \r\n                                                                color=\"default\"\r\n                                                                //  disabled={!changedGeneralProperties}\r\n                                                                startIcon={<RefreshIcon />}\r\n                                                                onClick={() => { resetGeneralProperties(); }}\r\n                                                            >\r\n                                                                Reset\r\n                                                            </Button>\r\n                                                            <Button \r\n                                                                size=\"small\" \r\n                                                                variant=\"outlined\" \r\n                                                                color=\"secondary\"\r\n                                                                disabled={!changedGeneralProperties}\r\n                                                                startIcon={<SaveIcon />}\r\n                                                                onClick={() => { saveGeneralProperties(); }}\r\n                                                            >\r\n                                                                Save\r\n                                                            </Button> \r\n                                                        </ButtonGroup>\r\n                                                    </Collapse>\r\n                                                </Grid>\r\n                                                <Grid item\r\n                                                    // hidden={!editable}\r\n                                                >\r\n                                                    <Collapse in={changedGeneralProperties}>\r\n                                                        <Typography variant=\"caption\" color=\"textSecondary\" align=\"left\" gutterBottom>\r\n                                                            { changedGeneralProperties? \"Changes have been made.\" : \"\" }\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Box>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Tooltip\r\n                                            placement=\"left\"\r\n                                            title=\"This page views user properties.\"\r\n                                        >\r\n                                            <IconButton>\r\n                                                <HelpOutlineIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={3}>\r\n\r\n                                            <Grid item xs></Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"subtitle2\" component=\"h6\" color=\"textPrimary\">\r\n                                                    Login Properties\r\n                                                </Typography>\r\n                                                <Divider light/>\r\n                                            </Grid>\r\n                                            <Grid item xs={4}>\r\n                                                <TextField id=\"Email\" size=\"small\" variant=\"outlined\" fullWidth label=\"Email\" required onChange={(event) => { emailHandler(event); }} value={userEdit.email} error={emailError}\r\n                                                    readOnly={editable? false : true}\r\n                                                    disabled={editable? false : true}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={8}></Grid>\r\n                                            <Grid item xs={4}>\r\n                                                <TextField id=\"New-Password\" size=\"small\" variant=\"outlined\" fullWidth type=\"password\" label=\"New Password\" required onChange={(event) => { passwordHandler(event); }} value={password} error={passwordError}\r\n                                                    readOnly={editable? false : true}\r\n                                                    disabled={editable? false : true}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={8}></Grid>\r\n                                            <Grid item xs={4}>\r\n                                                <TextField id=\"Confirm-New-Password\" size=\"small\" variant=\"outlined\" fullWidth type=\"password\" label=\"Confirm Password\" required onChange={(event) => { confirmPasswordHandler(event); }} value={confirmPassword} error={confirmPasswordError}\r\n                                                    readOnly={editable? false : true}\r\n                                                    disabled={editable? false : true} \r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        ) : (\r\n                            <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justifyContent=\"flex-start\"\r\n                                alignItems=\"stretch\"\r\n                                spacing={1}\r\n                            >\r\n                                <Grid item xs={12} container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1}>\r\n                                    <Grid item>\r\n                                        <Box mx={1} my={1} boxShadow={0}>\r\n                                            <CircularProgress />\r\n                                        </Box>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        )}\r\n                    </Collapse>\r\n                </div>   \r\n            ) : (\r\n                <>\r\n                </>\r\n                // <Typography variant=\"h6\" color=\"inherit\" align=\"center\" gutterBottom>\r\n                //     Not Authorized. Please refresh and try again.\r\n                // </Typography>\r\n            )\r\n            \r\n        );\r\n}\r\n\r\n\r\n// ======================== Component PropType Check ========================\r\nUserGeneralPropertiesTab.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    userID: PropTypes.string.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    getParentInfo: PropTypes.func.isRequired,\r\n    panelId: PropTypes.number.isRequired,\r\n    panelIndex: PropTypes.number.isRequired,\r\n    userOriginal: PropTypes.object\r\n}\r\n\r\nUserGeneralPropertiesTab.defaultProps = \r\n{\r\n    appState: {},\r\n    userID: null,\r\n    setParentAlert: () => {},\r\n    getParentInfo: () => {},\r\n    panelId: null,\r\n    panelIndex: null,\r\n    userOriginal: {}\r\n}\r\n\r\nexport default UserGeneralPropertiesTab;  // You can even shorthand this line by adding this at the function [Component] declaration stage\r\n\r\n// ======================== System Properties ========================\r\n/*\r\n\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"subtitle2\" component=\"h6\" color=\"textPrimary\">\r\n                                                    System Properties\r\n                                                </Typography>\r\n                                                <Divider light/>\r\n                                            </Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <TextField label=\"User ID\"\r\n                                                    disabled\r\n                                                    size=\"small\"\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    value={userEdit._id}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <TextField label=\"Updated\"\r\n                                                    disabled\r\n                                                    size=\"small\"\r\n                                                    fullWidth\r\n                                                    variant=\"outlined\"\r\n                                                    value={new Date(userEdit.updatedAt).toLocaleString()}\r\n                                                    InputProps={{\r\n                                                        readOnly: true,\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={2}>\r\n                                                <TextField label=\"Created\"\r\n                                                    disabled\r\n                                                    size=\"small\"\r\n                                                    fullWidth\r\n                                                    variant=\"outlined\" \r\n                                                    value={new Date(userEdit.createdAt).toLocaleString()}\r\n                                                    InputProps={{\r\n                                                        readOnly: true,\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                            {userEdit.role? (\r\n                                                <Grid item xs={2}>\r\n                                                <TextField\r\n                                                    id=\"Role\"\r\n                                                    select\r\n                                                    required\r\n                                                    fullWidth\r\n                                                    label=\"Role\"\r\n                                                    value={role}\r\n                                                    readOnly={editable? false : true}\r\n                                                    disabled={editable? false : true}\r\n                                                    onChange={(event) => { roleHandler(event); }}\r\n                                                    variant=\"outlined\"\r\n                                                    size=\"small\"\r\n                                                >\r\n                                                        <MenuItem key={'Admin'} value={'Admin'}>Admin</MenuItem>\r\n                                                        <MenuItem key={'Coordinator'} value={'Coordinator'}>Coordinator</MenuItem>\r\n                                                        <MenuItem key={'Volunteer'} value={'Volunteer'}>Volunteer</MenuItem>\r\n                                                        <MenuItem key={'Patient'} value={'Patient'}>Patient</MenuItem>\r\n                                                </TextField>\r\n                                            </Grid>\r\n                                            ) : (\r\n                                                <>\r\n                                                </>\r\n                                            )}\r\n                                            {userEdit.enabled? (\r\n                                                <Grid item xs={2}>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                        <Switch\r\n                                                            checked={enabled}\r\n                                                            onChange={(event) => { enabledHandler(event); } }\r\n                                                            color=\"primary\"\r\n                                                            disabled={editable? false : true}\r\n                                                        />\r\n                                                        }\r\n                                                        label=\"Enabled\"\r\n                                                    />\r\n                                                </Grid>\r\n                                            ) : (\r\n                                                <>\r\n                                                </>\r\n                                            )}\r\n\r\n*/","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Helpers =====================\r\nimport get from  '../../../../helpers/common/get';\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\n// ==================== Components ==================\r\nimport AlertMessage from '../../../../components/AlertMessage';\r\n\r\nimport ChangesUserDialog from '../Dialog/ChangesUserDialog';\r\n\r\nimport UserCollectionsTab from '../Components/UserCollectionsTab/UserCollectionsTab';\r\nimport UserCommunityTab from '../Components/UserCommunityTab/UserCommunityTab';\r\nimport UserNotesTab from '../Components/UserNotesTab/UserNotesTab';\r\nimport UserInformationTab from '../Components/UserInformationTab/UserInformationTab';\r\nimport UserGeneralPropertiesTab from '../Components/UserGeneralPropertiesTab/UserGeneralPropertiesTab';\r\n\r\nimport LinearProgressWithLabel from '../Components/LinearProgressWithLabel/LinearProgressWithLabel';\r\nimport CircularProgressWithLabel from '../Components/CircularProgressWithLabel/CircularProgressWithLabel';\r\n\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { TextField } from '@material-ui/core';\r\n\r\n// ==================== MUI Icons ====================\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\n\r\n// ================= Static Variables ================\r\nconst editUserBaseLink = \"/administration/booklets/\";\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\nconst backLink = \"/administration/users/management\";\r\nconst emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n \r\n// const surveyOptions = {\r\n\r\n// };\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst ViewUser = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, userID, ToggleDrawerClose, CheckAuthenticationValidity } = props;\r\n\r\n        const [userOriginal, setUserOriginal] = useState(null);\r\n\r\n        const [userEdit, setUserEdit] = useState(null);\r\n\r\n        // Alert variable\r\n        const [alert, setAlert] = useState(new AlertType());\r\n\r\n        // Panel Control Variable\r\n        const [panelIndex, setPanelIndex] = useState(0);\r\n\r\n        // To be Panel Control Variable\r\n        const [toBePanelIndex, setToBePanelIndex] = useState(0);\r\n\r\n        //  Dialog Variables =====================================\r\n\r\n            // changes User Dialog Logic variables\r\n            const [changesUserDialog, setChangesUserDialog] = useState(false);\r\n            const [changesUserDialogExecuting, setChangesUserDialogExecuting] = useState(false);\r\n\r\n\r\n        //  Editable Variables ==========\r\n\r\n    // Functions ===\r\n\r\n        // Loads existing user chosen by user from the database\r\n        const getUser = useCallback(() =>\r\n        {\r\n            if(userID != null)\r\n            {\r\n                get(\"users/\" + userID, appState.token, (error, response) => \r\n                {\r\n                    if(error)\r\n                    {\r\n                        setAlert(new AlertType('Unable to retrieve User. Please refresh and try again.', \"error\"));\r\n                    }\r\n                    else\r\n                    {\r\n                        if(response.status === 200 || response.status === 304)\r\n                        {\r\n                            setUserOriginal(response.data.user);\r\n                            // setAlert(new AlertType('Successfully pulled user.', \"success\"));\r\n                        }\r\n                        else\r\n                        {\r\n                            setAlert(new AlertType('Unable to retrieve User. Please refresh and try again.', \"error\"));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setAlert(new AlertType('Unable to retrieve User. Please refresh and try again.', \"error\"));\r\n            }\r\n        }, [ userID, appState ]);\r\n\r\n        const panelHandler = useCallback((event, newValue) => {\r\n\r\n            setToBePanelIndex(newValue);\r\n\r\n            if(JSON.stringify(userEdit) === JSON.stringify(userOriginal))\r\n            {\r\n                setPanelIndex(newValue);\r\n            }\r\n            else\r\n            {\r\n                setChangesUserDialog(true);\r\n            }\r\n\r\n        }, [ userEdit, userOriginal, setToBePanelIndex, setPanelIndex, setChangesUserDialog ]);\r\n\r\n    // Hooks ===\r\n\r\n        // First Render only because of the [ ] empty array tracking with the useEffect\r\n        useEffect( () =>\r\n        {\r\n            ToggleDrawerClose();\r\n            setTimeout(() => {\r\n                CheckAuthenticationValidity( (tokenValid) => \r\n                {\r\n                    if(tokenValid)\r\n                    {\r\n                        // Load or Do Something\r\n                        getUser();\r\n                    }\r\n                    else {\r\n\r\n                        // Bad Response\r\n                        setAlert(null);\r\n                    }\r\n                });\r\n            }, 200);    //\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ ]);\r\n\r\n        useEffect(() => {\r\n\r\n            if(userID)\r\n            {\r\n                getUser();\r\n                setPanelIndex(0);\r\n            }\r\n            \r\n        }, [ userID ]);\r\n\r\n        useEffect( () => \r\n        {\r\n            setUserEdit(userOriginal);\r\n        }, [ userOriginal ]);\r\n\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            alert != null? (\r\n\r\n                // Notice the shorthand React render Fragment <> & </> instead of <div> & </div>, both work the same\r\n                <div className={classes.root}>\r\n                    <Grid container\r\n                    className={classes.rootGrid}\r\n                    direction=\"row\"\r\n                    justifyContent=\"flex-start\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={1}\r\n                    >\r\n                        <Grid item xs={5}>\r\n                            <Box mx={1} my={1}>\r\n                                <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                    {/* {appState._id !== userID? (\r\n                                        <Grid item>\r\n                                            <IconButton component={Link} to={backLink}>\r\n                                                <ArrowBackIosIcon />\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                    ) : (\r\n                                        <>\r\n                                        </>\r\n                                    )} */}\r\n                                    <Grid item xs>\r\n                                        {appState._id === userID? (\r\n                                            <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-end\" spacing={2}>\r\n                                                <Grid item>\r\n                                                    <AccountBoxIcon color=\"primary\"/>\r\n                                                </Grid>\r\n                                                <Grid item xs>\r\n                                                    <Typography variant=\"h5\" color=\"secondary\" align=\"left\" gutterBottom={false}>\r\n                                                        Your Profile\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        ) : (\r\n                                            <Typography variant=\"h5\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                                                Viewing User {userOriginal? `\"${userOriginal.info.name}\"` : null}\r\n                                            </Typography>\r\n                                        )}\r\n                                        \r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box> \r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Box mx={1} my={1}>\r\n                                <AlertMessage alert={alert} setParentAlert={setAlert} />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Card raised={true}>\r\n                                <AppBar position=\"static\" disabled={userEdit? false : true}>\r\n                                    {\r\n                                    <Tabs value={panelIndex} onChange={(event, newValue) => { panelHandler(event, newValue); } } aria-label=\"Account Tabs\">\r\n                                        {/* <Tab label=\"Collections\"  id={`Tab-${0}`} aria-controls={`Tab-${0}`} /> */}\r\n                                        <Tab label=\"Community\"  id={`Tab-${0}`} aria-controls={`Tab-${0}`} />\r\n                                        <Tab label=\"Notes\" id={`Tab-${1}`} aria-controls={`Tab-${1}`} />\r\n                                        <Tab label=\"Information\" id={`Tab-${2}`} aria-controls={`Tab-${2}`} />\r\n                                        <Tab label=\"Properties\" id={`Tab-${3}`} aria-controls={`Tab-${3}`} />\r\n                                    </Tabs>\r\n                                    }\r\n                                </AppBar>\r\n                                <Box mx={2} my={1} boxShadow={0}>\r\n                                    {\r\n                                        <>\r\n                                            {/* <UserCollectionsTab\r\n                                                appState={appState}\r\n                                                userID={userID}\r\n                                                setParentAlert={setAlert}\r\n                                                panelId={0}\r\n                                                panelIndex={panelIndex}\r\n                                                userOriginal={userOriginal}\r\n                                            /> */}\r\n                                            <UserCommunityTab\r\n                                                appState={appState}\r\n                                                userID={userID}\r\n                                                setParentAlert={setAlert}\r\n                                                getParentInfo={getUser}\r\n                                                panelId={0}\r\n                                                panelIndex={panelIndex}\r\n                                                userOriginal={userOriginal}\r\n                                            />\r\n                                            <UserNotesTab\r\n                                                appState={appState}\r\n                                                userID={userID}\r\n                                                setParentAlert={setAlert}\r\n                                                getParentInfo={getUser}\r\n                                                panelId={1}\r\n                                                panelIndex={panelIndex}\r\n                                                userOriginal={userOriginal}\r\n                                            />\r\n                                            <UserInformationTab\r\n                                                appState={appState}\r\n                                                userID={userID}\r\n                                                setParentAlert={setAlert}\r\n                                                getParentInfo={getUser}\r\n                                                panelId={2}\r\n                                                panelIndex={panelIndex}\r\n                                                userOriginal={userOriginal}\r\n                                            />\r\n                                            <UserGeneralPropertiesTab\r\n                                                appState={appState}\r\n                                                userID={userID}\r\n                                                setParentAlert={setAlert}\r\n                                                getParentInfo={getUser}\r\n                                                panelId={3}\r\n                                                panelIndex={panelIndex}\r\n                                                userOriginal={userOriginal}\r\n                                            />\r\n                                        </>\r\n                                    }\r\n                                </Box>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <ChangesUserDialog\r\n                        changesUserDialog={changesUserDialog}\r\n                        setChangesUserDialog={setChangesUserDialog}\r\n                        changesUserDialogExecuting={changesUserDialogExecuting}\r\n                        setChangesUserDialogExecuting={setChangesUserDialogExecuting}\r\n                        toBePanelIndex={toBePanelIndex}\r\n                        setPanelIndex={setPanelIndex}\r\n                        user={userEdit}\r\n                        setParentAlert={setAlert}\r\n                        getParentData={getUser}\r\n                        appState={appState}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <Typography variant=\"h6\" color=\"inherit\" align=\"center\" gutterBottom>\r\n                    Not Authorized. Please refresh and try again.\r\n                </Typography>\r\n            )\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nViewUser.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    userID: PropTypes.string.isRequired,\r\n    ToggleDrawerClose: PropTypes.func.isRequired,\r\n    CheckAuthenticationValidity: PropTypes.func.isRequired\r\n}\r\n\r\nViewUser.defaultProps = \r\n{\r\n    appState: {},\r\n    userID: {},\r\n    ToggleDrawerClose: () => {},\r\n    CheckAuthenticationValidity: () => {}\r\n}\r\n\r\nexport default ViewUser;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with allowing the editing of\r\n// profile information, such as address, phone number,\r\n// etc. and updated into the database.\r\n// ================================================\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// ==================== Helpers ====================\r\nimport get from '../../../helpers/common/get';\r\nimport patch from '../../../helpers/common/patch';\r\n\r\n// ==================== Components ====================\r\nimport TextInput from '../../../components/TextInput';\r\nimport StatusMessage from '../../../components/StatusMessage';\r\n\r\n// ==================== MUI ====================\r\nimport { Button, Card, Grid, CardContent, CardActions, Typography, CircularProgress } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// ==================== Icons ====================\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport LeftArrow from '@material-ui/icons/ArrowLeft';\r\n\r\n\r\nconst styles = theme => ({\r\n    title: theme.title,\r\n    error: theme.error,\r\n    success: theme.success,\r\n    alignLeftSpacer: theme.alignLeftSpacer,\r\n    spinner: theme.spinner,\r\n    rightIcon: theme.rightIcon\r\n});\r\n\r\nclass EditPerson extends Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            profileID: \"\",\r\n            error: \"\",\r\n            success: \"\",\r\n            name: \"\",\r\n            email: \"\",\r\n            role: \"\",\r\n            phone: \"\",\r\n            saving: false,\r\n            render: false\r\n        };\r\n    }\r\n    \r\n    componentDidMount = () =>\r\n    {\r\n        const profileID = this.props.match.params.profileID;\r\n        this.user = {};\r\n\r\n        if(profileID != null)\r\n        {\r\n            this.setState({\r\n                profileID: profileID\r\n            }, () => {setTimeout(() => {\r\n                this.props.ToggleDrawerClose();\r\n                this.props.CheckAuthenticationValidity((tokenValid) => \r\n                {\r\n                    if(tokenValid)\r\n                    {\r\n                        this.loadUserInformation();\r\n                    }\r\n                });\r\n            }, 200)});\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                error: \"Please navigate to a proper profile id.\",\r\n                render: true\r\n            });\r\n        }\r\n    }\r\n\r\n    loadUserInformation = () =>\r\n    {\r\n        let { profileID } = this.state;\r\n        let { appState } = this.props;\r\n\r\n        get(\"users/\" + profileID, appState.token, (userError, userResponse) => \r\n        {\r\n            if(userError)\r\n            {\r\n                this.setState({\r\n                    error: \"Unable to load profile.\",\r\n                    render: true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(userResponse.status === 200 || userResponse.status === 304)\r\n                {\r\n                    this.user = userResponse.data;                    \r\n                    let user = this.user.user;\r\n\r\n                    this.setState({\r\n                        error: \"\",\r\n                        email: user.email,\r\n                        name: user.info.name,\r\n                        phone: user.info.phone,\r\n                        render: true\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        error: \"Unable to load profile.  Please make sure your User ID is correct and you have proper permissions.\",\r\n                        render: true\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    saveUserInformation = () =>\r\n    {\r\n        let { email, name, phone, profileID } = this.state;\r\n        let { appState } = this.props;\r\n\r\n        if(email === \"\" || name === \"\" || phone === \"\")\r\n        {\r\n            this.setState({\r\n                error: \"Please ensure all fields are filled out\",\r\n                success: \"\"\r\n            });\r\n\r\n            return;\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                error: \"\",\r\n                success: \"\"\r\n            });\r\n        }\r\n\r\n        var data = {\r\n            email: email,\r\n            info: {\r\n                name: name,\r\n                phone: phone\r\n            }\r\n        };\r\n\r\n        patch(\"users/\" + profileID, appState.token, data, (userError, userResponse) => \r\n        {\r\n            if(userError)\r\n            {\r\n                this.setState({\r\n                    error: \"Unable to save profile.\",\r\n                    success: \"\",\r\n                    render: true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(userResponse.status === 200 || userResponse.status === 304)\r\n                {\r\n                    this.user = userResponse.data;                    \r\n                    let user = this.user.user;\r\n\r\n                    this.setState({\r\n                        error: \"\",\r\n                        success: \"User profile information saved.\",\r\n                        email: user.email || \"\",\r\n                        name: user.info.name || \"\",\r\n                        phone: user.info.phone || \"\",\r\n                        render: true\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        error: \"Unable to load profile.  Please make sure your User ID is correct and you have proper permissions.\",\r\n                        success: \"\",\r\n                        render: true\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    HandleChange = event => \r\n    {\r\n        this.setState({ \r\n            [event.target.name]: event.target.value \r\n        });\r\n    };\r\n\r\n    renderForm = () =>\r\n    {\r\n        let { email, name, phone } = this.state;\r\n\r\n        return(\r\n            <Grid container spacing={10}>\r\n                <Grid item xs={12}>\r\n                    <TextInput id=\"email\" fullWidth label=\"Email\" onChange={this.HandleChange} value={email}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextInput id=\"name\" fullWidth label=\"Name\" onChange={this.HandleChange} value={name}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextInput id=\"phone\" fullWidth label=\"Phone\" onChange={this.HandleChange} value={phone}/>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    render() \r\n    {\r\n        let { classes } = this.props;\r\n        let { error, render, saving, success } = this.state;\r\n\r\n        if(render)\r\n        {\r\n            return (\r\n                <Grid container spacing={10} align=\"center\" justifyContent=\"center\">\r\n                    <Grid item xs={12} sm={10} md={8} lg={6} xl={4}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" className={classes.title}>\r\n                                    Edit User Profile\r\n                                </Typography>\r\n                                {error !== \"\" &&\r\n                                    <StatusMessage color={classes.error}>\r\n                                        {error}\r\n                                    </StatusMessage>\r\n                                }\r\n                                {success !== \"\" &&\r\n                                    <StatusMessage color={classes.success}>\r\n                                        {success}\r\n                                    </StatusMessage>\r\n                                }\r\n                                {this.renderForm()}\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <div className={classes.alignLeftSpacer}>\r\n                                    <Button \r\n                                        size=\"small\" \r\n                                        variant=\"contained\" \r\n                                        color=\"default\" \r\n                                        component={Link} \r\n                                        to=\"/administration/users/management\"\r\n                                        style={{ margin: 5 }}\r\n                                    >\r\n                                    <LeftArrow className={classes.rightIcon} />\r\n                                        Back To Management Index\r\n                                    </Button>\r\n                                    { saving ? \r\n                                        <CircularProgress className={classes.spinner}/> \r\n                                    :\r\n                                        <Button \r\n                                            size=\"small\" \r\n                                            variant=\"contained\" \r\n                                            color=\"secondary\"\r\n                                            onClick={this.saveUserInformation}\r\n                                        >\r\n                                            Save User Profile\r\n                                            <FaceIcon className={classes.rightIcon}>send</FaceIcon>\r\n                                        </Button>\r\n                                    }\r\n                                </div>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return( <CircularProgress /> );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(EditPerson);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// ==================== Helpers ====================\r\nimport get from '../../../helpers/common/get';\r\nimport patch from '../../../helpers/common/patch';\r\n\r\n// ==================== Components ====================\r\nimport StatusMessage from '../../../components/StatusMessage';\r\n\r\n// ==================== MUI ====================\r\nimport { Button, Card, Grid, CardContent, CardActions, Typography, CircularProgress } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// ==================== Icons ====================\r\nimport LeftArrow from '@material-ui/icons/ArrowLeft';\r\n\r\nconst styles = theme => ({\r\n    title: theme.title,\r\n    error: theme.error,\r\n    success: theme.success,\r\n    alignLeftSpacer: theme.alignLeftSpacer,\r\n    spinner: theme.spinner,\r\n    rightIcon: theme.rightIcon\r\n});\r\n\r\nclass EnableDisablePerson extends Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            profileID: \"\",\r\n            name: \"\",\r\n            error: \"\",\r\n            success: \"\",\r\n            enabled: true,\r\n            render: false\r\n        };\r\n    }\r\n    \r\n    componentDidMount = () =>\r\n    {\r\n        const profileID = this.props.match.params.profileID;\r\n        this.user = {};\r\n\r\n        if(profileID != null)\r\n        {\r\n            this.setState({\r\n                profileID: profileID\r\n            }, () => {setTimeout(() => {\r\n                this.props.ToggleDrawerClose();\r\n                this.props.CheckAuthenticationValidity((tokenValid) => \r\n                {\r\n                    if(tokenValid)\r\n                    {\r\n                        this.loadUserInformation();\r\n                    }\r\n                });\r\n            }, 200)});\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                error: \"Please navigate to a proper profile id.\",\r\n                render: true\r\n            });\r\n        }\r\n    }\r\n\r\n    loadUserInformation = () =>\r\n    {\r\n        let { profileID } = this.state;\r\n        let { appState } = this.props;\r\n\r\n        get(\"users/\" + profileID, appState.token, (userError, userResponse) => \r\n        {\r\n            if(userError)\r\n            {\r\n                this.setState({\r\n                    error: \"Unable to load profile.\",\r\n                    render: true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(userResponse.status === 200 || userResponse.status === 304)\r\n                {\r\n                    this.user = userResponse.data;                    \r\n                    let user = this.user.user;\r\n\r\n                    this.setState({\r\n                        error: \"\",\r\n                        enabled: user.enabled,\r\n                        name: user.info.name,\r\n                        render: true\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        error: \"Unable to load profile.  Please make sure your User ID is correct and you have proper permissions.\",\r\n                        render: true\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    saveUserInformation = () =>\r\n    {\r\n        let { enabled, profileID } = this.state;\r\n        let { appState } = this.props;\r\n\r\n        var data = {\r\n            enabled: !enabled\r\n        };\r\n\r\n        patch(\"users/\" + profileID, appState.token, data, (userError, userResponse) => \r\n        {\r\n            if(userError)\r\n            {\r\n                this.setState({\r\n                    error: \"-\",\r\n                    success: \"\",\r\n                    render: true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(userResponse.status === 200 || userResponse.status === 304)\r\n                {\r\n                    this.user = userResponse.data;                    \r\n                    let user = this.user.user;\r\n\r\n                    this.setState({\r\n                        error: \"\",\r\n                        enabled: user.enabled,\r\n                        success: \"This users account status has been succesfully changed.\",\r\n                        render: true\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        error: \"Unable to load profile.  Please make sure your User ID is correct and you have proper permissions.\",\r\n                        success: \"\",\r\n                        render: true\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    HandleChange = event => \r\n    {\r\n        this.setState({ \r\n            [event.target.name]: event.target.value \r\n        });\r\n    };\r\n\r\n    renderForm = () =>\r\n    {\r\n        let { enabled, name } = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <Typography>\r\n                    This user is currently {enabled ? \"enabled\" : \"disabled\"}. <br />\r\n                    Click below if you wish to change this status.<br />\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        style={{ margin: 10 }}\r\n                        onClick={this.saveUserInformation}\r\n                    >\r\n                        {enabled ? \"Disable \" + name : \"Enable \" + name}\r\n                    </Button>\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() \r\n    {\r\n        let { classes } = this.props;\r\n        let { error, render, success } = this.state;\r\n\r\n        if(render)\r\n        {\r\n            return (\r\n                <Grid container spacing={10} align=\"center\" justify=\"center\">\r\n                    <Grid item xs={12} sm={10} md={8} lg={6} xl={4}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" className={classes.title}>\r\n                                    Enable / Disable User\r\n                                </Typography>\r\n                                {error !== \"\" &&\r\n                                    <StatusMessage color={classes.error}>\r\n                                        {error}\r\n                                    </StatusMessage>\r\n                                }\r\n                                {this.renderForm()}\r\n                                {success !== \"\" &&\r\n                                    <StatusMessage color={classes.success}>\r\n                                        {success}\r\n                                    </StatusMessage>\r\n                                }\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <div className={classes.alignLeftSpacer}>\r\n                                    <Button \r\n                                        size=\"small\" \r\n                                        variant=\"contained\" \r\n                                        color=\"default\" \r\n                                        component={Link} \r\n                                        to=\"/administration/users/management\"\r\n                                        style={{ margin: 5 }}\r\n                                    >\r\n                                    <LeftArrow className={classes.rightIcon} />\r\n                                        Back To Management Index\r\n                                    </Button>\r\n                                </div>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return( <CircularProgress /> );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(EnableDisablePerson);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// ==================== Helpers ====================\r\nimport get from '../../../helpers/common/get';\r\nimport patch from '../../../helpers/common/patch';\r\n\r\n// ==================== Components ====================\r\nimport StatusMessage from '../../../components/StatusMessage';\r\n\r\n// ==================== MUI ====================\r\nimport { Button, Card, CardContent, CardActions, Typography, CircularProgress } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// ==================== Icons ====================\r\nimport LeftArrow from '@material-ui/icons/ArrowLeft';\r\n\r\nconst styles = theme => ({\r\n    title: theme.title,\r\n    error: theme.error,\r\n    success: theme.success,\r\n    alignLeftSpacer: theme.alignLeftSpacer,\r\n    spinner: theme.spinner,\r\n    rightIcon: theme.rightIcon\r\n});\r\n\r\nclass Research extends Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            profileID: \"\",\r\n            name: \"\",\r\n            research: {},\r\n            error: \"\",\r\n            success: \"\",\r\n            render: false\r\n        };\r\n    }\r\n    \r\n    componentDidMount = () =>\r\n    {\r\n        const profileID = this.props.match.params.profileID;\r\n        this.user = {};\r\n\r\n        if(profileID != null)\r\n        {\r\n            this.setState({\r\n                profileID: profileID\r\n            }, () => {setTimeout(() => {\r\n                this.props.ToggleDrawerClose();\r\n                this.props.CheckAuthenticationValidity((tokenValid) => \r\n                {\r\n                    if(tokenValid)\r\n                    {\r\n                        this.loadUserInformation();\r\n                    }\r\n                });\r\n            }, 200)});\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                error: \"Please navigate to a proper profile id.\",\r\n                render: true\r\n            });\r\n        }\r\n    }\r\n\r\n    loadUserInformation = () =>\r\n    {\r\n        let { profileID } = this.state;\r\n        let { appState } = this.props;\r\n\r\n        get(\"users/\" + profileID, appState.token, (userError, userResponse) => \r\n        {\r\n            if(userError)\r\n            {\r\n                this.setState({\r\n                    error: \"Unable to load profile.\",\r\n                    render: true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(userResponse.status === 200 || userResponse.status === 304)\r\n                {\r\n                    this.user = userResponse.data;                    \r\n                    let user = this.user.user;\r\n\r\n                    this.setState({\r\n                        error: \"\",\r\n                        name: user.info.name,\r\n                        research: user.research,\r\n                        render: true\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        error: \"Unable to load profile.  Please make sure your User ID is correct and you have proper permissions.\",\r\n                        render: true\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    createResearchId = () =>\r\n    {\r\n        let { profileID } = this.state;\r\n        let { appState } = this.props;\r\n\r\n        get(\"users/research/create/\" + profileID, appState.token, (userError, userResponse) => \r\n        {\r\n            if(userError)\r\n            {\r\n                this.setState({\r\n                    error: \"-\",\r\n                    success: \"\",\r\n                    render: true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(userResponse.status === 200 || userResponse.status === 304)\r\n                {\r\n                    this.user = userResponse.data;                    \r\n                    let user = this.user.user;\r\n\r\n                    this.setState({\r\n                        error: \"\",\r\n                        research: user.research,\r\n                        success: \"A Research ID has been created for this person.\",\r\n                        render: true\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        error: \"Unable to load profile.  Please make sure your User ID is correct and you have proper permissions.\",\r\n                        success: \"\",\r\n                        render: true\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    enableDisableResearchId = () =>\r\n    {\r\n        let { profileID, research } = this.state;\r\n        let { appState } = this.props;\r\n\r\n        var data = {\r\n            research: research\r\n        };\r\n\r\n        data.research.enabled = !data.research.enabled;\r\n\r\n        patch(\"users/\" + profileID, appState.token, data, (userError, userResponse) => \r\n        {\r\n            if(userError)\r\n            {\r\n                this.setState({\r\n                    error: \"-\",\r\n                    success: \"\",\r\n                    render: true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if(userResponse.status === 200 || userResponse.status === 304)\r\n                {\r\n                    this.user = userResponse.data;                    \r\n                    let user = this.user.user;\r\n\r\n                    this.setState({\r\n                        error: \"\",\r\n                        research: user.research,\r\n                        success: \"Research ID status updated.\",\r\n                        render: true\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        error: \"Unable to load profile.  Please make sure your User ID is correct and you have proper permissions.\",\r\n                        success: \"\",\r\n                        render: true\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    HandleChange = event => \r\n    {\r\n        this.setState({ \r\n            [event.target.name]: event.target.value \r\n        });\r\n    };\r\n\r\n    renderForm = () =>\r\n    {\r\n        let { research } = this.state;\r\n\r\n        if(research.full === \"\" || research.full === undefined || research.full === null)\r\n        {\r\n            return(\r\n                <div>\r\n                    <Typography>\r\n                        This user currently does not have a research ID.\r\n                    </Typography>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        style={{ margin: 10 }}\r\n                        onClick={this.saveUserInformation}\r\n                    >\r\n                        Create Research ID\r\n                    </Button>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            if(!research.enabled)\r\n            {\r\n                return(\r\n                    <div>\r\n                        <Typography>\r\n                            Unique Research ID: {research.full}<br />\r\n                            This users research ID is currently disabled.<br />\r\n                            Click below to enable it.\r\n                        </Typography>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            style={{ margin: 10 }}\r\n                            onClick={this.enableDisableResearchId}\r\n                        >\r\n                            Enable Research ID\r\n                        </Button>\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return(\r\n                    <div>\r\n                        <Typography>\r\n                            Unique Research ID: {research.full}<br />\r\n                            This users research ID is currently enabled.<br />\r\n                            Click below to disable it.\r\n                        </Typography>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            style={{ margin: 10 }}\r\n                            onClick={this.enableDisableResearchId}\r\n                        >\r\n                            Disable Research ID\r\n                        </Button>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    render() \r\n    {\r\n        let { classes } = this.props;\r\n        let { error, render, success } = this.state;\r\n\r\n        if(render)\r\n        {\r\n            return (\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h5\" className={classes.title}>\r\n                            Enable / Disable User\r\n                        </Typography>\r\n                        {error !== \"\" &&\r\n                            <StatusMessage color={classes.error}>\r\n                                {error}\r\n                            </StatusMessage>\r\n                        }\r\n                        {this.renderForm()}\r\n                        {success !== \"\" &&\r\n                            <StatusMessage color={classes.success}>\r\n                                {success}\r\n                            </StatusMessage>\r\n                        }\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <div className={classes.alignLeftSpacer}>\r\n                            <Button \r\n                                size=\"small\" \r\n                                variant=\"contained\" \r\n                                color=\"default\" \r\n                                component={Link} \r\n                                to=\"/administration/users/management\"\r\n                                style={{ margin: 5 }}\r\n                            >\r\n                            <LeftArrow className={classes.rightIcon} />\r\n                                Back To Management Index\r\n                            </Button>\r\n                        </div>\r\n                    </CardActions>\r\n                </Card>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return( <CircularProgress /> );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Research);","// ================================================\r\n// Code associated with pullChapterDialog\r\n// ================================================\r\nimport React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// ==================== MUI Icons ====================\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst PullChapterDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { chapter, setParentAlert, setParentLoadChapter,\r\n            pullChapterDialog, setPullChapterDialog,\r\n            pullChapterDialogExecuting, setPullChapterDialogExecuting } = props;\r\n\r\n    // Functions ===\r\n        \r\n        const closeHandler = useCallback(() => {\r\n            setPullChapterDialog(false);\r\n        }, [ setPullChapterDialog ]);\r\n\r\n\r\n        const pullHandler = useCallback(() => {\r\n            try{\r\n                setPullChapterDialogExecuting(true);\r\n                setParentLoadChapter();\r\n                setPullChapterDialogExecuting(false);\r\n                setPullChapterDialog(false);\r\n                setParentAlert(new AlertType('Successfully pulled saved state from online. You can continue editing if you wish.', \"success\"));\r\n            }\r\n            catch{\r\n\r\n            }\r\n        }, [ setPullChapterDialogExecuting, setParentLoadChapter, setPullChapterDialog, setParentAlert]);\r\n\r\n\r\n    // Hooks ===\r\n\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {chapter? (\r\n                    <Dialog id=\"pull-chapter-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={pullChapterDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Pull chapter {chapter.name? `\"${chapter.name}\"` : null}\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {pullChapterDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <DialogContentText>\r\n                                    Are you sure you would like to refresh and pull the chapter from online?\r\n                                </DialogContentText>\r\n                            )}\r\n                        \r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={pullChapterDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<SaveAltIcon />} onClick={() => { pullHandler(); }} disabled={pullChapterDialogExecuting}>\r\n                                Pull\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nPullChapterDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    chapter: PropTypes.object,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    setParentLoadChapter: PropTypes.func.isRequired,\r\n    pullChapterDialog: PropTypes.bool.isRequired,\r\n    setPullChapterDialog: PropTypes.func.isRequired,\r\n    pullChapterDialogExecuting: PropTypes.bool.isRequired, \r\n    setPullChapterDialogExecuting: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nPullChapterDialog.defaultProps = \r\n{\r\n    chapter: () => {},\r\n    setParentAlert: () => {},\r\n    setParentLoadChapter: () => {},\r\n    pullChapterDialog: {},\r\n    setPullChapterDialog: () => {},\r\n    pullChapterDialogExecuting: {}, \r\n    setPullChapterDialogExecuting: () => {}\r\n}\r\n\r\nexport default PullChapterDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with SaveChapterDialog\r\n// ================================================\r\nimport React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\nimport patch from  '../../../../helpers/common/patch';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// ==================== MUI Icons ====================\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst SaveChapterDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, setParentAlert, isTemplate, chapter, chapterID,\r\n            saveChapterDialog, setSaveChapterDialog,\r\n            saveChapterDialogExecuting, setSaveChapterDialogExecuting } = props;\r\n\r\n    // Functions ===\r\n\r\n        // Saves current state of chapter and updates it in the database\r\n        const saveChapter = useCallback(() =>\r\n        {\r\n\r\n            if(chapter)\r\n            {\r\n                let updateBody;\r\n\r\n                if(isTemplate)\r\n                {\r\n                    updateBody =\r\n                    {\r\n                        name: chapter.name,\r\n                        surveyJSON: chapter.surveyJSON\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    updateBody =\r\n                    {\r\n                        completeness: chapter.completeness,\r\n                        responseJSON: chapter.responseJSON,\r\n                        // memberCollection: chapter.memberCollection\r\n                    }\r\n                }\r\n\r\n                patch((isTemplate? \"surveys/\" : \"membersurveys/\") + chapterID, appState.token, updateBody, (error, response) => \r\n                {\r\n                    if(error)\r\n                    {\r\n                        setSaveChapterDialog(false);\r\n                        setParentAlert(new AlertType('Unable to retrieve save chapter. Please try again.', \"error\"));\r\n                    }\r\n                    else\r\n                    {\r\n                        if(response.status === 200)\r\n                        {\r\n                            \r\n                        }\r\n                        else\r\n                        {\r\n                            setSaveChapterDialog(false);\r\n                            setParentAlert(new AlertType('Unable to retrieve save chapter. Please try again.', \"error\"));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setSaveChapterDialog(false);\r\n                setParentAlert(new AlertType('Unable to retrieve save chapter. Please try again.', \"error\"));\r\n            }\r\n            \r\n        }, [ setSaveChapterDialog, setParentAlert, chapter, chapterID, appState, isTemplate ]);\r\n\r\n        \r\n        const closeHandler = useCallback(() => {\r\n            setSaveChapterDialog(false);\r\n        }, [ setSaveChapterDialog ]);\r\n\r\n\r\n        const saveHandler = useCallback(() => {\r\n            try{\r\n                setSaveChapterDialogExecuting(true);\r\n                saveChapter();\r\n                setSaveChapterDialogExecuting(false);\r\n                setSaveChapterDialog(false);\r\n                setParentAlert(new AlertType('Successfully Saved. You can continue editing if you wish.', \"success\")); \r\n            }\r\n            catch{\r\n\r\n            }\r\n        }, [ setSaveChapterDialogExecuting, saveChapter, setSaveChapterDialog, setParentAlert]);\r\n\r\n\r\n    // Hooks ===\r\n\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {chapter? (\r\n                    <Dialog id=\"save-chapter-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={saveChapterDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Save chapter {chapter.name? `\"${chapter.name}\"` : null}\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {saveChapterDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <DialogContentText>\r\n                                    Are you sure you would like to save the chapter?\r\n                                </DialogContentText>\r\n                            )}\r\n                        \r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={saveChapterDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<SaveIcon />} onClick={() => { saveHandler(); }} disabled={saveChapterDialogExecuting}>\r\n                                Save\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nSaveChapterDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    isTemplate: PropTypes.bool.isRequired,\r\n    chapter: PropTypes.object,\r\n    chapterID: PropTypes.string.isRequired,\r\n    saveChapterDialog: PropTypes.bool.isRequired,\r\n    setSaveChapterDialog: PropTypes.func.isRequired,\r\n    saveChapterDialogExecuting: PropTypes.bool.isRequired, \r\n    setSaveChapterDialogExecuting: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nSaveChapterDialog.defaultProps = \r\n{\r\n    appState: {},\r\n    setParentAlert: () => {},\r\n    isTemplate: {},\r\n    chapter: {},\r\n    chapterID: {},\r\n    saveChapterDialog: {},\r\n    setSaveChapterDialog: () => {},\r\n    saveChapterDialogExecuting: {}, \r\n    setSaveChapterDialogExecuting: () => {}\r\n}\r\n\r\nexport default SaveChapterDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\nimport PullChapterDialog from '../Dialog/PullChapterDialog';\r\nimport SaveChapterDialog from '../Dialog/SaveChapterDialog';\r\nimport AlertMessage from '../../../../components/AlertMessage';\r\n\r\n// import 'nouislider/dist/nouislider.css'; This is the newer 15.5.0 version\r\n// import \"nouislider/distribute/nouislider.css\"; This is the old 9.2.0 version\r\n\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport '../../../../css/nouislider.fix.css';\r\n\r\nimport \"bootstrap-slider/dist/css/bootstrap-slider.css\";\r\n\r\nimport * as SurveyKo from \"survey-knockout\";\r\nimport * as widgets from \"surveyjs-widgets\";\r\n\r\nimport * as SurveyCreator from 'survey-creator';\r\nimport \"survey-creator/survey-creator.css\";\r\n\r\n// ==================== Helpers =====================\r\nimport get from  '../../../../helpers/common/get';\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n// ==================== MUI Icons ====================\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        },\r\n        FormControlLabel: {\r\n            marginLeft: \"1rem\",\r\n            marginRight: \"1rem\"\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\nconst backLink = \"/administration/booklets/management\";\r\n\r\nconst surveyCreatorStyle = \"default\";\r\n \r\nconst surveyCreatorOptions = {\r\n    showLogicTab: true,\r\n    showToolbox: \"left\",\r\n    showPropertyGrid: \"right\"\r\n};\r\n\r\nconst surveyContainerID = \"surveyCreatorContainer\";\r\n\r\nSurveyCreator.StylesManager.applyTheme(surveyCreatorStyle);\r\n\r\n// ==================== Survey-JS Widget ====================\r\n\r\nwidgets.nouislider(SurveyKo);\r\nwidgets.bootstrapslider(SurveyKo);\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst EditChapterTemplate = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        const surveyCreator = useRef(null);\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, ChapterID, ToggleDrawerClose, CheckAuthenticationValidity } = props;\r\n\r\n        const [chapterOriginal, setChapterOriginal] = useState(null);\r\n\r\n        const [chapterCopy, setChapterCopy] = useState(null);\r\n\r\n        const [surveyJSloading, setSurveyJSLoading] = useState(true);\r\n\r\n        const [saveChapterDialog, setSaveChapterDialog] = useState(false);\r\n        const [saveChapterDialogExecuting, setSaveChapterDialogExecuting] = useState(false);\r\n\r\n        const [pullChapterDialog, setPullChapterDialog] = useState(false);\r\n        const [pullChapterDialogExecuting, setPullChapterDialogExecuting] = useState(false);\r\n\r\n        // Alert variable\r\n        const [alert, setAlert] = useState(new AlertType());\r\n\r\n    // Functions ===\r\n\r\n        // Loads existing booklet chosen by user from the database\r\n        const loadChapter = useCallback(() =>\r\n        {\r\n\r\n            if(ChapterID != null)\r\n            {\r\n                get(\"surveys/\" + ChapterID, appState.token, (error, response) => \r\n                {\r\n                    if(error)\r\n                    {\r\n                        setAlert(new AlertType('Unable to retrieve User Chapters. Please refresh and try again.', \"error\"));\r\n                    }\r\n                    else\r\n                    {\r\n                        if(response.status === 200 || response.status === 304)\r\n                        {\r\n                            setSurveyJSLoading(true);\r\n                            setChapterOriginal(response.data.survey);\r\n                        }\r\n                        else\r\n                        {\r\n                            setAlert(new AlertType('Unable to retrieve User Chapters. Please refresh and try again.', \"error\"));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setAlert(new AlertType('Unable to retrieve User Chapters. Please refresh and try again.', \"error\")); \r\n            }\r\n        }, [ ChapterID, appState ]);\r\n\r\n        const nameHandler = useCallback((event) =>\r\n        {\r\n            setChapterCopy({...chapterCopy, name: event.target.value});\r\n        }, [ chapterCopy ]);\r\n\r\n        const pullHandler = useCallback(() => \r\n        {\r\n            setPullChapterDialog(true); \r\n        }, [ ]);\r\n\r\n        const saveHandler = useCallback(() => \r\n        {\r\n            setChapterCopy({...chapterCopy, surveyJSON: JSON.stringify(surveyCreator.current.text)});\r\n            setSaveChapterDialog(true);\r\n        }, [ chapterCopy ]);\r\n\r\n        const restoreHandler = useCallback(() => \r\n        {\r\n            setChapterOriginal({...chapterOriginal, name: chapterOriginal.name});\r\n            setAlert(new AlertType('Successfully restored back to previous saved state. You can continue editing if you wish.', \"success\")); \r\n        }, [ chapterOriginal ]);\r\n\r\n        const publicHandler = useCallback((event) => \r\n        {\r\n            setChapterCopy({...chapterCopy, isPublic: event.target.checked});\r\n        }, [ chapterCopy ]);\r\n\r\n\r\n    // Hooks ===\r\n\r\n        // First Render only because of the [ ] empty array tracking with the useEffect\r\n        useEffect( () =>\r\n        {\r\n            ToggleDrawerClose();\r\n            setTimeout(() => {\r\n                CheckAuthenticationValidity( (tokenValid) => \r\n                {\r\n                    if(tokenValid)\r\n                    {\r\n                        // Load or Do Something\r\n                        surveyCreator.current = new SurveyCreator.SurveyCreator(surveyContainerID, surveyCreatorOptions);\r\n                        loadChapter();\r\n                    }\r\n                    else {\r\n\r\n                        // Bad Response\r\n                        setAlert(null);\r\n                    }\r\n                });\r\n            }, 200);    //\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ ]);\r\n\r\n        useEffect( () => \r\n        {\r\n\r\n            if(chapterOriginal) {\r\n\r\n                setChapterCopy({...chapterOriginal});\r\n\r\n                if(chapterOriginal.surveyJSON !== \"\")\r\n                {\r\n                    surveyCreator.current.text = JSON.parse(chapterOriginal.surveyJSON);\r\n                }\r\n                else\r\n                {\r\n                    surveyCreator.current.text = JSON.parse(null);\r\n                }\r\n                \r\n                setSurveyJSLoading(false);\r\n            }\r\n\r\n        }, [ chapterOriginal ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            alert != null? (\r\n\r\n                // Notice the shorthand React render Fragment <> & </> instead of <div> & </div>, both work the same\r\n                <div className={classes.root}>\r\n                    <Grid container\r\n                    className={classes.rootGrid}\r\n                    direction=\"row\"\r\n                    justifyContent=\"flex-start\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={1}\r\n                    >\r\n                        <Grid item xs={5}>\r\n                            <Box mx={1} my={1}>\r\n                                <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                    <Grid item>\r\n                                        <IconButton component={Link} to={backLink}>\r\n                                            <ArrowBackIosIcon />\r\n                                        </IconButton>\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <Typography variant=\"h4\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                                            Editing {chapterOriginal? `\"${chapterOriginal.name}\"` : null}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box> \r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Box mx={1} my={1}>\r\n                                <AlertMessage alert={alert} setParentAlert={setAlert} />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Card raised={true}>\r\n                                <Box mx={2} my={1} boxShadow={0}>\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"column\"\r\n                                        justifyContent=\"flex-start\"\r\n                                        alignItems=\"stretch\"\r\n                                        spacing={1}\r\n                                    >\r\n                                        {chapterCopy?\r\n                                        (\r\n                                            <>\r\n                                                <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"h6\" component=\"h6\">\r\n                                                            Chapter Template Properties\r\n                                                        </Typography>\r\n                                                        <Divider />\r\n                                                    </Grid>\r\n                                                    <Grid item xs>\r\n                                                        <Box mx={3} my={1} boxShadow={0}>\r\n                                                            <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                                                <Grid item>\r\n                                                                    <Tooltip\r\n                                                                        placement=\"bottom\"\r\n                                                                        title=\"View Chapter\"\r\n                                                                    >\r\n                                                                        <Button \r\n                                                                            size=\"small\" \r\n                                                                            variant=\"contained\" \r\n                                                                            color=\"secondary\"\r\n                                                                            startIcon={<VisibilityIcon />}\r\n                                                                            component={Link}\r\n                                                                            to={`/administration/booklets/template/view/${ChapterID}`}\r\n                                                                        >\r\n                                                                            View\r\n                                                                        </Button>\r\n                                                                    </Tooltip>\r\n                                                                </Grid>\r\n                                                                <Grid item>\r\n                                                                    <Tooltip\r\n                                                                        placement=\"bottom\"\r\n                                                                        title=\"Refresh Online Chapter\"\r\n                                                                    >\r\n                                                                        <Button \r\n                                                                            size=\"small\" \r\n                                                                            variant=\"contained\" \r\n                                                                            color=\"primary\"\r\n                                                                            startIcon={<RefreshIcon />}\r\n                                                                            onClick={() => { pullHandler(); }}\r\n                                                                        >\r\n                                                                            Refresh\r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                </Grid>\r\n                                                                <Grid item>\r\n                                                                    <Tooltip\r\n                                                                        placement=\"bottom\"\r\n                                                                        title=\"Restore Chapter Progress\"\r\n                                                                    >\r\n                                                                        <Button \r\n                                                                            size=\"small\" \r\n                                                                            variant=\"contained\" \r\n                                                                            color=\"primary\"\r\n                                                                            startIcon={<RestoreIcon />}\r\n                                                                            onClick={() => { restoreHandler(); }}\r\n                                                                        >\r\n                                                                            Restore\r\n                                                                        </Button>\r\n                                                                    </Tooltip>\r\n                                                                </Grid>\r\n                                                                <Grid item>\r\n                                                                    <Tooltip\r\n                                                                        placement=\"bottom\"\r\n                                                                        title=\"Save Chapter Progress\"\r\n                                                                    >\r\n                                                                        <Button \r\n                                                                            size=\"small\" \r\n                                                                            variant=\"contained\" \r\n                                                                            color=\"primary\"\r\n                                                                            disabled={chapterCopy.name === \"\"? true : false}\r\n                                                                            startIcon={<SaveIcon />}\r\n                                                                            onClick={() => { saveHandler(); }}\r\n                                                                        >\r\n                                                                            Save\r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                </Grid>\r\n                                                                <Grid item>\r\n                                                                    <FormControlLabel\r\n                                                                        className={classes.FormControlLabel}\r\n                                                                        control={<Switch checked={chapterCopy.isPublic} onChange={ (event) => { publicHandler(event); }} />}\r\n                                                                        label={chapterCopy.isPublic? \"Public\" : \"Not Public\"}\r\n                                                                        labelPlacement=\"end\"\r\n                                                                    />\r\n                                                                </Grid>\r\n                                                            </Grid>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Tooltip\r\n                                                            placement=\"left\"\r\n                                                            title=\"Use this page to edit your chapter. Any information that a patient has answered in a previous chapter version along with the questions they answered will still exist. Only NEW chapters will be affected.\"\r\n                                                        >\r\n                                                            <IconButton>\r\n                                                                <HelpOutlineIcon />\r\n                                                            </IconButton>\r\n                                                        </Tooltip>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={12}>\r\n                                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                                        <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>            \r\n                                                            <Grid item xs={4}>\r\n                                                                <TextField label=\"Chapter Name\"\r\n                                                                    size=\"small\"\r\n                                                                    variant=\"filled\"\r\n                                                                    error={chapterCopy.name === \"\"? true : false}\r\n                                                                    fullWidth\r\n                                                                    value={chapterCopy.name? chapterCopy.name : \"\"}\r\n                                                                    onChange={ (event) => { nameHandler(event); }}\r\n                                                                />\r\n                                                            </Grid>\r\n                                                            <Grid item xs={2}>\r\n                                                                <TextField label=\"Updated\"\r\n                                                                    disabled\r\n                                                                    size=\"small\"\r\n                                                                    fullWidth\r\n                                                                    variant=\"filled\"\r\n                                                                    value={new Date(chapterOriginal.updatedAt).toLocaleString()}\r\n                                                                    InputProps={{\r\n                                                                        readOnly: true,\r\n                                                                    }}\r\n                                                                />\r\n                                                            </Grid>\r\n                                                            <Grid item xs={2}>\r\n                                                                <TextField label=\"Updated By\"\r\n                                                                    disabled\r\n                                                                    size=\"small\"\r\n                                                                    fullWidth\r\n                                                                    variant=\"filled\"\r\n                                                                    value={chapterOriginal.modifiedBy}\r\n                                                                    InputProps={{\r\n                                                                        readOnly: true,\r\n                                                                    }}\r\n                                                                />\r\n                                                            </Grid>\r\n                                                            <Grid item xs={2}>\r\n                                                                <TextField label=\"Created\"\r\n                                                                    disabled\r\n                                                                    size=\"small\"\r\n                                                                    fullWidth\r\n                                                                    variant=\"filled\" \r\n                                                                    value={new Date(chapterOriginal.createdAt).toLocaleString()}\r\n                                                                    InputProps={{\r\n                                                                        readOnly: true,\r\n                                                                    }}\r\n                                                                />\r\n                                                            </Grid>\r\n                                                            <Grid item xs={2}>\r\n                                                                <TextField label=\"Created By\"\r\n                                                                    disabled\r\n                                                                    size=\"small\"\r\n                                                                    fullWidth\r\n                                                                    variant=\"filled\" \r\n                                                                    value={chapterOriginal.createdBy}\r\n                                                                    InputProps={{\r\n                                                                        readOnly: true,\r\n                                                                    }}\r\n                                                                />\r\n                                                            </Grid>       \r\n                                                        </Grid>\r\n                                                    </Box>\r\n                                                </Grid>\r\n                                                <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"h6\" component=\"h6\" className={classes.button}>\r\n                                                            Chapter Survey\r\n                                                        </Typography>\r\n                                                        <Divider />\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </>\r\n                                        ) : (\r\n                                            <Grid item xs={12} container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1}>\r\n                                                <Grid item>\r\n                                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                                        <CircularProgress />\r\n                                                    </Box>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        )}   \r\n                                        <Grid item xs={12}>\r\n                                            <Box mx={1} my={1} boxShadow={0}>\r\n                                                <Collapse in={!surveyJSloading}>\r\n                                                    <div id={surveyContainerID} />\r\n                                                </Collapse>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <SaveChapterDialog\r\n                        saveChapterDialog={saveChapterDialog}\r\n                        setSaveChapterDialog={setSaveChapterDialog}\r\n                        saveChapterDialogExecuting={saveChapterDialogExecuting}\r\n                        setSaveChapterDialogExecuting={setSaveChapterDialogExecuting}\r\n                        setParentAlert={setAlert}\r\n                        appState={appState}\r\n                        isTemplate={true}\r\n                        chapter={chapterCopy}\r\n                        chapterID={ChapterID}\r\n                    />\r\n                    <PullChapterDialog\r\n                        chapter={chapterOriginal}\r\n                        setParentAlert={setAlert}\r\n                        setParentLoadChapter={loadChapter}\r\n                        pullChapterDialog={pullChapterDialog}\r\n                        setPullChapterDialog={setPullChapterDialog}\r\n                        pullChapterDialogExecuting={pullChapterDialogExecuting}\r\n                        setPullChapterDialogExecuting={setPullChapterDialogExecuting}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <Typography variant=\"h6\" color=\"inherit\" align=\"center\" gutterBottom>\r\n                    Not Authorized. Please refresh and try again.\r\n                </Typography>\r\n            )\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nEditChapterTemplate.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    ChapterID: PropTypes.string.isRequired,\r\n    ToggleDrawerClose: PropTypes.func.isRequired,\r\n    CheckAuthenticationValidity: PropTypes.func.isRequired\r\n}\r\n\r\nEditChapterTemplate.defaultProps = \r\n{\r\n    appState: {},\r\n    ChapterID: {},\r\n    ToggleDrawerClose: () => {},\r\n    CheckAuthenticationValidity: () => {}\r\n}\r\n\r\nexport default EditChapterTemplate;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\nimport AlertMessage from '../../../../components/AlertMessage';\r\n\r\n// import 'nouislider/dist/nouislider.css'; This is the newer 15.5.0 version\r\n// import \"nouislider/distribute/nouislider.css\"; This is the old 9.2.0 version\r\n\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport '../../../../css/nouislider.fix.css';\r\n\r\nimport \"bootstrap-slider/dist/css/bootstrap-slider.css\";\r\n\r\nimport * as widgets from \"surveyjs-widgets\";\r\n\r\nimport * as Survey from \"survey-react\";\r\nimport \"survey-react/survey.css\";\r\n\r\n// ==================== Helpers =====================\r\nimport get from  '../../../../helpers/common/get';\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\n// ==================== MUI Icons ====================\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\n// ================= Static Variables ================\r\nconst backLink = \"/administration/booklets/management\";\r\n\r\nconst surveyStyle = \"default\";\r\n \r\n// const surveyOptions = {\r\n\r\n// };\r\n\r\nconst surveyContainerID = \"surveyCreatorContainer\";\r\n\r\nSurvey.StylesManager.applyTheme(surveyStyle);\r\n\r\n// ================= Static Functions ================\r\n\r\n// ==================== Survey-JS Widget ====================\r\n\r\nwidgets.nouislider(Survey);\r\nwidgets.bootstrapslider(Survey);\r\n\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst ViewChapterTemplate = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, ChapterID, ToggleDrawerClose, CheckAuthenticationValidity } = props;\r\n\r\n        const [chapterOriginal, setChapterOriginal] = useState(null);\r\n\r\n        const [survey, setSurvey] = useState(null);\r\n\r\n        const [surveyJSloading, setSurveyJSLoading] = useState(true);\r\n\r\n        // Alert variable\r\n        const [alert, setAlert] = useState(new AlertType());\r\n\r\n    // Functions ===\r\n\r\n        // Loads existing booklet chosen by user from the database\r\n        const loadChapter = useCallback(() =>\r\n        {\r\n\r\n            if(ChapterID != null)\r\n            {\r\n                get(\"surveys/\" + ChapterID, appState.token, (error, response) => \r\n                {\r\n                    if(error)\r\n                    {\r\n                        setAlert(new AlertType('Unable to retrieve User Chapters. Please refresh and try again.', \"error\"));\r\n                    }\r\n                    else\r\n                    {\r\n                        if(response.status === 200 || response.status === 304)\r\n                        {\r\n                            setSurveyJSLoading(true);\r\n                            setChapterOriginal(response.data.survey);\r\n                        }\r\n                        else\r\n                        {\r\n                            setAlert(new AlertType('Unable to retrieve User Chapters. Please refresh and try again.', \"error\"));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setAlert(new AlertType('Unable to retrieve User Chapters. Please refresh and try again.', \"error\")); \r\n            }\r\n        }, [ ChapterID, appState ]);\r\n\r\n    // Hooks ===\r\n\r\n        // First Render only because of the [ ] empty array tracking with the useEffect\r\n        useEffect( () =>\r\n        {\r\n            ToggleDrawerClose();\r\n            setTimeout(() => {\r\n                CheckAuthenticationValidity( (tokenValid) => \r\n                {\r\n                    if(tokenValid)\r\n                    {\r\n                        // Load or Do Something\r\n                        loadChapter();\r\n                    }\r\n                    else {\r\n\r\n                        // Bad Response\r\n                        setAlert(null);\r\n                    }\r\n                });\r\n            }, 200);    //\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ ]);\r\n\r\n        useEffect( () => \r\n        {\r\n            \r\n            if(chapterOriginal) {\r\n                \r\n                // console.log(chapterOriginal);\r\n\r\n                if(chapterOriginal.surveyJSON !== \"\")\r\n                {\r\n                    setSurvey(JSON.parse(chapterOriginal.surveyJSON));\r\n                }\r\n                else\r\n                {\r\n                    setSurvey(null);\r\n                    setAlert(new AlertType('Chapter survey is empty. Please go to the Edit page to add content to it.', \"info\"));\r\n                }\r\n\r\n                setSurveyJSLoading(false);\r\n            }\r\n\r\n        }, [ chapterOriginal ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            alert != null? (\r\n\r\n                // Notice the shorthand React render Fragment <> & </> instead of <div> & </div>, both work the same\r\n                <div className={classes.root}>\r\n                    <Grid container\r\n                    className={classes.rootGrid}\r\n                    direction=\"row\"\r\n                    justifyContent=\"flex-start\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={1}\r\n                    >\r\n                        <Grid item xs={5}>\r\n                            <Box mx={1} my={1}>\r\n                                <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                    <Grid item>\r\n                                        <IconButton component={Link} to={backLink}>\r\n                                            <ArrowBackIosIcon />\r\n                                        </IconButton>\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <Typography variant=\"h4\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                                            Viewing {chapterOriginal? `\"${chapterOriginal.name}\"` : null}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box> \r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Box mx={1} my={1}>\r\n                                <AlertMessage alert={alert} setParentAlert={setAlert} />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Card raised={true}>\r\n                                <Box mx={2} my={1} boxShadow={0}>\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"column\"\r\n                                        justifyContent=\"flex-start\"\r\n                                        alignItems=\"stretch\"\r\n                                        spacing={1}\r\n                                    >\r\n                                        {chapterOriginal?\r\n                                        (\r\n                                            <>\r\n                                                <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"h6\" component=\"h6\">\r\n                                                            View Chapter Template\r\n                                                        </Typography>\r\n                                                        <Divider />\r\n                                                    </Grid>\r\n                                                    <Grid item xs>\r\n                                                        <Box mx={3} my={1} boxShadow={0}>\r\n                                                            <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                                                <Grid item>\r\n                                                                    <Tooltip\r\n                                                                        placement=\"bottom\"\r\n                                                                        title=\"Edit Chapter\"\r\n                                                                    >\r\n                                                                        <Button \r\n                                                                            size=\"small\" \r\n                                                                            variant=\"contained\" \r\n                                                                            color=\"secondary\"\r\n                                                                            startIcon={<EditIcon />}\r\n                                                                            component={Link}\r\n                                                                            to={`/administration/booklets/template/edit/${ChapterID}`}\r\n                                                                        >\r\n                                                                            Edit\r\n                                                                        </Button>\r\n                                                                    </Tooltip>\r\n                                                                </Grid>\r\n                                                            </Grid>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Tooltip\r\n                                                            placement=\"left\"\r\n                                                            title=\"This page is to view the selected chapter. The chapter here will be in READ-ONLY mode. If you need to test your chapter, please navigate to the 'Edit' page from the management page.\"\r\n                                                        >\r\n                                                            <IconButton>\r\n                                                                <HelpOutlineIcon />\r\n                                                            </IconButton>\r\n                                                        </Tooltip>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </>\r\n                                        ) : (\r\n                                            <Grid item xs={12} container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1}>\r\n                                                <Grid item>\r\n                                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                                        <CircularProgress />\r\n                                                    </Box>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        )}   \r\n                                        <Grid item xs={12}>\r\n                                            <Box mx={1} my={1} boxShadow={0}>\r\n                                                <Collapse in={!surveyJSloading}>\r\n                                                    {survey != null?\r\n                                                    (\r\n                                                        <Survey.Survey id={surveyContainerID} json={survey} mode=\"display\" />\r\n                                                    ) : (\r\n                                                        null\r\n                                                    )}\r\n                                                </Collapse>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            ) : (\r\n                <Typography variant=\"h6\" color=\"inherit\" align=\"center\" gutterBottom>\r\n                    Not Authorized. Please refresh and try again.\r\n                </Typography>\r\n            )\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nViewChapterTemplate.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    ChapterID: PropTypes.string.isRequired,\r\n    ToggleDrawerClose: PropTypes.func.isRequired,\r\n    CheckAuthenticationValidity: PropTypes.func.isRequired\r\n}\r\n\r\nViewChapterTemplate.defaultProps = \r\n{\r\n    appState: {},\r\n    ChapterID: {},\r\n    ToggleDrawerClose: () => {},\r\n    CheckAuthenticationValidity: () => {}\r\n}\r\n\r\nexport default ViewChapterTemplate;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\nimport PullChapterDialog from '../Dialog/PullChapterDialog';\r\nimport SaveChapterDialog from '../Dialog/SaveChapterDialog';\r\nimport AlertMessage from '../../../../components/AlertMessage';\r\n\r\n// import 'nouislider/dist/nouislider.css'; This is the newer 15.5.0 version\r\n// import \"nouislider/distribute/nouislider.css\"; This is the old 9.2.0 version\r\n\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport '../../../../css/nouislider.fix.css';\r\n\r\nimport \"bootstrap-slider/dist/css/bootstrap-slider.css\";\r\n\r\nimport * as SurveyKo from \"survey-knockout\";\r\nimport * as widgets from \"surveyjs-widgets\";\r\n\r\nimport * as Survey from \"survey-react\";\r\nimport \"survey-react/survey.css\";\r\n\r\n// ==================== Helpers =====================\r\nimport get from  '../../../../helpers/common/get';\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\nimport calculateCompleteness from '../../../../helpers/reports/reports';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\n// ==================== MUI Icons ====================\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\n// ================= Static Variables ================\r\nconst backLink = \"/administration/booklets/management\";\r\n\r\nconst surveyStyle = \"default\";\r\n\r\nconst surveyContainerID = \"surveyCreatorContainer\";\r\n\r\nSurvey.StylesManager.applyTheme(surveyStyle);\r\n\r\n// ================= Static Functions ================\r\n\r\n// ==================== Survey-JS Widget ====================\r\n\r\n//widgets.nouislider(SurveyKo);\r\n//widgets.bootstrapslider(SurveyKo);\r\n\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        },\r\n        FormControlLabel: {\r\n            marginLeft: \"1rem\",\r\n            marginRight: \"1rem\"\r\n        }\r\n    }));\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst EditChapterUser = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, ChapterID, ToggleDrawerClose, CheckAuthenticationValidity, mode } = props;\r\n\r\n        const [chapterOriginal, setChapterOriginal] = useState(null);\r\n\r\n        const [chapterCopy, setChapterCopy] = useState(null);\r\n\r\n        const [surveyJSloading, setSurveyJSLoading] = useState(true);\r\n\r\n        const survey = useRef(null);\r\n\r\n        const [progress, setProgress] = useState(false);\r\n\r\n        const [saveChapterDialog, setSaveChapterDialog] = useState(false);\r\n        const [saveChapterDialogExecuting, setSaveChapterDialogExecuting] = useState(false);\r\n\r\n        const [pullChapterDialog, setPullChapterDialog] = useState(false);\r\n        const [pullChapterDialogExecuting, setPullChapterDialogExecuting] = useState(false);\r\n\r\n        // Alert variable\r\n        const [alert, setAlert] = useState(new AlertType());\r\n\r\n    // Functions ===\r\n\r\n        // Loads existing booklet chosen by user from the database\r\n        const loadChapter = useCallback(() =>\r\n        {\r\n\r\n            if(ChapterID != null)\r\n            {\r\n                get(\"membersurveys/\" + ChapterID, appState.token, (error, response) => \r\n                {\r\n                    if(error)\r\n                    {\r\n                        setAlert(new AlertType('Unable to retrieve User Chapter. Please refresh and try again.', \"error\"));\r\n                    }\r\n                    else\r\n                    {\r\n                        if(response.status === 200 || response.status === 304)\r\n                        {\r\n                            setSurveyJSLoading(true);\r\n                            setChapterOriginal(response.data.memberSurvey);\r\n                        }\r\n                        else\r\n                        {\r\n                            setAlert(new AlertType('Unable to retrieve User Chapter. Please refresh and try again.', \"error\"));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setAlert(new AlertType('Unable to retrieve User Chapter. Please refresh and try again.', \"error\")); \r\n            }\r\n\r\n        }, [ ChapterID, appState ]);\r\n\r\n        const completeHandler = useCallback((result) =>\r\n        {\r\n            \r\n            if(chapterCopy)\r\n            {\r\n                if(!survey.current.hasErrors())\r\n                {\r\n                    setChapterCopy({...chapterCopy, completeness: calculateCompleteness(survey.current), responseJSON: JSON.stringify(result.data)});            \r\n                }\r\n            }\r\n            \r\n        }, [ chapterCopy ]);\r\n\r\n        const pageChangeHandler = useCallback((result) =>\r\n        {\r\n            \r\n            if(chapterCopy)\r\n            {\r\n                if(!survey.current.hasPageErrors())\r\n                {\r\n                    setChapterCopy({...chapterCopy, responseJSON: JSON.stringify(result.data)});  \r\n                }\r\n            }\r\n\r\n        }, [ chapterCopy ]);\r\n        \r\n        const pullHandler = useCallback(() => \r\n        {\r\n            setPullChapterDialog(true);\r\n        }, [ ]);\r\n\r\n        \r\n        // const restoreHandler = useCallback(() => \r\n        // {\r\n        //     setChapterCopy(chapterOriginal);\r\n\r\n        //     survey.current.clear();\r\n    \r\n        //     survey.current.mergeData(JSON.parse(chapterOriginal.responseJSON));\r\n\r\n        //     survey.current.render();\r\n\r\n        //     setAlert(new AlertType('Restored chapter back to previous saved state. You can continue editing if you wish.', \"info\"));\r\n\r\n        // }, [ chapterOriginal ]);\r\n\r\n        const restartHandler = useCallback(() => \r\n        {\r\n\r\n            survey.current.clear();\r\n\r\n            survey.current.mergeData(JSON.parse(chapterCopy.responseJSON));\r\n\r\n            survey.current.render();\r\n            \r\n            setAlert(new AlertType('Restarted chapter survey to most recently completed page. You can continue to modify if you wish.', \"info\")); \r\n\r\n        }, [ chapterCopy ]);\r\n\r\n        const saveHandler = useCallback(() => \r\n        {\r\n            if(chapterCopy != null)\r\n            {\r\n                // let currentSurveyObject = survey.current.data;\r\n                // let completedSurveyObject = JSON.parse(chapterCopy.responseJSON);\r\n\r\n                // for (const [key, value] of Object.entries(completedSurveyObject))\r\n                // {\r\n                //     if(currentSurveyObject[key] !== value)\r\n                //     {\r\n                //         setAlert(new AlertType('In-completed Survey Modifications. Please complete current changes to save.', \"info\"));\r\n                //         return;\r\n                //     }\r\n                //\r\n                \r\n                setSaveChapterDialog(true);\r\n            }\r\n            \r\n        }, [ chapterCopy ]);\r\n\r\n        // const approvedHandler = useCallback((event) => \r\n        // {\r\n        //     setChapterCopy({...chapterCopy, approved: event.target.checked});\r\n\r\n        // }, [ chapterCopy ]);\r\n\r\n        \r\n        const valueChangeHandler = (result, options) =>\r\n        {\r\n            // console.log(result.data);\r\n\r\n            if (chapterCopy.responseJSON != JSON.stringify(result.data))\r\n            {\r\n                setProgress(true);\r\n            }\r\n            else\r\n            {\r\n                setProgress(false);\r\n            }\r\n\r\n            setChapterCopy({...chapterCopy, completeness: calculateCompleteness(survey.current), responseJSON: JSON.stringify(result.data)});\r\n            //We can use this to check change of specific inputs\r\n        };\r\n    \r\n        const progressHandler = useCallback(() => \r\n        {\r\n            if(chapterCopy.responseJSON !== chapterOriginal.responseJSON)\r\n            {\r\n                setProgress(true);\r\n            }\r\n\r\n        }, [ chapterOriginal, chapterCopy ]);\r\n\r\n    // Hooks ===\r\n\r\n        // First Render only because of the [ ] empty array tracking with the useEffect\r\n        useEffect( () =>\r\n        {\r\n            ToggleDrawerClose();\r\n            setTimeout(() => {\r\n                CheckAuthenticationValidity( (tokenValid) => \r\n                {\r\n                    if(tokenValid)\r\n                    {\r\n                        // Load or Do Something\r\n                        loadChapter();\r\n                    }\r\n                    else {\r\n\r\n                        // Bad Response\r\n                        setAlert(null);\r\n                    }\r\n                });\r\n            }, 200);    //\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ ]);\r\n\r\n        useEffect( () => \r\n        {\r\n\r\n            if(chapterOriginal) {\r\n\r\n                setChapterCopy({...chapterOriginal});\r\n\r\n                if(chapterOriginal.surveyTemplate.surveyJSON !== \"\")\r\n                {\r\n                    let surveyJSON = JSON.parse(chapterOriginal.surveyTemplate.surveyJSON);\r\n                    let responseJSON = JSON.parse(chapterOriginal.responseJSON);\r\n\r\n                    let tempSurvey = new Survey.Model(surveyJSON);\r\n                    tempSurvey.data = responseJSON;\r\n                    \r\n                    tempSurvey.showProgressBar = \"top\";\r\n                    tempSurvey.sendResultOnPageNext = true;\r\n\r\n                    survey.current = tempSurvey;\r\n\r\n                }\r\n                else\r\n                {\r\n                    survey.current = null;\r\n                    setAlert(new AlertType('Chapter survey is empty.', \"info\"));\r\n                }\r\n                \r\n                setSurveyJSLoading(false);\r\n            }\r\n\r\n        }, [ chapterOriginal ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(chapterCopy)\r\n            {\r\n              progressHandler();\r\n            }\r\n            \r\n        }, [ chapterCopy, progressHandler ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            alert != null? (\r\n\r\n                // Notice the shorthand React render Fragment <> & </> instead of <div> & </div>, both work the same\r\n                <div className={classes.root}>\r\n                    <Grid container\r\n                    className={classes.rootGrid}\r\n                    direction=\"row\"\r\n                    justifyContent=\"flex-start\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={1}\r\n                    >\r\n                        <Grid item xs={5}>\r\n                            <Box mx={1} my={1}>\r\n                                <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                    {/* <Grid item>\r\n                                        <IconButton component={Link} to={backLink}>\r\n                                            <ArrowBackIosIcon />\r\n                                        </IconButton>\r\n                                    </Grid> */}\r\n                                    <Grid item xs>\r\n                                        <Typography variant=\"h4\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                                            Filling in {chapterOriginal? `\"${chapterOriginal.surveyTemplate.name}\"` : null}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box> \r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Box mx={1} my={1}>\r\n                                <AlertMessage alert={alert} setParentAlert={setAlert} />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Card raised={true}>\r\n                                <Box mx={2} my={1} boxShadow={0}>\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"column\"\r\n                                        justifyContent=\"flex-start\"\r\n                                        alignItems=\"stretch\"\r\n                                        spacing={1}\r\n                                    >\r\n                                        {chapterCopy?\r\n                                        (\r\n                                            <>\r\n                                                <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"h6\" component=\"h6\">\r\n                                                            Chapter Properties\r\n                                                        </Typography>\r\n                                                        <Divider />\r\n                                                    </Grid>\r\n                                                    <Grid item xs>\r\n                                                        <Box mx={3} my={1} boxShadow={0}>\r\n                                                            <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n                                                                <Grid item>\r\n                                                                    <Tooltip\r\n                                                                        placement=\"bottom\"\r\n                                                                        title=\"View Chapter\"\r\n                                                                    >\r\n                                                                        {mode === \"Admin\"? (\r\n                                                                            <Button \r\n                                                                                size=\"small\" \r\n                                                                                variant=\"contained\" \r\n                                                                                color=\"secondary\"\r\n                                                                                startIcon={<VisibilityIcon />}\r\n                                                                                component={Link}\r\n                                                                                to={`/administration/booklets/user/view/${ChapterID}`}\r\n                                                                            >\r\n                                                                                View\r\n                                                                            </Button>\r\n                                                                        ) : (\r\n                                                                            <>\r\n                                                                            </>\r\n                                                                        )}\r\n                                                                        \r\n                                                                    </Tooltip>\r\n                                                                </Grid>\r\n                                                                <Grid item>\r\n                                                                    <Tooltip\r\n                                                                        placement=\"bottom\"\r\n                                                                        title=\"Refresh Online Chapter\"\r\n                                                                    >\r\n                                                                        <Button \r\n                                                                            size=\"small\" \r\n                                                                            variant=\"contained\" \r\n                                                                            color=\"primary\"\r\n                                                                            startIcon={<RefreshIcon />}\r\n                                                                            onClick={() => { pullHandler(); }}\r\n                                                                        >\r\n                                                                            Refresh\r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                </Grid>\r\n                                                                {/* <Grid item>\r\n                                                                    <Tooltip\r\n                                                                        placement=\"bottom\"\r\n                                                                        title=\"Restore Chapter\"\r\n                                                                    >\r\n                                                                        <Button \r\n                                                                            size=\"small\" \r\n                                                                            variant=\"contained\" \r\n                                                                            color=\"primary\"\r\n                                                                            startIcon={<RestoreIcon />}\r\n                                                                            onClick={() => { restoreHandler(); }}\r\n                                                                        >\r\n                                                                            Restore\r\n                                                                        </Button>\r\n                                                                    </Tooltip>\r\n                                                                </Grid> */}\r\n                                                                <Grid item>\r\n                                                                    <Tooltip\r\n                                                                        placement=\"bottom\"\r\n                                                                        title=\"Restart Survey Progress\"\r\n                                                                    >\r\n                                                                        <Button \r\n                                                                            size=\"small\" \r\n                                                                            variant=\"contained\" \r\n                                                                            color=\"primary\"\r\n                                                                            startIcon={<ReplayIcon />}\r\n                                                                            onClick={() => { restartHandler(); }}\r\n                                                                        >\r\n                                                                            Restart\r\n                                                                        </Button>\r\n                                                                    </Tooltip>\r\n                                                                </Grid>\r\n                                                                <Grid item>\r\n                                                                    {progress? (\r\n                                                                        <Tooltip\r\n                                                                            placement=\"bottom\"\r\n                                                                            title=\"Save Chapter\"\r\n                                                                        >\r\n                                                                            <Button \r\n                                                                                size=\"small\" \r\n                                                                                variant=\"contained\" \r\n                                                                                color=\"primary\"\r\n                                                                                startIcon={<SaveIcon />}\r\n                                                                                disabled={!progress}\r\n                                                                                onClick={() => { saveHandler(); }}\r\n                                                                            >\r\n                                                                                Save\r\n                                                                            </Button>\r\n                                                                        </Tooltip> \r\n                                                                    ) : (\r\n                                                                        <Button \r\n                                                                            size=\"small\" \r\n                                                                            variant=\"contained\" \r\n                                                                            color=\"primary\"\r\n                                                                            startIcon={<SaveIcon />}\r\n                                                                            disabled={!progress}\r\n                                                                            onClick={() => { saveHandler(); }}\r\n                                                                        >\r\n                                                                            Save\r\n                                                                        </Button>\r\n                                                                    )}\r\n                                                                </Grid>\r\n                                                                {/* <Grid item>\r\n                                                                    <FormControlLabel\r\n                                                                        className={classes.FormControlLabel}\r\n                                                                        control={<Switch checked={chapterCopy.approved} onChange={ (event) => { approvedHandler(event); }} />}\r\n                                                                        label={chapterCopy.approved? \"Approved\" : \"Not Approved\"}\r\n                                                                        labelPlacement=\"end\"\r\n                                                                    />\r\n                                                                </Grid> */}\r\n                                                            </Grid>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Tooltip\r\n                                                            placement=\"left\"\r\n                                                            title=\"Use this page to Fill in your chapter. Any information that a patient has answered in a previous chapter version along with the questions they answered will still exist. Only NEW chapters will be affected.\"\r\n                                                        >\r\n                                                            <IconButton>\r\n                                                                <HelpOutlineIcon />\r\n                                                            </IconButton>\r\n                                                        </Tooltip>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={12}>\r\n                                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                                        <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>            \r\n                                                            <Grid item xs={3}>\r\n                                                                <TextField label=\"Name\"\r\n                                                                    disabled\r\n                                                                    size=\"small\"\r\n                                                                    fullWidth\r\n                                                                    variant=\"filled\"\r\n                                                                    value={chapterOriginal.surveyTemplate.name}\r\n                                                                    InputProps={{\r\n                                                                        readOnly: true,\r\n                                                                    }}\r\n                                                                />\r\n                                                            </Grid>\r\n                                                            <Grid item xs={1}>\r\n                                                                <TextField label=\"Version\"\r\n                                                                    disabled\r\n                                                                    size=\"small\"\r\n                                                                    fullWidth\r\n                                                                    variant=\"filled\"\r\n                                                                    value={chapterOriginal.__v}\r\n                                                                    InputProps={{\r\n                                                                        readOnly: true,\r\n                                                                    }}\r\n                                                                />\r\n                                                            </Grid>\r\n                                                            <Grid item xs={2}>\r\n                                                                <TextField label=\"Updated\"\r\n                                                                    disabled\r\n                                                                    size=\"small\"\r\n                                                                    fullWidth\r\n                                                                    variant=\"filled\"\r\n                                                                    value={new Date(chapterOriginal.updatedAt).toLocaleString()}\r\n                                                                    InputProps={{\r\n                                                                        readOnly: true,\r\n                                                                    }}\r\n                                                                />\r\n                                                            </Grid>\r\n                                                            <Grid item xs={2}>\r\n                                                                <TextField label=\"Updated By\"\r\n                                                                    disabled\r\n                                                                    size=\"small\"\r\n                                                                    fullWidth\r\n                                                                    variant=\"filled\"\r\n                                                                    value={chapterOriginal.modifiedBy}\r\n                                                                    InputProps={{\r\n                                                                        readOnly: true,\r\n                                                                    }}\r\n                                                                />\r\n                                                            </Grid>\r\n                                                            <Grid item xs={2}>\r\n                                                                <TextField label=\"Created\"\r\n                                                                    disabled\r\n                                                                    size=\"small\"\r\n                                                                    fullWidth\r\n                                                                    variant=\"filled\" \r\n                                                                    value={new Date(chapterOriginal.createdAt).toLocaleString()}\r\n                                                                    InputProps={{\r\n                                                                        readOnly: true,\r\n                                                                    }}\r\n                                                                />\r\n                                                            </Grid>\r\n                                                            <Grid item xs={2}>\r\n                                                                <TextField label=\"Created By\"\r\n                                                                    disabled\r\n                                                                    size=\"small\"\r\n                                                                    fullWidth\r\n                                                                    variant=\"filled\" \r\n                                                                    value={chapterOriginal.createdBy}\r\n                                                                    InputProps={{\r\n                                                                        readOnly: true,\r\n                                                                    }}\r\n                                                                />\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                    </Box>\r\n                                                </Grid>\r\n                                                <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"h6\" component=\"h6\" className={classes.button}>\r\n                                                            Chapter Survey\r\n                                                        </Typography>\r\n                                                        <Divider />\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </>\r\n                                        ) : (\r\n                                            <Grid item xs={12} container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1}>\r\n                                                <Grid item>\r\n                                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                                        <CircularProgress />\r\n                                                    </Box>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        )}   \r\n                                        <Grid item xs={12}>\r\n                                            <Box mx={1} my={1} boxShadow={0}>\r\n                                                <Collapse in={!surveyJSloading}>\r\n                                                    {survey.current != null?\r\n                                                    (\r\n                                                        <Survey.Survey id={surveyContainerID} model={survey.current}\r\n                                                            onComplete={  (result) => { completeHandler(result); }}\r\n                                                            onCurrentPageChanged={ (result) => { pageChangeHandler(result); }}\r\n                                                            onValueChanged={(result, options) => { valueChangeHandler(result, options); }} \r\n                                                        />\r\n                                                    ) : (\r\n                                                        null\r\n                                                    )}\r\n                                                </Collapse>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <SaveChapterDialog\r\n                        saveChapterDialog={saveChapterDialog}\r\n                        setSaveChapterDialog={setSaveChapterDialog}\r\n                        saveChapterDialogExecuting={saveChapterDialogExecuting}\r\n                        setSaveChapterDialogExecuting={setSaveChapterDialogExecuting}\r\n                        setParentAlert={setAlert}\r\n                        appState={appState}\r\n                        isTemplate={false}\r\n                        chapter={chapterCopy}\r\n                        chapterID={ChapterID}\r\n                    />\r\n                    <PullChapterDialog\r\n                        chapter={chapterOriginal}\r\n                        setParentAlert={setAlert}\r\n                        setParentLoadChapter={loadChapter}\r\n                        pullChapterDialog={pullChapterDialog}\r\n                        setPullChapterDialog={setPullChapterDialog}\r\n                        pullChapterDialogExecuting={pullChapterDialogExecuting}\r\n                        setPullChapterDialogExecuting={setPullChapterDialogExecuting}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <Typography variant=\"h6\" color=\"inherit\" align=\"center\" gutterBottom>\r\n                    Not Authorized. Please refresh and try again.\r\n                </Typography>\r\n            )\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nEditChapterUser.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    ChapterID: PropTypes.string.isRequired,\r\n    ToggleDrawerClose: PropTypes.func.isRequired,\r\n    CheckAuthenticationValidity: PropTypes.func.isRequired,\r\n    mode: PropTypes.string,\r\n}\r\n\r\nEditChapterUser.defaultProps = \r\n{\r\n    appState: {},\r\n    ChapterID: {},\r\n    ToggleDrawerClose: () => {},\r\n    CheckAuthenticationValidity: () => {},\r\n    mode: null\r\n}\r\n\r\nexport default EditChapterUser;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\nimport AlertMessage from '../../../../components/AlertMessage';\r\n\r\n// import 'nouislider/dist/nouislider.css'; This is the newer 15.5.0 version\r\n// import \"nouislider/distribute/nouislider.css\"; This is the old 9.2.0 version\r\n\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport '../../../../css/nouislider.fix.css';\r\n\r\nimport \"bootstrap-slider/dist/css/bootstrap-slider.css\";\r\n\r\nimport * as widgets from \"surveyjs-widgets\";\r\n\r\nimport * as Survey from \"survey-react\";\r\nimport \"survey-react/survey.css\";\r\n\r\n// ==================== Helpers =====================\r\nimport get from  '../../../../helpers/common/get';\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\n// ==================== MUI Icons ====================\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\nconst backLink = \"/administration/booklets/management\";\r\n\r\nconst surveyStyle = \"default\";\r\n \r\n// const surveyOptions = {\r\n\r\n// };\r\n\r\nconst surveyContainerID = \"surveyCreatorContainer\";\r\n\r\nSurvey.StylesManager.applyTheme(surveyStyle);\r\n\r\n// ================= Static Functions ================\r\n\r\n// ==================== Survey-JS Widget ====================\r\n\r\nwidgets.nouislider(Survey);\r\nwidgets.bootstrapslider(Survey);\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst ViewChapterUser = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, ChapterID, ToggleDrawerClose, CheckAuthenticationValidity } = props;\r\n\r\n        const [chapterOriginal, setChapterOriginal] = useState(null);\r\n\r\n        const [survey, setSurvey] = useState(null);\r\n\r\n        const [surveyJSloading, setSurveyJSLoading] = useState(true);\r\n\r\n        // Alert variable\r\n        const [alert, setAlert] = useState(new AlertType());\r\n\r\n    // Functions ===\r\n\r\n        // Loads existing booklet chosen by user from the database\r\n        const loadChapter = useCallback(() =>\r\n        {\r\n\r\n            if(ChapterID != null)\r\n            {\r\n                get(\"membersurveys/\" + ChapterID, appState.token, (error, response) => \r\n                {\r\n                    if(error)\r\n                    {\r\n                        setAlert(new AlertType('Unable to retrieve User Chapters. Please refresh and try again.', \"error\"));\r\n                    }\r\n                    else\r\n                    {\r\n                        if(response.status === 200 || response.status === 304)\r\n                        {\r\n                            setSurveyJSLoading(true);\r\n                            setChapterOriginal(response.data.memberSurvey);\r\n                            // console.log(response.data.memberSurvey);\r\n                            \r\n                        }\r\n                        else\r\n                        {\r\n                            setAlert(new AlertType('Unable to retrieve User Chapters. Please refresh and try again.', \"error\"));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setAlert(new AlertType('Unable to retrieve User Chapters. Please refresh and try again.', \"error\")); \r\n            }\r\n        }, [ ChapterID, appState ]);\r\n\r\n    // Hooks ===\r\n\r\n        // First Render only because of the [ ] empty array tracking with the useEffect\r\n        useEffect( () =>\r\n        {\r\n            ToggleDrawerClose();\r\n            setTimeout(() => {\r\n                CheckAuthenticationValidity( (tokenValid) => \r\n                {\r\n                    if(tokenValid)\r\n                    {\r\n                        // Load or Do Something\r\n                        Survey.StylesManager.applyTheme(surveyStyle);\r\n                        loadChapter();\r\n                    }\r\n                    else {\r\n\r\n                        // Bad Response\r\n                        setAlert(null);\r\n                    }\r\n                });\r\n            }, 200);    //\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ ]);\r\n\r\n        useEffect( () => \r\n        {\r\n            \r\n            if(chapterOriginal) {\r\n\r\n                try\r\n                {\r\n                    let surveyJSON = JSON.parse(chapterOriginal.surveyTemplate.surveyJSON);\r\n                    let responseJSON = JSON.parse(chapterOriginal.responseJSON); \r\n                    let tempSurvey = new Survey.Model(surveyJSON);\r\n                    tempSurvey.data = responseJSON;\r\n                    \r\n                    setSurvey(tempSurvey);\r\n\r\n                    setSurveyJSLoading(false);\r\n                    setAlert(new AlertType('Successfully pulled survey. Please go to the Edit page to add content to it.', \"success\"));\r\n                }\r\n                catch\r\n                {\r\n                    setAlert(new AlertType('Chapter survey is empty. Please go to the Edit page to add content to it.', \"error\"));\r\n                }       \r\n            }\r\n            else\r\n            {\r\n                setSurvey(null);\r\n            }\r\n\r\n        }, [ chapterOriginal ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            alert != null? (\r\n\r\n                // Notice the shorthand React render Fragment <> & </> instead of <div> & </div>, both work the same\r\n                <div className={classes.root}>\r\n                    <Grid container\r\n                    className={classes.rootGrid}\r\n                    direction=\"row\"\r\n                    justifyContent=\"flex-start\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={1}\r\n                    >\r\n                        <Grid item xs={5}>\r\n                            <Box mx={1} my={1}>\r\n                                <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                    {/* <Grid item>\r\n                                        <IconButton component={Link} to={backLink}>\r\n                                            <ArrowBackIosIcon />\r\n                                        </IconButton>\r\n                                    </Grid> */}\r\n                                    <Grid item xs>\r\n                                        <Typography variant=\"h4\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                                            Viewing {chapterOriginal? `\"${chapterOriginal.surveyTemplate.name}\"` : null}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box> \r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Box mx={1} my={1}>\r\n                                <AlertMessage alert={alert} setParentAlert={setAlert} />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Card raised={true}>\r\n                                <Box mx={2} my={1} boxShadow={0}>\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"column\"\r\n                                        justifyContent=\"flex-start\"\r\n                                        alignItems=\"stretch\"\r\n                                        spacing={1}\r\n                                    >\r\n                                        {chapterOriginal?\r\n                                        (\r\n                                            <>\r\n                                                <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"h6\" component=\"h6\">\r\n                                                            View User Chapter\r\n                                                        </Typography>\r\n                                                        <Divider />\r\n                                                    </Grid>\r\n                                                    <Grid item xs>\r\n                                                        <Box mx={3} my={1} boxShadow={0}>\r\n                                                            <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                                                <Grid item>\r\n                                                                    <Tooltip\r\n                                                                        placement=\"bottom\"\r\n                                                                        title=\"Edit Chapter\"\r\n                                                                    >\r\n                                                                        <Button \r\n                                                                            size=\"small\" \r\n                                                                            variant=\"contained\" \r\n                                                                            color=\"secondary\"\r\n                                                                            startIcon={<EditIcon />}\r\n                                                                            component={Link}\r\n                                                                            to={`/administration/booklets/user/edit/${ChapterID}`}\r\n                                                                        >\r\n                                                                            Edit\r\n                                                                        </Button>\r\n                                                                    </Tooltip>\r\n                                                                </Grid>\r\n                                                            </Grid>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Tooltip\r\n                                                            placement=\"left\"\r\n                                                            title=\"This page is to view the selected chapter. The chapter here will be in READ-ONLY mode. If you need to test your chapter, please navigate to the 'Edit' page from the management page.\"\r\n                                                        >\r\n                                                            <IconButton>\r\n                                                                <HelpOutlineIcon />\r\n                                                            </IconButton>\r\n                                                        </Tooltip>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </>\r\n                                        ) : (\r\n                                            <Grid item xs={12} container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1}>\r\n                                                <Grid item>\r\n                                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                                        <CircularProgress />\r\n                                                    </Box>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        )}   \r\n                                        <Grid item xs={12}>\r\n                                            <Box mx={1} my={1} boxShadow={0}>\r\n                                                <Collapse in={!surveyJSloading}>\r\n                                                    {survey != null?\r\n                                                    (\r\n                                                        <Survey.Survey id={surveyContainerID} model={survey} mode=\"display\" />\r\n                                                    ) : (\r\n                                                        null\r\n                                                    )}\r\n                                                </Collapse>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            ) : (\r\n                <Typography variant=\"h6\" color=\"inherit\" align=\"center\" gutterBottom>\r\n                    Not Authorized. Please refresh and try again.\r\n                </Typography>\r\n            )\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nViewChapterUser.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    ChapterID: PropTypes.string.isRequired,\r\n    ToggleDrawerClose: PropTypes.func.isRequired,\r\n    CheckAuthenticationValidity: PropTypes.func.isRequired\r\n}\r\n\r\nViewChapterUser.defaultProps = \r\n{\r\n    appState: {},\r\n    ChapterID: {},\r\n    ToggleDrawerClose: () => {},\r\n    CheckAuthenticationValidity: () => {}\r\n}\r\n\r\nexport default ViewChapterUser;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from  '@material-ui/core/ButtonGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\n// ==================== MUI Icons ====================\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport CheckBoxOutlineBlankOutlinedIcon from '@material-ui/icons/CheckBoxOutlineBlankOutlined';\r\nimport ListAltOutlinedIcon from '@material-ui/icons/ListAltOutlined';\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\nconst selectFilterOptionsSurvey = [ { key: \"SurveyName\", value: \"surveyName\", display: \"Name\"}, \r\n{ key: \"SurveyId\", value: \"surveyId\", display: \"ID\"} ];\r\n\r\nconst selectFilterOptionsMemberSurvey = [ { key: \"SurveyName\", value: \"surveyName\", display: \"Name\"}, { key: \"MemberSurveyId\", value: \"memberSurveyId\", display: \"ID\"},\r\n{ key: \"Completeness\", value: \"completeness\", display: \"Completeness\"}, \r\n{ key: \"MemberCollectionId\", value: \"memberCollectionId\", display: \"Member Collection ID\"},\r\n{ key: \"MemberName\", value: \"memberName\", display: \"Member Name\"}, \r\n{ key: \"MemberId\", value: \"memberId\", display: \"Member ID\"} ];\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst ManagementControlPanel = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const {  setParentAlert,\r\n            isDense, setIsDense,\r\n            isTemplates, setIsTemplates,\r\n            dataList, getParentData,\r\n            setSearchFilteredDataList,\r\n            setCreateChapterTemplateDialog,\r\n            setCreateChapterUserDialog } = props;\r\n\r\n        const [selectSearchFilterOption, setSelectSearchFilterOption ] = useState(selectFilterOptionsMemberSurvey[0].value);\r\n        const [searchFilter, setSearchFilter] = useState(\"\");\r\n\r\n    // Functions ===\r\n\r\n        const pullHandler = useCallback(() =>\r\n        {\r\n            try\r\n            {\r\n                getParentData();\r\n                setParentAlert(new AlertType('Refreshed initiated...', \"info\"));\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n            \r\n        }, [ getParentData, setParentAlert ]);\r\n\r\n        const createTemplateHandler = useCallback(() =>\r\n        {\r\n            setCreateChapterTemplateDialog(true);\r\n        }, [ setCreateChapterTemplateDialog ]);\r\n\r\n        const createUserHandler = useCallback(() =>\r\n        {\r\n            setCreateChapterUserDialog(true);\r\n        }, [ setCreateChapterUserDialog ]);\r\n\r\n        const compactHandler = useCallback((event) =>\r\n        {\r\n            setIsDense(event.target.checked);\r\n        }, [ setIsDense ]);\r\n\r\n        const chapterTemplatesButtonHandler = useCallback(() =>\r\n        {\r\n            setIsTemplates(true);\r\n            setSelectSearchFilterOption(selectFilterOptionsMemberSurvey[0].value);\r\n        }, [ setIsTemplates ]);\r\n\r\n        const userChaptersButtonHandler = useCallback(() =>\r\n        {\r\n            setIsTemplates(false);\r\n            setSelectSearchFilterOption(selectFilterOptionsMemberSurvey[0].value);\r\n        }, [ setIsTemplates ]);\r\n\r\n        const selectSearchHandler = useCallback((event) =>\r\n        {\r\n            setSearchFilter(\"\");\r\n            setSelectSearchFilterOption(event.target.value);\r\n\r\n        }, [ setSelectSearchFilterOption ]);\r\n\r\n        const searchHandler = useCallback((event) =>\r\n        {\r\n            let tempFilter = event.target.value.toUpperCase();\r\n            let tempArray = [];\r\n            dataList.forEach( item => \r\n            {\r\n                switch(selectSearchFilterOption)\r\n                {\r\n                    case \"surveyName\":\r\n\r\n                        if(item.name.toUpperCase().indexOf(tempFilter) > -1)\r\n                        {\r\n                            tempArray.push(item);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case \"surveyId\":\r\n\r\n                        if(item._id.toUpperCase().indexOf(tempFilter) > -1)\r\n                        {\r\n                            tempArray.push(item);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case \"memberSurveyId\":\r\n\r\n                        if(item._id.toUpperCase().indexOf(tempFilter) > -1)\r\n                        {\r\n                            tempArray.push(item);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case \"completeness\":\r\n\r\n                        if(item.completeness.toUpperCase().indexOf(tempFilter) > -1)\r\n                        {\r\n                            tempArray.push(item);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case \"memberCollectionId\":\r\n\r\n                            if(item.memberCollection._id.toUpperCase().indexOf(tempFilter) > -1)\r\n                            {\r\n                                tempArray.push(item);\r\n                            }\r\n    \r\n                            break;\r\n\r\n                    case \"memberName\":\r\n\r\n                        if(item.member.info.name.toUpperCase().indexOf(tempFilter) > -1)\r\n                        {\r\n                            tempArray.push(item);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case \"memberId\":\r\n\r\n                        if(item.member._id.toUpperCase().indexOf(tempFilter) > -1)\r\n                        {\r\n                            tempArray.push(item);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    default:\r\n                }\r\n                \r\n            });\r\n\r\n            setSearchFilter(event.target.value);\r\n            setSearchFilteredDataList(tempArray);\r\n        }, [ dataList, setSearchFilteredDataList, selectSearchFilterOption ]);\r\n\r\n\r\n    // Hooks ===\r\n\r\n        // First Render only because of the [ ] empty array tracking with the useEffect\r\n        useEffect( () =>\r\n        {\r\n            setSearchFilter(\"\");\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ dataList ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(isTemplates)\r\n            {\r\n                setSelectSearchFilterOption(selectFilterOptionsSurvey[0].value)\r\n            }\r\n            else\r\n            {\r\n                setSelectSearchFilterOption(selectFilterOptionsMemberSurvey[0].value)\r\n            }\r\n            \r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ isTemplates ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(searchFilter === \"\")\r\n            {\r\n                setSearchFilteredDataList(dataList);\r\n            }\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ setSelectSearchFilterOption, searchFilter ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                <Box mx={2} my={1} boxShadow={0}>\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justifyContent=\"flex-start\"\r\n                        alignItems=\"stretch\"\r\n                        spacing={1}\r\n                    >\r\n                        <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                            <Grid item>\r\n                                <Typography variant=\"h6\" component=\"h6\">\r\n                                    Manage\r\n                                </Typography>\r\n                                <Divider />\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <Box mx={3} my={1} boxShadow={0}>\r\n                                    <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n                                        <Grid item>\r\n                                            <ButtonGroup size=\"small\" variant=\"contained\" color=\"secondary\">\r\n                                                    <Button \r\n                                                        startIcon={<CheckBoxOutlineBlankOutlinedIcon />}\r\n                                                        disabled={isTemplates}\r\n                                                        onClick={ () => { chapterTemplatesButtonHandler(); }}\r\n                                                    >\r\n                                                        Chapter Templates\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        startIcon={<ListAltOutlinedIcon />}\r\n                                                        disabled={!isTemplates}\r\n                                                        onClick={ () => { userChaptersButtonHandler(); }}\r\n                                                    >\r\n                                                        User Chapters\r\n                                                    </Button>\r\n                                            </ButtonGroup>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Tooltip\r\n                                                placement=\"bottom\"\r\n                                                title=\"Refresh Online Chapters\"\r\n                                            >\r\n                                                <Button \r\n                                                    size=\"small\" \r\n                                                    variant=\"contained\" \r\n                                                    color=\"primary\"\r\n                                                    startIcon={<RefreshIcon />}\r\n                                                    onClick={() => { pullHandler(); }}\r\n                                                >\r\n                                                    Refresh\r\n                                                </Button>\r\n                                            </Tooltip> \r\n                                        </Grid>\r\n                                        {isTemplates? (\r\n                                            <>\r\n                                                <Grid item>\r\n                                                    <Tooltip\r\n                                                        placement=\"bottom\"\r\n                                                        title=\"Create Chapter Template\"\r\n                                                    >\r\n                                                        <Button \r\n                                                            size=\"small\" \r\n                                                            variant=\"contained\" \r\n                                                            color=\"primary\"\r\n                                                            disabled={!isTemplates}\r\n                                                            startIcon={<AddBoxOutlinedIcon />}\r\n                                                            onClick={() => { createTemplateHandler(); }}\r\n                                                        >\r\n                                                            Create Template\r\n                                                        </Button>\r\n                                                    </Tooltip> \r\n                                                </Grid>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <Grid item>\r\n                                                    <Tooltip\r\n                                                        placement=\"bottom\"\r\n                                                        title=\"Start Member Chapter\"\r\n                                                    >\r\n                                                        <Button \r\n                                                            size=\"small\" \r\n                                                            variant=\"contained\" \r\n                                                            color=\"primary\"\r\n                                                            disabled={isTemplates}\r\n                                                            startIcon={<AddBoxOutlinedIcon />}\r\n                                                            onClick={() => { createUserHandler(); }}\r\n                                                        >\r\n                                                            Start Member Chapter\r\n                                                        </Button>\r\n                                                    </Tooltip> \r\n                                                </Grid>\r\n                                            </>\r\n                                        )}\r\n                                        \r\n                                    </Grid>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Tooltip\r\n                                    placement=\"left\"\r\n                                    title=\"Use this page to manage your chapters. Any information that a patient has answered in a chapter along with its versions exist in the Chapter Tab. Otherwise, created chapter Templates exists in its own tab.\"\r\n                                >\r\n                                    <IconButton>\r\n                                        <HelpOutlineIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                            <Box mx={1} my={1} boxShadow={0}>\r\n                                <Card>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={3}>\r\n                                            <Grid item>\r\n                                                <Typography color=\"textPrimary\" variant=\"subtitle2\">\r\n                                                    Table Options\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <FormControlLabel\r\n                                                    control={<Switch checked={isDense} onChange={ (event) => { compactHandler(event); }} />}\r\n                                                    label=\"Compact\"\r\n                                                    labelPlacement=\"end\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <FormControl id=\"search-filter-select-label\" variant=\"filled\" size=\"small\" style={{minWidth: 140}}>\r\n                                                    <InputLabel>\r\n                                                        Search Filter\r\n                                                    </InputLabel>\r\n                                                    <Select\r\n                                                        autoWidth={true}\r\n                                                        labelId=\"search-filter-select-label\"\r\n                                                        value={selectSearchFilterOption}\r\n                                                        onChange={(event) => { selectSearchHandler(event); } }\r\n                                                    >\r\n                                                        {isTemplates? (\r\n                                                            selectFilterOptionsSurvey.map( item => \r\n                                                            {\r\n                                                                return(\r\n                                                                    <MenuItem key={item.key} value={item.value}>\r\n                                                                        <em>{item.display}</em>\r\n                                                                    </MenuItem>  \r\n                                                                )\r\n                                                            })\r\n                                                        ) : (\r\n                                                            selectFilterOptionsMemberSurvey.map( item => \r\n                                                            {\r\n                                                                return(\r\n                                                                    <MenuItem key={item.key} value={item.value}>\r\n                                                                        <em>{item.display}</em>\r\n                                                                    </MenuItem>  \r\n                                                                )\r\n                                                            })\r\n                                                        )}\r\n                                                        \r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                <TextField label=\"Search\"\r\n                                                    type=\"search\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"filled\"\r\n                                                    fullWidth\r\n                                                    value={searchFilter}\r\n                                                    onChange={ (event) => { searchHandler(event); }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Card>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={1}>\r\n                            <Grid item>\r\n                                <Typography variant=\"h6\" component=\"h6\">\r\n                                    Table\r\n                                </Typography>\r\n                                <Divider />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </>\r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nManagementControlPanel.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    isDense: PropTypes.bool.isRequired,\r\n    setIsDense: PropTypes.func.isRequired,\r\n    isTemplates:PropTypes.bool.isRequired,\r\n    setIsTemplates: PropTypes.func.isRequired,\r\n    dataList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    setSearchFilteredDataList: PropTypes.func.isRequired,\r\n    setCreateChapterTemplateDialog: PropTypes.func.isRequired,\r\n    setCreateChapterUserDialog: PropTypes.func.isRequired\r\n                        \r\n}\r\n\r\nManagementControlPanel.defaultProps = \r\n{\r\n    setParentAlert: () => {},\r\n    setIsDense: () => {},\r\n    setIsTemplates: () => {},\r\n    dataList: {},\r\n    getParentData: () => {},\r\n    setSearchFilteredDataList: () => {},\r\n    setCreateChapterTemplateDialog: () => {},\r\n    setCreateChapterUserDialog: () => {}\r\n}\r\n\r\nexport default ManagementControlPanel;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with SaveChapterDialog\r\n// ================================================\r\nimport React, { useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\nimport post from  '../../../../helpers/common/post';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// ==================== MUI Icons ====================\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst CreateChapterTemplateDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, setParentAlert, getParentData,\r\n            createChapterTemplateDialog, setCreateChapterTemplateDialog,\r\n            createChapterTemplateDialogExecuting, setCreateChapterTemplateDialogExecuting } = props;\r\n\r\n        const [ chapterName, setChapterName ] = useState(\"\");\r\n\r\n    // Functions ===\r\n\r\n        // Insert the new booklet into the database upon creation\r\n        const createChapterTemplate = useCallback(() =>\r\n        {\r\n            if(chapterName !== \"\") {\r\n                \r\n                var HttpDataObject = {\r\n                    name: chapterName,\r\n                    surveyJSON: \"\",\r\n                    createdBy: appState._id,\r\n                    modifiedBy: appState._id\r\n                };\r\n\r\n                post(\"surveys/\", appState.token, HttpDataObject, (error, response) =>\r\n                {\r\n                    if(error)\r\n                    {\r\n                        setParentAlert(new AlertType('Unable create chapter. Please refresh and try again.', \"error\"));\r\n                    }\r\n                    else\r\n                    {\r\n                        if(response.status === 201)\r\n                        {\r\n                            getParentData();\r\n                            setParentAlert(new AlertType('Successfully Created.', \"success\"));\r\n                            //const _id = response.data.survey._id; The id to redirect to if you wish\r\n                        }   \r\n                        else\r\n                        {\r\n                            setParentAlert(new AlertType('Unable create chapter. Please refresh and try again.', \"error\"));\r\n                        }\r\n                    }\r\n                });\r\n\r\n            }\r\n            else\r\n            {\r\n                setParentAlert(new AlertType('Unable create chapter. Please refresh and try again.', \"error\"));\r\n            }\r\n        }, [ appState, chapterName, setParentAlert]);\r\n\r\n        \r\n        const closeHandler = useCallback(() => {\r\n            setCreateChapterTemplateDialog(false);\r\n            setChapterName(\"\");\r\n        }, [ setCreateChapterTemplateDialog ]);\r\n\r\n\r\n        const createHandler = useCallback(() => {\r\n            try{\r\n                setCreateChapterTemplateDialogExecuting(true);\r\n                createChapterTemplate();\r\n                setCreateChapterTemplateDialogExecuting(false);\r\n                setCreateChapterTemplateDialog(false);\r\n                setChapterName(\"\");\r\n            }\r\n            catch{\r\n\r\n            }\r\n        }, [ setCreateChapterTemplateDialogExecuting, createChapterTemplate, setCreateChapterTemplateDialog, setParentAlert, getParentData]);\r\n\r\n        const nameHandler = useCallback((event) =>\r\n        {\r\n            setChapterName(event.target.value);\r\n        }, [ ]);\r\n\r\n    // Hooks ===\r\n\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {createChapterTemplateDialog? (\r\n                    <Dialog id=\"create-chapter-template-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={createChapterTemplateDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Create chapter\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {createChapterTemplateDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <>\r\n                                    <DialogContentText>\r\n                                        Please enter a valid name for your new chapter.\r\n                                    </DialogContentText>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                            <Grid item>\r\n                                                <TextField label=\"Chapter Name\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"filled\"\r\n                                                    error={chapterName === \"\"? true : false}\r\n                                                    fullWidth\r\n                                                    value={chapterName}\r\n                                                    onChange={ (event) => { nameHandler(event); }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </>\r\n                            )}\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={createChapterTemplateDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<AddBoxOutlinedIcon />} onClick={() => { createHandler(); }} disabled={createChapterTemplateDialogExecuting || chapterName === \"\"? true : false}>\r\n                                Create\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nCreateChapterTemplateDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    createChapterTemplateDialog: PropTypes.bool.isRequired,\r\n    setCreateChapterTemplateDialog: PropTypes.func.isRequired,\r\n    createChapterTemplateDialogExecuting: PropTypes.bool.isRequired,\r\n    setCreateChapterTemplateDialogExecuting: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nCreateChapterTemplateDialog.defaultProps = \r\n{\r\n    appState: {},\r\n    setParentAlert: () => {},\r\n    getParentData:  () => {},\r\n    setCreateChapterTemplateDialog:  () => {},\r\n    setCreateChapterTemplateDialogExecuting:  () => {}\r\n}\r\n\r\nexport default CreateChapterTemplateDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with SaveChapterDialog\r\n// ================================================\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\nimport get from '../../../../helpers/common/get';\r\nimport post from  '../../../../helpers/common/post';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// ==================== MUI Icons ====================\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst CreateChapterUserDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, setParentAlert, getParentData,\r\n            createChapterUserDialog, setCreateChapterUserDialog,\r\n            createChapterUserDialogExecuting, setCreateChapterUserDialogExecuting } = props;\r\n\r\n        const [ selectedMember, setSelectedMember ] = useState(\"\");\r\n        const [ selectedSurveyTemplate, setSelectedSurveyTemplate ] = useState(\"\");\r\n        const [ surveyTemplateList, setSurveyTemplateList ] = useState(null);\r\n        const [ memberList, setMemberList ] = useState(null);\r\n        \r\n\r\n    // Functions ===\r\n            \r\n        const populateSurveyTemplateList = useCallback((data) => \r\n        {\r\n            if(data)\r\n            {\r\n                let tempArray = [];\r\n\r\n                for (let index = 0; index < data.length; ++index) \r\n                {\r\n                    tempArray.push({\r\n                        _id: data[index]._id,\r\n                        name: data[index].name,\r\n                        surveyJSON: data[index].surveyJSON,\r\n                        createdAt: data[index].createdAt,\r\n                        updatedAt: data[index].updatedAt\r\n                    });\r\n                }\r\n\r\n                setSurveyTemplateList(tempArray);\r\n            }\r\n\r\n        }, [ ]);\r\n\r\n        const populateMemberList = useCallback((data) => \r\n        {\r\n            if(data)\r\n            {\r\n                let tempArray = [];\r\n\r\n                for (let index = 0; index < data.length; ++index) \r\n                {\r\n                    tempArray.push({\r\n                        _id: data[index]._id,\r\n                        name: data[index].info.name,\r\n                        role: data[index].role,\r\n                        email: data[index].email,\r\n                        createdAt: data[index].createdAt\r\n                    });\r\n\r\n                }\r\n\r\n                setMemberList(tempArray);\r\n            }\r\n\r\n        }, [ ]);\r\n\r\n        // Gets members based on account role\r\n        const getMembers = useCallback(() =>\r\n        {\r\n            // console.log(appState);\r\n\r\n            let MongoQuery;\r\n\r\n            if(appState.role === 'Patient')\r\n            {\r\n                MongoQuery = {\r\n                    _id: {\r\n                        $in: appState._id\r\n                    }\r\n                };\r\n            }\r\n            else\r\n            {\r\n                MongoQuery = {\r\n                    _id: {\r\n                        $in: appState.patients\r\n                    }\r\n                };\r\n            }\r\n\r\n            post('users/query', appState.token, MongoQuery, (error, response) => \r\n            {\r\n                if(error)\r\n                {\r\n                    setParentAlert(new AlertType(error.message, \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(response.status === 200 || response.status === 304)\r\n                    {\r\n                        populateMemberList(response.data.response.users); \r\n                    }\r\n                    else\r\n                    {\r\n                        setParentAlert(new AlertType('Unable to get assigned member list. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n            });\r\n\r\n        }, [ appState, populateMemberList, setParentAlert]);\r\n\r\n        // Gets all created booklets from the \"survey\" collection in the database\r\n        const getSurveyTemplates = useCallback(() =>\r\n        {\r\n            get(\"surveys/\",  appState.token, (error, response) => \r\n            {\r\n                if(error)\r\n                {\r\n                    setParentAlert(new AlertType(error.message, \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(response.status === 200)\r\n                    {\r\n                        populateSurveyTemplateList(response.data.surveyList);\r\n                    }\r\n                    else\r\n                    {\r\n                        setParentAlert(new AlertType('Unable to get chapter Survey Templates. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n            });\r\n        }, [ appState, populateSurveyTemplateList, setParentAlert]);\r\n\r\n        // Insert the new booklet into the database upon creation\r\n        const createMemberSurvey = useCallback(() =>\r\n        {\r\n            if(selectedSurveyTemplate !== \"\" && selectedMember !== \"\")\r\n            {\r\n                var postBody = {\r\n                    surveyTemplate: selectedSurveyTemplate,\r\n                    memberCollection: null,\r\n                    member: selectedMember,\r\n                    responseJSON: \"{}\",\r\n                    completeness: 0,\r\n                    createdBy: appState._id,\r\n                    modifiedBy: appState._id\r\n                };\r\n\r\n                post(\"membersurveys/\", appState.token, postBody, (error, response) =>\r\n                {\r\n                    if(error)\r\n                    {\r\n                        setParentAlert(new AlertType('Unable start member chapter. Please refresh and try again.', \"error\"));\r\n                    }\r\n                    else\r\n                    {\r\n                        if(response.status === 201)\r\n                        {\r\n                            getParentData();\r\n                            //const _id = response.data.survey._id; The id to redirect to if you wish\r\n                            setParentAlert(new AlertType('Successfully started member chapter.', \"success\")); \r\n                        }   \r\n                        else\r\n                        {\r\n                            setParentAlert(new AlertType('Unable start chapter. Please refresh and try again.', \"error\"));\r\n                        }\r\n                    }\r\n                });\r\n\r\n            }\r\n            else\r\n            {\r\n                setParentAlert(new AlertType('Unable start chapter. Please refresh and try again.', \"error\"));\r\n            }\r\n\r\n        }, [ appState, surveyTemplateList, selectedMember, memberList, selectedSurveyTemplate, setParentAlert, getParentData]);\r\n\r\n        \r\n        const closeHandler = useCallback(() => {\r\n            setCreateChapterUserDialog(false);\r\n            setSelectedSurveyTemplate(\"\");\r\n            setSelectedMember(\"\");\r\n        }, [ setCreateChapterUserDialog ]);\r\n\r\n\r\n        const createHandler = useCallback(() => {\r\n            try{\r\n                setCreateChapterUserDialogExecuting(true);\r\n                createMemberSurvey();\r\n                setCreateChapterUserDialogExecuting(false);\r\n                setCreateChapterUserDialog(false);\r\n                setSelectedSurveyTemplate(\"\");\r\n                setSelectedMember(\"\");\r\n            }\r\n            catch{\r\n\r\n            }\r\n        }, [ createMemberSurvey]);\r\n\r\n        const templateHandler = useCallback((event) =>\r\n        {\r\n            setSelectedSurveyTemplate(event.target.value);\r\n        }, [ ]);\r\n\r\n        const clientHandler = useCallback((event) =>\r\n        {\r\n            setSelectedMember(event.target.value);\r\n        }, [ ]);\r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () =>\r\n        {\r\n\r\n            if(createChapterUserDialog)\r\n            {\r\n                getSurveyTemplates();\r\n                getMembers(); \r\n            }\r\n            \r\n        }, [ createChapterUserDialog, getMembers, getSurveyTemplates ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {createChapterUserDialog? (\r\n                    <Dialog id=\"create-user-chapter-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={createChapterUserDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Start Member Chapter\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {createChapterUserDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <>\r\n                                    <DialogContentText>\r\n                                        Please enter a valid chapter template and client to create a member chapter.\r\n                                    </DialogContentText>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                            <Grid item xs>\r\n                                                {memberList? (\r\n                                                    <FormControl id=\"client-options-label\" variant=\"filled\" size=\"small\" fullWidth disabled={!memberList}>\r\n                                                            <InputLabel>\r\n                                                                Member\r\n                                                            </InputLabel>\r\n                                                            <Select\r\n                                                                fullWidth\r\n                                                                labelId=\"clietnt-options-label\"\r\n                                                                value={selectedMember}\r\n                                                                onChange={(event) => { clientHandler(event); } }\r\n                                                            >\r\n                                                                <MenuItem value=\"\">\r\n                                                                    <em>None</em>\r\n                                                                </MenuItem>\r\n                                                                {memberList.map( (item, index) => \r\n                                                                {\r\n                                                                    return(\r\n                                                                        <MenuItem key={item._id} value={item._id}>\r\n                                                                            <em>{item.name}</em>\r\n                                                                        </MenuItem>  \r\n                                                                    )\r\n                                                                })}\r\n                                                            </Select>\r\n                                                    </FormControl>\r\n                                                ) : (\r\n                                                    <CircularProgress />\r\n                                                )}  \r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                {surveyTemplateList? (\r\n                                                    <FormControl id=\"template-options-label\" variant=\"filled\" size=\"small\" fullWidth disabled={!surveyTemplateList}>\r\n                                                        <InputLabel>\r\n                                                            Chapter Template\r\n                                                        </InputLabel>\r\n                                                        <Select\r\n                                                            fullWidth\r\n                                                            labelId=\"template-options-label\"\r\n                                                            value={selectedSurveyTemplate}\r\n                                                            onChange={(event) => { templateHandler(event); } }\r\n                                                        >\r\n                                                            <MenuItem value=\"\">\r\n                                                                <em>None</em>\r\n                                                            </MenuItem>\r\n                                                            {surveyTemplateList.map( (item, index) => \r\n                                                            {\r\n                                                                return(\r\n                                                                    <MenuItem key={item._id} value={item._id}>\r\n                                                                        <em>{item.name}</em>\r\n                                                                    </MenuItem>  \r\n                                                                )\r\n                                                            })}\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                ) : (\r\n                                                    <CircularProgress />\r\n                                                )}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </>\r\n                            )}\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={createChapterUserDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<AddBoxOutlinedIcon />} onClick={() => { createHandler(); }} disabled={createChapterUserDialogExecuting || (surveyTemplateList === \"\"? true : false) || (selectedMember === \"\"? true : false)}>\r\n                                Start\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nCreateChapterUserDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    createChapterUserDialog: PropTypes.bool.isRequired,\r\n    setCreateChapterUserDialog: PropTypes.func.isRequired,\r\n    createChapterUserDialogExecuting: PropTypes.bool.isRequired,\r\n    setCreateChapterUserDialogExecuting: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nCreateChapterUserDialog.defaultProps = \r\n{\r\n    appState: {},\r\n    setParentAlert: () => {},\r\n    getParentData:  () => {},\r\n    createChapterUserDialog: {},\r\n    setCreateChapterUserDialog: () => {},\r\n    createChapterUserDialogExecuting: {},\r\n    setCreateChapterUserDialogExecuting: () => {}\r\n}\r\n\r\nexport default CreateChapterUserDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with ExportChapterDialog\r\n// ================================================\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\nimport * as Survey from \"survey-react\";\r\nimport * as SurveyPDF from 'survey-pdf';\r\nimport \"survey-react/survey.css\";\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// ==================== MUI Icons ====================\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\nconst surveyStyle = \"default\";\r\n \r\n// const surveyOptions = {\r\n\r\n// }; \r\n\r\nconst defaultPdfWidth = 210;\r\nconst defaultPdfHeight = 297; \r\n\r\nconst pdfDimensions = {\r\n    inputProps: { min: 1 }\r\n}\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst ExportChapterDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n\r\n        const { isTemplates, getParentData, setParentAlert, selectedDataItemsList,\r\n            exportChapterDialog, setExportChapterDialog,\r\n            exportChapterDialogExecuting, setExportChapterDialogExecuting  } = props;\r\n\r\n        const [pdfWidth, setPdfWidth] = useState(defaultPdfWidth);\r\n        const [pdfHeight, setPdfHeight] = useState(defaultPdfHeight);\r\n\r\n    // Functions ===\r\n\r\n        const exportChapter = useCallback(() =>\r\n        {\r\n            if(pdfWidth > 0 && pdfHeight > 0 && selectedDataItemsList.length > 0)\r\n            {\r\n                selectedDataItemsList.forEach( item =>\r\n                {\r\n                    let surveyJSON = \"\";\r\n                    let responseJSON = \"{}\";\r\n                    \r\n                    if(isTemplates)\r\n                    {\r\n                        if(item.surveyJSON !== \"\")\r\n                        {\r\n                            surveyJSON = JSON.parse(item.surveyJSON);\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        if(item.surveyTemplate)\r\n                        {\r\n                            surveyJSON = JSON.parse(item.surveyTemplate.surveyJSON);\r\n                        }\r\n                    }\r\n\r\n                    \r\n                    if(Object.prototype.hasOwnProperty.call(item, \"responseJSON\"))\r\n                    {\r\n                        responseJSON = JSON.parse(item.responseJSON);\r\n                    }\r\n\r\n                    const pdfOptions = {\r\n                        format: [parseInt(pdfWidth) || defaultPdfWidth, parseInt(pdfHeight) || defaultPdfHeight],\r\n                        fontSize: 14,\r\n                        margins: {\r\n                            left: 10,\r\n                            right: 10,\r\n                            top: 18,\r\n                            bot: 10\r\n                        }\r\n                    };\r\n\r\n                    let surveyPDF = new SurveyPDF.SurveyPDF(surveyJSON, pdfOptions);\r\n                    \r\n                    if(Object.prototype.hasOwnProperty.call(item, \"responseJSON\"))\r\n                    {\r\n                        surveyPDF.data = responseJSON;\r\n                    }\r\n\r\n                    surveyPDF.save(item._id + item.name + \".pdf\");\r\n\r\n                });\r\n            }\r\n            else\r\n            {\r\n                throw new Error('Bad Export.');\r\n            }\r\n        }, [ pdfWidth, pdfHeight, selectedDataItemsList ]);\r\n        \r\n        const closeHandler = useCallback(() => {\r\n            setExportChapterDialog(false);\r\n            setPdfWidth(defaultPdfWidth);\r\n            setPdfHeight(defaultPdfHeight);\r\n        }, [ setPdfWidth, setPdfHeight, setExportChapterDialog ]);\r\n\r\n\r\n        const exportHandler = useCallback(() => {\r\n            try{\r\n                setExportChapterDialogExecuting(true);\r\n                exportChapter();\r\n                setExportChapterDialogExecuting(false);\r\n                setExportChapterDialog(false);\r\n                setPdfWidth(defaultPdfWidth);\r\n                setPdfHeight(defaultPdfHeight);\r\n                getParentData();\r\n                setParentAlert(new AlertType(`Successfully exported ${selectedDataItemsList.length} chapter${selectedDataItemsList.length > 1? \"s\" : \"\"}.`, \"success\"));\r\n                \r\n            }\r\n            catch{\r\n                setParentAlert(new AlertType(`Unable export chapter${selectedDataItemsList.length > 1? \"s\" : \"\"}. Please refresh and try again.`, \"error\"));\r\n            }\r\n        }, [ setPdfWidth, setPdfHeight, exportChapter, selectedDataItemsList, setExportChapterDialogExecuting, setExportChapterDialog, setParentAlert, getParentData]);\r\n\r\n        const widthHandler = useCallback((event) =>\r\n        {\r\n            if(event.target.value !== \"\")\r\n            {\r\n                setPdfWidth(parseInt(event.target.value));\r\n            }\r\n            \r\n        }, [ setPdfWidth ]);\r\n\r\n        const heightHandler = useCallback((event) =>\r\n        {\r\n\r\n            if(event.target.value !== \"\")\r\n            {\r\n                setPdfHeight(parseInt(event.target.value));\r\n            }\r\n\r\n        }, [ setPdfHeight ]);\r\n\r\n    // Hooks ===\r\n\r\n        // First Render only because of the [ ] empty array tracking with the useEffect\r\n        useEffect( () =>\r\n        {\r\n            Survey.StylesManager.applyTheme(surveyStyle);\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ ]);\r\n\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {exportChapterDialog? (\r\n                    <Dialog id=\"export-chapter-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={exportChapterDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Export chapter{selectedDataItemsList.length > 1? \"s\" : \"\"}\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {exportChapterDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <>\r\n                                    <DialogContentText>\r\n                                        Exporting {selectedDataItemsList.length} chapter{selectedDataItemsList.length > 1? \"s\" : \"\"}. Please enter valid pdf width and height values for your export.\r\n                                    </DialogContentText>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                            <Grid item xs>\r\n                                                <TextField label=\"Pdf Width\"\r\n                                                    type=\"number\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"filled\"\r\n                                                    InputProps={pdfDimensions}\r\n                                                    error={pdfWidth <= 0? true : false && parseInt(pdfHeight)}\r\n                                                    fullWidth\r\n                                                    value={pdfWidth}\r\n                                                    onChange={ (event) => { widthHandler(event); }}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                <TextField label=\"Pdf Height\"\r\n                                                    type=\"number\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"filled\"\r\n                                                    InputProps={pdfDimensions}\r\n                                                    error={pdfHeight <= 0? true : false && parseInt(pdfHeight)}\r\n                                                    fullWidth\r\n                                                    value={pdfHeight}\r\n                                                    onChange={ (event) => { heightHandler(event); }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </>\r\n                            )}\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={exportChapterDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<SystemUpdateAltIcon />} onClick={() => { exportHandler(); }} disabled={exportChapterDialogExecuting}>\r\n                                Export\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nExportChapterDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    isTemplates: PropTypes.bool.isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    selectedDataItemsList: PropTypes.arrayOf(PropTypes.object),\r\n    exportChapterDialog: PropTypes.bool.isRequired,\r\n    setExportChapterDialog: PropTypes.func.isRequired,\r\n    exportChapterDialogExecuting: PropTypes.bool.isRequired,\r\n    setExportChapterDialogExecuting: PropTypes.func.isRequired \r\n}\r\n\r\nExportChapterDialog.defaultProps = \r\n{\r\n    exportChapterDialog: true,\r\n    getParentData: () => {},\r\n    setParentAlert: () => {},\r\n    selectedDataItemsList: {},\r\n    exportChapterDialog: {},\r\n    setExportChapterDialog: () => {},\r\n    exportChapterDialogExecuting: {},\r\n    setExportChapterDialogExecuting: () => {}\r\n}\r\n\r\nexport default ExportChapterDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with SaveChapterDialog\r\n// ================================================\r\nimport React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\nimport del from '../../../../helpers/common/delete';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// ==================== MUI Icons ====================\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst DeleteChapterDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, getParentData, setParentAlert, isTemplate,\r\n            deleteChapterDialog, setDeleteChapterDialog,\r\n            deleteChapterDialogExecuting, setDeleteChapterDialogExecuting,\r\n            selectedDataItemsList, setSelectedDataItemsList  } = props;\r\n\r\n\r\n    // Functions ===\r\n\r\n        const deleteChapterSelected = useCallback(() =>\r\n        {\r\n            if(selectedDataItemsList)\r\n            {\r\n                selectedDataItemsList.forEach(item => {\r\n                    del((isTemplate? \"surveys/\" : \"membersurveys/\") + item._id, appState.token, (error, response) => \r\n                    {\r\n                        if(error)\r\n                        {\r\n                            setDeleteChapterDialog(false);\r\n                            setParentAlert(new AlertType('Unable to save chapter(s). Please try again.', \"error\"));\r\n                        }\r\n                        else\r\n                        {\r\n                            if(response.status === 200)\r\n                            {\r\n                                getParentData();\r\n                                setParentAlert(new AlertType('Successfully deleted. You can continue working.', \"success\")); \r\n                            }   \r\n                            else\r\n                            {\r\n                                setDeleteChapterDialog(false);\r\n                                setParentAlert(new AlertType('Unable to save chapter(s). Please try again.', \"error\"));\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setDeleteChapterDialog(false);\r\n                setParentAlert(new AlertType('Unable to save chapter(s). Please try again.', \"error\"));\r\n            }\r\n\r\n            // window.location.reload(); Last resort, refresh the entire page\r\n        }, [ appState, selectedDataItemsList, setDeleteChapterDialog, setParentAlert, getParentData, isTemplate]);\r\n\r\n        \r\n        const closeHandler = useCallback(() => {\r\n            setDeleteChapterDialog(false);\r\n        }, [ setDeleteChapterDialog ]);\r\n\r\n\r\n        const deleteHandler = useCallback(() => {\r\n            try{\r\n                setDeleteChapterDialogExecuting(true);\r\n                deleteChapterSelected();\r\n                setDeleteChapterDialogExecuting(false);\r\n                setDeleteChapterDialog(false);\r\n                setSelectedDataItemsList([]);\r\n            }\r\n            catch{\r\n\r\n            }\r\n        }, [ setDeleteChapterDialogExecuting, deleteChapterSelected, setSelectedDataItemsList, setDeleteChapterDialog]);\r\n\r\n\r\n    // Hooks ===\r\n\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {selectedDataItemsList? (\r\n                    <Dialog id=\"delete-chapter-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={deleteChapterDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Delete chapter{selectedDataItemsList.length === 1? null : \"s\"}\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {deleteChapterDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <DialogContentText>\r\n                                    {selectedDataItemsList.length === 1? (\r\n                                        <>\r\n                                            Are you sure you would like to delete the chapter?\r\n                                        </>\r\n                                        \r\n                                    ) : (\r\n                                        <>\r\n                                            {`Are you sure you would like to delete the ${selectedDataItemsList.length} chapters?`}\r\n                                        </>\r\n                                    )}\r\n                                </DialogContentText>\r\n                            )}\r\n                        \r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={deleteChapterDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<DeleteIcon />} onClick={() => { deleteHandler(); }} disabled={deleteChapterDialogExecuting}>\r\n                                Delete\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nDeleteChapterDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    isTemplate: PropTypes.bool.isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    deleteChapterDialog: PropTypes.bool.isRequired,\r\n    setDeleteChapterDialog: PropTypes.func.isRequired,\r\n    deleteChapterDialogExecuting: PropTypes.bool.isRequired,\r\n    setDeleteChapterDialogExecuting: PropTypes.func.isRequired,\r\n    selectedDataItemsList: PropTypes.arrayOf(PropTypes.object),\r\n    setSelectedDataItemsList: PropTypes.func.isRequired\r\n}\r\n\r\nDeleteChapterDialog.defaultProps = \r\n{\r\n    appState: {},\r\n    isTemplate: {},\r\n    getParentData: () => {},\r\n    setParentAlert: () => {},\r\n    deleteChapterDialog: {},\r\n    setDeleteChapterDialog: () => {},\r\n    deleteChapterDialogExecuting: {},\r\n    setDeleteChapterDialogExecuting: () => {},\r\n    selectedDataItemsList: {},\r\n    setSelectedDataItemsList: () => {}\r\n}\r\n\r\nexport default DeleteChapterDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport { TableHead } from '@material-ui/core';\r\nimport { TableRow } from '@material-ui/core';\r\nimport { TableCell } from '@material-ui/core';\r\nimport { TableSortLabel } from '@material-ui/core';\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\n// ==================== MUI Icons ====================\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        visuallyHidden: {\r\n            border: 0,\r\n            clip: 'rect(0 0 0 0)',\r\n            height: 1,\r\n            margin: -1,\r\n            overflow: 'hidden',\r\n            padding: 0,\r\n            position: 'absolute',\r\n            top: 20,\r\n            width: 1,\r\n          }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n    const headCellsChapterTemplates = [ //This is a user specified array is used to populate the table header cells. Notice the Template Specifications\r\n        { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\r\n        { id: 'id', numeric: false, disablePadding: true, label: 'ID' },\r\n        { id: 'createdAt', numeric: true, disablePadding: false, label: 'Date Created' },\r\n        { id: 'updatedAt', numeric: true, disablePadding: false, label: 'Date Last Modified' },\r\n    ];\r\n\r\n    const headCellsUserChapters = [ //This is a user specified array is used to populate the table header cells. Notice the Template Specifications\r\n        { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\r\n        { id: 'id', numeric: false, disablePadding: true, label: 'ID' },\r\n        { id: 'completeness', numeric: false, disablePadding: true, label: 'Completeness' },\r\n        { id: 'memberName', numeric: false, disablePadding: true, label: 'Client Name' },\r\n        { id: 'memberId', numeric: false, disablePadding: true, label: 'Client ID' },\r\n        { id: 'memberCollectionId', numeric: false, disablePadding: true, label: 'Member Collection ID' },\r\n        { id: 'surveyTemplateId', numeric: false, disablePadding: true, label: 'Survey Template ID' },\r\n        { id: 'createdAt', numeric: true, disablePadding: false, label: 'Date Created' },\r\n        { id: 'updatedAt', numeric: true, disablePadding: false, label: 'Date Last Modified' },\r\n    ];\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst ChapterTableHead = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, isTemplates } = props;\r\n\r\n        const [headCells, setHeadCells] = useState(null);\r\n\r\n        \r\n    // Functions ===\r\n\r\n        const createSortHandler = useCallback((property) => (event) => {\r\n            onRequestSort(event, property);\r\n        }, [ onRequestSort ]);\r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(isTemplates)\r\n            {\r\n                setHeadCells(headCellsChapterTemplates);\r\n            }\r\n            else \r\n            {\r\n                setHeadCells(headCellsUserChapters);\r\n            }\r\n        }, [ isTemplates ]);\r\n\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                            checked={rowCount > 0 && numSelected === rowCount}\r\n                            onChange={onSelectAllClick}\r\n                            inputProps={{ 'aria-label': 'select all' }}\r\n                        />\r\n                    </TableCell>\r\n                    {headCells? ( \r\n                        headCells.map((headCell) => (\r\n                            <TableCell\r\n                                key={headCell.id}\r\n                                align={headCell.numeric ? 'right' : 'left'}\r\n                                padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                                sortDirection={orderBy === headCell.id ? order : false}\r\n                            >\r\n                                <TableSortLabel\r\n                                    active={orderBy === headCell.id}\r\n                                    direction={orderBy === headCell.id ? order : 'asc'}\r\n                                    onClick={createSortHandler(headCell.id)}\r\n                                >\r\n                                {headCell.label}\r\n                                {orderBy === headCell.id ? (\r\n                                    <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                    </span>\r\n                                ) : null}\r\n                                </TableSortLabel>\r\n                            </TableCell>\r\n                        ))\r\n                    ) : ( \r\n                        null\r\n                    )}\r\n                </TableRow>\r\n            </TableHead>\r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nChapterTableHead.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n    isTemplates: PropTypes.bool.isRequired\r\n}\r\n\r\nChapterTableHead.defaultProps = \r\n{\r\n    numSelected: {},\r\n    onRequestSort: () => {},\r\n    onSelectAllClick: () => {},\r\n    order: {},\r\n    orderBy: {},\r\n    rowCount: {},\r\n    isTemplates: {}\r\n}\r\n\r\nexport default ChapterTableHead;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';                // Used for link navigation to other areas on the website\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\nimport clsx from 'clsx';                                // Constructing className strings conditionally. Used for render logic\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport { lighten } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// ==================== MUI Icons ====================\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(1),\r\n          },\r\n          highlight:\r\n            theme.palette.type === 'light'\r\n              ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n                }\r\n              : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n                },\r\n          title: {\r\n            flex: '1 1 100%',\r\n          }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\nconst editChapterBaseLink = \"/administration/booklets/\";\r\nconst viewChapterBaseLink = \"/administration/booklets/\";\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst ChapterTableToolbar = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { isTemplates, selectedDataItemsList, setParentDeleteChapterDialog, setParentExportChapterDialog} = props;\r\n        \r\n        const [viewUrl, setViewUrl] = useState(\"\");\r\n        const [editUrl, setEditUrl] = useState(\"\");\r\n\r\n        const [toolNone, setToolNone] = useState(false);\r\n        const [toolOne, setToolOne] = useState(false);\r\n        const [toolMultiple, setToolMultiple] = useState(false);\r\n\r\n    // Functions ===\r\n    \r\n        const toolHandler = useCallback(() => {\r\n            if(selectedDataItemsList.length === 0) {\r\n                setToolNone(true);\r\n                setToolOne(false);\r\n                setToolMultiple(false);\r\n            }\r\n            else if(selectedDataItemsList.length === 1) {\r\n                setToolNone(false);\r\n                setToolOne(true);\r\n                setToolMultiple(false);\r\n            }\r\n            else if(selectedDataItemsList.length > 1) {\r\n                setToolNone(false);\r\n                setToolOne(false);\r\n                setToolMultiple(true);\r\n            }\r\n        }, [ selectedDataItemsList, setToolNone, setToolOne, setToolMultiple]);\r\n    \r\n\r\n        const deleteHandler = useCallback(() => {\r\n            setParentDeleteChapterDialog(true);\r\n        }, [ setParentDeleteChapterDialog ]);\r\n\r\n        const exportHandler = useCallback(() => {\r\n            setParentExportChapterDialog(true);\r\n        }, [ setParentExportChapterDialog ]);\r\n        \r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () =>\r\n        {\r\n            toolHandler();  \r\n        }, [ selectedDataItemsList, toolHandler ]);\r\n\r\n        useEffect( () => {\r\n            \r\n            if(toolNone || toolMultiple) {\r\n                setViewUrl(\"\");\r\n                setEditUrl(\"\");\r\n            }\r\n            else if(toolOne) {\r\n                \r\n                if(isTemplates)\r\n                {\r\n                    setViewUrl(viewChapterBaseLink + \"template/view/\" + selectedDataItemsList[0]._id);\r\n                    setEditUrl(editChapterBaseLink + \"template/edit/\" + selectedDataItemsList[0]._id);\r\n                }\r\n                else\r\n                {\r\n                    setViewUrl(viewChapterBaseLink + \"user/view/\" + selectedDataItemsList[0]._id);\r\n                    setEditUrl(editChapterBaseLink + \"user/edit/\" + selectedDataItemsList[0]._id);\r\n                }\r\n                \r\n            }\r\n\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [toolNone, toolOne, toolMultiple, isTemplates ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <Toolbar\r\n                className={clsx(classes.root, { [classes.highlight]: selectedDataItemsList.length > 0 } )}\r\n            >\r\n                {selectedDataItemsList.length > 0 ? (\r\n                    <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                        {selectedDataItemsList.length} Selected Item{selectedDataItemsList.length > 1 ? \"s\" : null}\r\n                    </Typography>\r\n                ) : (\r\n                    <Typography className={classes.title} variant=\"h6\" component=\"div\">\r\n                        {isTemplates? \"Chapter Template Results\" : \"User Chapter Results\"}\r\n                    </Typography>\r\n                )}\r\n\r\n                {toolNone ? (\r\n                    <>\r\n                        <Tooltip title=\"Filter list\">\r\n                            <IconButton aria-label=\"filter list\">\r\n                                <FilterListIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                ) : (null)}\r\n                \r\n                {toolOne? (\r\n                    <>\r\n                        <Tooltip title=\"View\">\r\n                            <IconButton aria-label=\"view\" component={Link} to={viewUrl} >\r\n                                <VisibilityIcon/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                            \r\n                        <Tooltip title={isTemplates? \"Edit\" : \"Fill in\"}>\r\n                            <IconButton aria-label=\"edit\" component={Link} to={editUrl} >\r\n                                <EditIcon/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                            \r\n                        <Tooltip title=\"Export\" onClick={() => exportHandler()}>\r\n                            <IconButton aria-label=\"export\">\r\n                                <SystemUpdateAltIcon/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                            \r\n                        <Tooltip title=\"Delete\">\r\n                            <IconButton aria-label=\"delete\" onClick={() => deleteHandler()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                ) : (null)}\r\n                {toolMultiple ? (\r\n                    <>\r\n                        <Tooltip title=\"Export\">\r\n                            <IconButton aria-label=\"export\" onClick={() => exportHandler()}>\r\n                                <SystemUpdateAltIcon/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title=\"Delete\">\r\n                            <IconButton aria-label=\"delete\" onClick={() => deleteHandler()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                ) : (null)}\r\n            </Toolbar>\r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nChapterTableToolbar.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    isTemplates: PropTypes.bool.isRequired,\r\n    selectedDataItemsList: PropTypes.array.isRequired,\r\n    setParentDeleteChapterDialog: PropTypes.func.isRequired,\r\n    setParentExportChapterDialog: PropTypes.func.isRequired\r\n}\r\n\r\nChapterTableToolbar.defaultProps = \r\n{\r\n    isTemplates: {},\r\n    selectedDataItemsList: {},\r\n    setParentDeleteChapterDialog: () => {},\r\n    setParentExportChapterDialog: () => {}\r\n}\r\n\r\nexport default ChapterTableToolbar;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with Templates Table Component.\r\n// Displays all existing Templates created and allows\r\n// user to delete, edit and preview the Templates\r\n// survey questions.\r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// ===================== Extra Modules ======================\r\n\r\nimport ChapterTableHead from './ChapterTableHead';\r\nimport ChapterTableToolbar from './ChapterTableToolbar';\r\n\r\n// ==================== Helpers ====================\r\n\r\n// ==================== MUI ====================\r\nimport Box from '@material-ui/core/Box';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// ==================== Icons ====================\r\n\r\n// ==================== Static Helper Functions ====================\r\n\r\n    const descendingComparator = (a, b, orderBy) => {    // Establishing the result of a comparison between two objects in an array\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n    }\r\n\r\n    const getComparator = (order, orderBy) => {            // Deciding asc or desc comparison, notice the negative version of the funcion above\r\n\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    const stableSort = (array, comparator) => {\r\n\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(1),\r\n        },\r\n        tableRow: {\r\n            cursor: \"pointer\"\r\n        }\r\n    }));\r\n\r\n// ==================== Static Variables ====================\r\n\r\n//=================================================== TemplateTable Component ===================================================\r\nexport default function ChapterTable(props) {\r\n\r\n  // Variables ===\r\n\r\n         // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        const { isTemplates, isDense, searchFilteredDataList, setParentDeleteChapterDialog, setParentExportChapterDialog,\r\n            selectedDataItemsList, setSelectedDataItemsList } = props;\r\n\r\n        // Responsive Table variables\r\n        const [order, setOrder] = useState('asc');\r\n        const [orderBy, setOrderBy] = useState('name');\r\n        const [page, setPage] = useState(0);\r\n        const [rowsPerPage, setRowsPerPage] = useState(20);\r\n\r\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, searchFilteredDataList.length - page * rowsPerPage);\r\n\r\n\r\n    // Functions ===\r\n\r\n        const handleRequestSort = useCallback((event, property) => {\r\n\r\n            // console.log(property);\r\n\r\n            let isAsc = orderBy === property && order === 'asc';\r\n            setOrder(isAsc ? 'desc' : 'asc');\r\n            setOrderBy(property);\r\n\r\n        }, [ order, setOrder, orderBy, setOrderBy ]);\r\n\r\n        const handleSelectAllClick = useCallback((event) => {\r\n\r\n            if (event.target.checked) {\r\n\r\n                let newSelecteds = []\r\n                \r\n                searchFilteredDataList.forEach(elem => \r\n                {\r\n                    newSelecteds.push(elem);\r\n                });\r\n                \r\n                setSelectedDataItemsList(newSelecteds);\r\n                \r\n                return;\r\n\r\n            }\r\n\r\n            setSelectedDataItemsList([]);\r\n        }, [ searchFilteredDataList, setSelectedDataItemsList ]);\r\n\r\n        const handleClick = useCallback((event, item) => {\r\n            \r\n            let previousSelectedIds = selectedDataItemsList.map(elem => elem._id);\r\n            let selectedIndex = previousSelectedIds.indexOf(item._id);\r\n            let newSelected = [];\r\n\r\n            if (selectedIndex === -1)\r\n            {\r\n                newSelected = newSelected.concat(selectedDataItemsList, item);\r\n            }\r\n            else if (selectedIndex === 0)\r\n            {\r\n                newSelected = newSelected.concat(selectedDataItemsList.slice(1));\r\n            }\r\n            else if (selectedIndex === selectedDataItemsList.length - 1)\r\n            {\r\n                newSelected = newSelected.concat(selectedDataItemsList.slice(0, -1));\r\n            }\r\n            else if (selectedIndex > 0)\r\n            {\r\n                newSelected = newSelected.concat(\r\n                    selectedDataItemsList.slice(0, selectedIndex),\r\n                    selectedDataItemsList.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            setSelectedDataItemsList(newSelected);\r\n        }, [ selectedDataItemsList, setSelectedDataItemsList ]);\r\n\r\n        const isSelected = useCallback((item) => {\r\n\r\n            let previousSelectedIds = selectedDataItemsList.map(elem => elem._id);\r\n            return previousSelectedIds.indexOf(item._id) !== -1;\r\n\r\n        }, [ selectedDataItemsList ]);\r\n        \r\n        const handleChangePage = useCallback((newPage) => {\r\n\r\n            setPage(newPage);\r\n\r\n        }, [ setPage ]);\r\n\r\n        const handleChangeRowsPerPage = useCallback((event) => {\r\n            setRowsPerPage(parseInt(event.target.value, 10));\r\n            setPage(0);\r\n        }, [ setRowsPerPage, setPage]);\r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () =>\r\n        {\r\n            setPage(0);\r\n        }, [ searchFilteredDataList ]);\r\n\r\n    // Render Section ===\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n        \r\n            <Box mx={1} my={1}>\r\n                <Paper className={classes.paper}>\r\n                    <ChapterTableToolbar\r\n                        isTemplates={isTemplates} \r\n                        selectedDataItemsList={selectedDataItemsList} \r\n                        setParentDeleteChapterDialog={setParentDeleteChapterDialog} \r\n                        setParentExportChapterDialog={setParentExportChapterDialog}\r\n                    />\r\n                    <TableContainer>\r\n                        <Table\r\n                            className={classes.table}\r\n                            aria-labelledby=\"tableTitle\"\r\n                            size={isDense ? 'small' : 'medium'}\r\n                            aria-label=\"enhanced table\"\r\n                        >\r\n                            <ChapterTableHead\r\n                                numSelected={selectedDataItemsList.length}\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                onSelectAllClick={handleSelectAllClick}\r\n                                onRequestSort={handleRequestSort}\r\n                                rowCount={searchFilteredDataList.length}\r\n                                isTemplates={isTemplates}\r\n                            />\r\n\r\n                            <TableBody>\r\n                                {stableSort(searchFilteredDataList, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((item, index) => {\r\n                                    const isItemSelected = isSelected(item);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            className={classes.tableRow}\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, item)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={item.name + item._id}\r\n                                            selected={isItemSelected}\r\n\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </TableCell>\r\n\r\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                                <Typography color=\"textPrimary\" variant=\"subtitle2\" noWrap style={{display: 'inline-block', width: '360px'}}>\r\n                                                    {isTemplates? item.name : item.surveyTemplate? item.surveyTemplate.name : \"\"}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"left\" padding=\"none\">\r\n                                                <Typography color=\"textPrimary\" variant=\"subtitle2\" noWrap style={{display: 'inline-block', width: '120px'}}>\r\n                                                    {item._id}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n\r\n                                            {isTemplates? (\r\n                                                <>\r\n\r\n                                                    <TableCell align=\"right\">\r\n                                                        <Typography color=\"primary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                            {new Date(item.createdAt).toLocaleDateString()}\r\n                                                        </Typography>\r\n                                                        <Typography color=\"secondary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                            {new Date(item.createdAt).toLocaleTimeString()}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n\r\n                                                    <TableCell align=\"right\">\r\n                                                        <Typography color=\"primary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                            {new Date(item.updatedAt).toLocaleDateString()}\r\n                                                        </Typography>\r\n                                                        <Typography color=\"secondary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                            {new Date(item.updatedAt).toLocaleTimeString()}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n\r\n                                                    <TableCell align=\"left\" padding=\"none\">\r\n                                                        <Typography color=\"primary\" variant=\"body2\" noWrap style={{display: 'inline-block', width: '120px'}}>\r\n                                                            {item.completeness}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n\r\n                                                    {/* <TableCell align=\"left\" padding=\"none\">\r\n                                                        <Typography color=\"primary\" variant=\"body2\" style={{display: 'inline-block', width: '120px', color: item.approved? 'green' : 'red' }}>\r\n                                                            {item.approved? \"true\" : \"false\"}\r\n                                                        </Typography>\r\n                                                    </TableCell> */}\r\n\r\n                                                    <TableCell align=\"left\" padding=\"none\">\r\n                                                        <Typography color=\"textPrimary\" variant=\"body2\" noWrap style={{display: 'inline-block', width: '120px'}}>\r\n                                                            {item.member? item.member.info? item.member.info.name : \"\" : \"\"}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n\r\n                                                    <TableCell align=\"left\" padding=\"none\">\r\n                                                        <Typography color=\"textPrimary\" variant=\"body2\" noWrap style={{display: 'inline-block', width: '120px'}}>\r\n                                                            {item.member? item.member._id : \"\"}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n\r\n                                                    <TableCell align=\"left\" padding=\"none\">\r\n                                                        <Typography color=\"textPrimary\" variant=\"body2\" noWrap style={{display: 'inline-block', width: '120px'}}>\r\n                                                            {item.memberCollection? item.memberCollection : \"N/A\"}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n\r\n                                                    <TableCell align=\"left\" padding=\"none\">\r\n                                                        <Typography color=\"textPrimary\" variant=\"body2\" noWrap style={{display: 'inline-block', width: '120px'}}>\r\n                                                            {item.surveyTemplate? item.surveyTemplate._id : \"\"}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n\r\n                                                    <TableCell align=\"right\">\r\n                                                        <Typography color=\"primary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                            {new Date(item.createdAt).toLocaleDateString()}\r\n                                                        </Typography>\r\n                                                        <Typography color=\"secondary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                            {new Date(item.createdAt).toLocaleTimeString()}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n\r\n                                                    <TableCell align=\"right\">\r\n                                                        <Typography color=\"primary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                            {new Date(item.updatedAt).toLocaleDateString()}\r\n                                                        </Typography>\r\n                                                        <Typography color=\"secondary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                            {new Date(item.updatedAt).toLocaleTimeString()}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                </>\r\n                                            )}\r\n\r\n                                            \r\n                                        \r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n\r\n                                {emptyRows > 0 && (\r\n                                    <TableRow style={{ height: (isDense ? 33 : 53) * emptyRows }}>\r\n                                        <TableCell colSpan={6} />\r\n                                    </TableRow>\r\n                                )}\r\n\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    {searchFilteredDataList.length > 0? (\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 15, 20, 25]}\r\n                            component=\"div\"\r\n                            count={searchFilteredDataList.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={searchFilteredDataList.length <= rowsPerPage? 0 : page}\r\n                            onPageChange={ (event, pageNumber) => { handleChangePage(pageNumber); }}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    ) : (\r\n                        null\r\n                    )}\r\n                </Paper>\r\n            </Box>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nChapterTable.propTypes = {\r\n    searchFilteredDataList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    setParentDeleteChapterDialog: PropTypes.func.isRequired,\r\n    setParentExportChapterDialog: PropTypes.func.isRequired,\r\n    selectedDataItemsList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    setSelectedDataItemsList: PropTypes.func.isRequired\r\n}\r\n\r\nChapterTable.defaultProps =\r\n{\r\n    searchFilteredDataList: {},\r\n    setParentDeleteChapterDialog: () => {},\r\n    setParentExportChapterDialog: () => {},\r\n    selectedDataItemsList: {},\r\n    setSelectedDataItemsList: () => {}\r\n}","// ================================================\r\n// Code associated with Template Management page.\r\n// Displays all existing Templates created and allows\r\n// user to delete, edit and preview the Templates\r\n// survey questions.\r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Components ====================\r\nimport ManagementControlPanel from '../Management/ManagementControlPanel';\r\nimport CreateChapterTemplateDialog from '../Dialog/CreateChapterTemplateDialog';\r\nimport CreateChapterUserDialog from '../Dialog/CreateChapterUserDialog';\r\nimport ExportChapterDialog from '../Dialog/ExportChapterDialog';\r\nimport DeleteChapterDialog from '../Dialog/DeleteChapterDialog';\r\nimport AlertMessage from '../../../../components/AlertMessage';\r\nimport ChapterTable from '../ChapterTable/ChapterTable';\r\n\r\n// ==================== Helpers ====================\r\nimport get from '../../../../helpers/common/get';\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI ====================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\n// ==================== Styles ====================\r\nconst useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n({\r\n    root: {\r\n        flexGrow: 1     // CSS determined this way, flexbox properties\r\n    }\r\n}));\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst Management = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, ToggleDrawerClose, CheckAuthenticationValidity } = props;\r\n\r\n        // Template or User Chapters boolean\r\n        const [isTemplates, setIsTemplates] = useState(true);\r\n        \r\n        // IsDense ; is the template table in compact form\r\n        const [isDense, setIsDense] = useState(true);\r\n\r\n        // Current dataList variable\r\n        const [dataList, setDataList] = useState(null);\r\n\r\n        // Current dataList variable\r\n        const [searchFilteredDataList, setSearchFilteredDataList] = useState(null);\r\n\r\n        // Current selected items dataList variable\r\n        const [selectedDataItemsList, setSelectedDataItemsList] = useState(null);\r\n\r\n        // Create Chapter Template Dialog Logic variables\r\n        const [createChapterTemplateDialog, setCreateChapterTemplateDialog] = useState(false);\r\n        const [createChapterTemplateDialogExecuting, setCreateChapterTemplateDialogExecuting] = useState(false);\r\n\r\n        // Export Chapter / Template Dialog Logic variables\r\n        const [exportChapterDialog, setExportChapterDialog] = useState(false);\r\n        const [exportChapterDialogExecuting, setExportChapterDialogExecuting] = useState(false);\r\n\r\n        // Create Chapter Template Dialog Logic variables\r\n        const [deleteChapterDialog, setDeleteChapterDialog] = useState(false);\r\n        const [deleteChapterDialogExecuting, setDeleteChapterDialogExecuting] = useState(false);\r\n\r\n        // Create User Chapter Dialog Logic variables\r\n        const [createChapterUserDialog, setCreateChapterUserDialog] = useState(false);\r\n        const [createChapterUserDialogExecuting, setCreateChapterUserDialogExecuting] = useState(false);\r\n\r\n\r\n        // Alert variable\r\n        const [alert, setAlert] = useState(new AlertType());\r\n\r\n    // Functions ===\r\n\r\n        const populateList = useCallback((data) => \r\n        {\r\n            let tempArray = [];\r\n\r\n            if(isTemplates) {\r\n                for (let index = 0; index < data.length; ++index) \r\n                {\r\n                    tempArray.push(\r\n                        {\r\n                            _id: data[index]._id,\r\n                            name: data[index].name,\r\n                            surveyJSON: data[index].surveyJSON,\r\n                            createdAt: data[index].createdAt,\r\n                            createdBy: data[index].createdBy,\r\n                            updatedAt: data[index].updatedAt,\r\n                            modifiedBy: data[index].modifiedBy\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                for (let index = 0; index < data.length; ++index) \r\n                {\r\n                    tempArray.push(\r\n                        {\r\n                            _id: data[index]._id,\r\n                            surveyTemplate: data[index].surveyTemplate,\r\n                            memberCollection: data[index].memberCollection || \"\",\r\n                            member: data[index].member,\r\n                            responseJSON: data[index].responseJSON,\r\n                            completeness: data[index].completeness,\r\n                            createdAt: data[index].createdAt,\r\n                            createdBy: data[index].createdBy,\r\n                            updatedAt: data[index].updatedAt,\r\n                            modifiedBy: data[index].modifiedBy\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n\r\n            setDataList([...tempArray]);\r\n            setSearchFilteredDataList([...tempArray]);\r\n            setSelectedDataItemsList([]);\r\n\r\n        }, [ isTemplates ] );\r\n\r\n        // Retrieve the list of Current user Chapters\r\n        const getUserChapters = useCallback(() => \r\n        {\r\n\r\n            setDataList(null);\r\n\r\n            get(\"membersurveys/\", appState.token, (err, res) => \r\n            {\r\n                if(err)\r\n                {   \r\n                    //Bad callback call\r\n                    //setAlert(new AlertType(err.message, \"error\"));\r\n                    setAlert(new AlertType('Unable to retrieve User Chapters. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(res.status === 200)\r\n                    {\r\n                        populateList(res.data.memberSurveyList);\r\n                    }\r\n                    else\r\n                    {\r\n                        //Bad HTTP Response\r\n                        setAlert(new AlertType('Unable to retrieve User Chapters. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n\r\n            });\r\n        }, [ populateList, appState.token ] );\r\n        \r\n        // Retrieve the list of Current Templates\r\n        const getTemplates = useCallback(() => \r\n        {\r\n            setDataList(null);\r\n\r\n            get(\"surveys/\", appState.token, (err, res) => \r\n            {\r\n                if(err)\r\n                {\r\n                    //Bad callback call\r\n                    //setAlert(new AlertType(err.message, \"error\"));\r\n                    setAlert(new AlertType('Unable to retrieve templates. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(res.status === 200)\r\n                    {\r\n                        populateList(res.data.surveyList);\r\n                    }\r\n                    else\r\n                    {\r\n                        //Bad HTTP Response\r\n                        setAlert(new AlertType('Unable to retrieve templates. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n\r\n            });\r\n        }, [ populateList, appState.token ] );\r\n\r\n\r\n        const getData = useCallback(() => {\r\n            // console.log(\"Get Data Invoked\", new Date());\r\n            isTemplates? getTemplates() : getUserChapters();\r\n        }, [ isTemplates, getTemplates, getUserChapters ] );\r\n\r\n    // Hooks ===\r\n\r\n        // Fetch DataList | First Render Only\r\n        useEffect( () =>\r\n        {\r\n            ToggleDrawerClose();\r\n            setTimeout(() => {\r\n                CheckAuthenticationValidity( (tokenValid) => \r\n                {\r\n                    if(tokenValid)\r\n                    {\r\n                        getData();\r\n                    }\r\n                    else {\r\n                        //Bad HTTP Response\r\n                        setAlert(null);\r\n                    }\r\n                });\r\n            }, 200);\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ ]);\r\n\r\n        // Fetch DataList version | Based on isTemplate or not\r\n        useEffect( () => {\r\n            getData();\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ isTemplates ] );\r\n\r\n        useEffect( () => {\r\n            \r\n            setSearchFilteredDataList(dataList);\r\n            setSelectedDataItemsList([]);\r\n\r\n        }, [ dataList ] );\r\n\r\n    // Component Render Section ===\r\n    return (\r\n        alert != null? (\r\n            // Notice the shorthand React render Fragment <> & </> instead of <div> & </div>, both work the same\r\n            <div className={classes.root}>\r\n                <Grid container\r\n                direction=\"row\"\r\n                justifyContent=\"flex-start\"\r\n                alignItems=\"stretch\"\r\n                style={ {\"height\": \"100%\"} }\r\n                spacing={1}\r\n                >\r\n                    <Grid item xs={5}>\r\n                        <Box mx={1} my={1}>\r\n                            <Typography variant=\"h5\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                                Manage Chapters\r\n                            </Typography>\r\n                        </Box> \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Box mx={1} my={1}>\r\n                            <AlertMessage alert={alert} setParentAlert={setAlert} />\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Box mx={1} my={1} boxShadow={3}>\r\n                            <Card raised={true}>\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"column\"\r\n                                    justifyContent=\"flex-start\"\r\n                                    alignItems=\"stretch\"\r\n                                    spacing={0}\r\n                                >\r\n                                    {dataList && searchFilteredDataList && selectedDataItemsList? (\r\n                                        <Grid item xs={12}>\r\n                                            <ManagementControlPanel\r\n                                                isDense={isDense}\r\n                                                setIsDense={setIsDense}\r\n                                                isTemplates={isTemplates}\r\n                                                setIsTemplates={setIsTemplates}\r\n                                                dataList={dataList}\r\n                                                getParentData={getData}\r\n                                                setSearchFilteredDataList={setSearchFilteredDataList}\r\n                                                setCreateChapterTemplateDialog={setCreateChapterTemplateDialog}\r\n                                                setCreateChapterUserDialog={setCreateChapterUserDialog}\r\n                                                setParentAlert={setAlert}\r\n                                            />\r\n                                            <ChapterTable\r\n                                                isTemplates={isTemplates}\r\n                                                isDense={isDense}\r\n                                                searchFilteredDataList={searchFilteredDataList}\r\n                                                selectedDataItemsList={selectedDataItemsList}\r\n                                                setSelectedDataItemsList={setSelectedDataItemsList}\r\n                                                setParentDeleteChapterDialog={setDeleteChapterDialog}\r\n                                                setParentExportChapterDialog={setExportChapterDialog}\r\n                                            />\r\n                                        </Grid>\r\n                                    ) : (\r\n                                        <Grid item xs={12} container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1}>\r\n                                            <Grid item>\r\n                                                <Box mx={1} my={1} boxShadow={0}>\r\n                                                    <CircularProgress />\r\n                                                </Box>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    )}\r\n                                </Grid>\r\n                            </Card>\r\n                        </Box>    \r\n                    </Grid>\r\n                </Grid>\r\n                <CreateChapterTemplateDialog\r\n                    createChapterTemplateDialog={createChapterTemplateDialog}\r\n                    setCreateChapterTemplateDialog={setCreateChapterTemplateDialog}\r\n                    createChapterTemplateDialogExecuting={createChapterTemplateDialogExecuting}\r\n                    setCreateChapterTemplateDialogExecuting={setCreateChapterTemplateDialogExecuting}\r\n                    setParentAlert={setAlert}\r\n                    getParentData={getData}\r\n                    appState={appState}\r\n                />\r\n                <CreateChapterUserDialog\r\n                    createChapterUserDialog={createChapterUserDialog}\r\n                    setCreateChapterUserDialog={setCreateChapterUserDialog}\r\n                    createChapterUserDialogExecuting={createChapterUserDialogExecuting}\r\n                    setCreateChapterUserDialogExecuting={setCreateChapterUserDialogExecuting}\r\n                    setParentAlert={setAlert}\r\n                    getParentData={getData}\r\n                    appState={appState}\r\n                />\r\n                <ExportChapterDialog\r\n                    isTemplates={isTemplates}\r\n                    exportChapterDialog={exportChapterDialog}\r\n                    setExportChapterDialog={setExportChapterDialog}\r\n                    exportChapterDialogExecuting={exportChapterDialogExecuting}\r\n                    setExportChapterDialogExecuting={setExportChapterDialogExecuting}\r\n                    selectedDataItemsList={selectedDataItemsList}\r\n                    setParentAlert={setAlert}\r\n                    getParentData={getData}\r\n                />\r\n                <DeleteChapterDialog\r\n                    deleteChapterDialog={deleteChapterDialog}\r\n                    setDeleteChapterDialog={setDeleteChapterDialog}\r\n                    deleteChapterDialogExecuting={deleteChapterDialogExecuting}\r\n                    setDeleteChapterDialogExecuting={setDeleteChapterDialogExecuting}\r\n                    selectedDataItemsList={selectedDataItemsList}\r\n                    setSelectedDataItemsList={setSelectedDataItemsList}\r\n                    setParentAlert={setAlert}\r\n                    getParentData={getData}\r\n                    isTemplate={isTemplates}\r\n                    appState={appState}\r\n                />\r\n            </div>\r\n        ) : (\r\n            <Typography variant=\"h6\" color=\"inherit\" align=\"center\" gutterBottom>\r\n                Not Authorized. Please refresh and try again.\r\n            </Typography>\r\n        )\r\n        \r\n    );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nManagement.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    ToggleDrawerClose: PropTypes.func.isRequired,\r\n    CheckAuthenticationValidity: PropTypes.func.isRequired\r\n}\r\n\r\nManagement.defaultProps = {\r\n    appState: {},\r\n    ToggleDrawerClose: () => {},\r\n    CheckAuthenticationValidity: () => {}\r\n}\r\n\r\nexport default Management;  // You can even shorthand this line by adding this at the function [Component] declaration stage","import React, { Component } from 'react';\r\n\r\n// ==================== MUI ====================\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    title: theme.title\r\n});\r\n\r\nclass Dashboard404 extends Component \r\n{\t\r\n\trender()\r\n\t{\r\n        let { classes } = this.props;\r\n\r\n\t\treturn (            \r\n            <Card>\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\r\n                        Error - 404.\r\n                    </Typography>\r\n                    <Typography>\r\n                        The page you are looking for does not exist.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(Dashboard404);","// ================================================\r\n// Code associated with SaveChapterDialog\r\n// ================================================\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\nimport get from  '../../../../helpers/common/get';\r\nimport post from '../../../../helpers/common/post'\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { FormControl, InputLabel, Select, MenuItem, Typography } from '@material-ui/core';\r\n\r\n// ==================== MUI Icons ====================\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst CreateMemberCollectionDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, setParentAlert, getParentData,\r\n            createMemberCollectionDialog, setCreateMemberCollectionDialog,\r\n            createMemberCollectionDialogExecuting, setCreateMemberCollectionDialogExecuting } = props;\r\n\r\n        const [projectList, setProjectList] = useState(null);\r\n        const [selectedProject, setSelectedProject] = useState(\"\");\r\n        const [selectedProjectList, setSelectedProjectList] = useState([]);\r\n\r\n        const [collectionTemplateList, setCollectionTemplateList] = useState(null);\r\n        const [selectedCollectionTemplate, setSelectedCollectionTemplate] = useState(\"\");\r\n        const [selectedCollectionTemplateList, setSelectedCollectionTemplateList] = useState([]);\r\n\r\n        const [memberList, setMemberList] = useState(null);\r\n        const [selectedMember, setSelectedMember] = useState(\"\");\r\n        const [selectedMemberList, setSelectedMemberList] = useState([]);\r\n\r\n    // Functions ===\r\n\r\n        const populateMemberList = useCallback((data) =>\r\n        {\r\n            let tempArray = new Array();\r\n\r\n            if(data && Array.isArray(data))\r\n            {\r\n                data.forEach(item => {\r\n\r\n                    tempArray.push(\r\n                        {\r\n                            _id: item._id,\r\n                            name: item.info.name,\r\n                            projectList: item.projectList,\r\n                            collectionList: item.collectionList,\r\n                            memberCollectionList: item.memberCollectionList,\r\n                            memberSurveyList: item.memberSurveyList,\r\n                            createdBy: item.createdBy,\r\n                            createdAt: item.updatedAt,\r\n                            modifiedBy: item.modifiedBy,\r\n                            updatedAt: item.updatedAt\r\n                        });\r\n                });\r\n            }\r\n\r\n            console.log(tempArray);\r\n\r\n            setMemberList([...tempArray]);\r\n\r\n        }, [ appState, setMemberList]);\r\n\r\n        const getCollectionTemplateList = useCallback(() =>\r\n        {\r\n            // const queryBody = {\r\n            //     projectList: {\r\n            //         $in: selectedProject\r\n            //     }\r\n            // }\r\n\r\n            get('collections/', appState.token, (error, response) => \r\n            {\r\n                if(error)\r\n                {\r\n                    setParentAlert(new AlertType('Unable to get collection Templates. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(response.status === 200)\r\n                    {\r\n                        setCollectionTemplateList(response.data.collectionList);\r\n                    }\r\n                    else\r\n                    {\r\n                        setParentAlert(new AlertType('Unable to get collection Templates. Please refresh and try again.', \"error\"));\r\n\r\n                    }\r\n                }\r\n            });\r\n        }, [ appState, selectedProject ]);\r\n\r\n        const getMemberList = useCallback(() =>\r\n        {\r\n            const queryBody = {\r\n                collectionList: {\r\n                    $in: selectedCollectionTemplateList[0]._id\r\n                }\r\n            }\r\n\r\n            post('users/query', appState.token, queryBody, (error, response) => \r\n            {\r\n                if(error)\r\n                {\r\n                    setParentAlert(new AlertType('Unable to get members. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(response.status === 200)\r\n                    {\r\n                        populateMemberList(response.data.response.users);\r\n                    }\r\n                    else\r\n                    {\r\n                        setParentAlert(new AlertType('Unable to get members. Please refresh and try again.', \"error\"));\r\n\r\n                    }\r\n                }\r\n            });\r\n\r\n        }, [ appState, selectedCollectionTemplateList ]);\r\n\r\n        const createMemberCollection = useCallback(() =>\r\n        {\r\n            if(selectedCollectionTemplateList.length == 0 || selectedMemberList.length == 0)\r\n            {\r\n                setParentAlert(new AlertType('Unable create member Collection. Please make sure Service, and member are not empty.', \"error\"))\r\n                return;\r\n            }\r\n\r\n            let postBody = {\r\n                collectionTemplate: selectedCollectionTemplateList[0]._id,\r\n                member: selectedMemberList[0]._id,\r\n                createdBy: appState._id,\r\n                modifiedBy: appState._id,\r\n            }\r\n            \r\n            post(\"membercollections/\",  appState.token, postBody, (error, response) => \r\n            {\r\n                if(error)\r\n                {\r\n                    setParentAlert(new AlertType('Unable create  member Collection. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(response.status === 201)\r\n                    {\r\n                        getParentData();\r\n                        setParentAlert(new AlertType('Member Collection created.', \"success\"));\r\n                    }\r\n                    else\r\n                    {\r\n                        setParentAlert(new AlertType('Unable create Member Collection. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n            });\r\n\r\n        }, [ appState, selectedCollectionTemplateList, selectedMemberList ] );\r\n\r\n        // const selectProjectHandler = useCallback((event) =>\r\n        // {\r\n        //     setSelectedProject(event.target.value);\r\n        // }, [ ]);\r\n\r\n        const selectCollectionTemplateHandler = useCallback((event) =>\r\n        {\r\n            setSelectedCollectionTemplate(event.target.value);\r\n        }, [ ]);\r\n\r\n        const selectMemberHandler = useCallback((event) =>\r\n        {\r\n            setSelectedMember(event.target.value);\r\n        }, [ ]);\r\n\r\n        // const addProjectHandler = useCallback((item) =>\r\n        // {\r\n        //     if(selectedProject && selectedProject != \"\")\r\n        //     {\r\n        //         let tempSurveyObject = projectList.find(item => item._id == selectedProject);\r\n\r\n        //         if(tempSurveyObject != undefined)\r\n        //         {\r\n        //             setSelectedProjectList([...selectedProjectList, tempSurveyObject]);\r\n        //             setSelectedProject(\"\");\r\n        //         }\r\n        //     }\r\n\r\n        // }, [ projectList, selectedProject, selectedProjectList]);\r\n\r\n        const addCollectionTemplateHandler = useCallback((item) =>\r\n        {\r\n            if(selectedCollectionTemplate && selectedCollectionTemplate != \"\")\r\n            {\r\n                let tempSurveyObject = collectionTemplateList.find(item => item._id == selectedCollectionTemplate);\r\n\r\n                if(tempSurveyObject != undefined)\r\n                {\r\n                    setSelectedCollectionTemplateList([...selectedProjectList, tempSurveyObject]);\r\n                    setSelectedCollectionTemplate(\"\");\r\n                }\r\n            }\r\n\r\n        }, [ collectionTemplateList, selectedCollectionTemplate, selectedCollectionTemplateList]);\r\n\r\n        const addMemberHandler = useCallback((item) =>\r\n        {\r\n            if(selectedMember && selectedMember != \"\")\r\n            {\r\n                let tempSurveyObject = memberList.find(item => item._id == selectedMember);\r\n\r\n                if(tempSurveyObject != undefined)\r\n                {\r\n                    setSelectedMemberList([...selectedMemberList, tempSurveyObject]);\r\n                    setSelectedMember(\"\");\r\n                }\r\n            }\r\n\r\n        }, [ memberList, selectedMember, selectedMemberList]);\r\n\r\n        // const removeProjectHandler = useCallback((item) =>\r\n        // {\r\n        //     let tempList = selectedProjectList;\r\n\r\n        //     tempList.splice(selectedProjectList.findIndex(oldItem => oldItem._id == item._id), 1);\r\n\r\n        //     setSelectedProjectList([...tempList]);\r\n\r\n        // }, [selectedProjectList, setSelectedProjectList ]);\r\n\r\n        const removeCollectionTemplateHandler = useCallback((item) =>\r\n        {\r\n            let tempList = selectedCollectionTemplateList;\r\n\r\n            tempList.splice(selectedCollectionTemplateList.findIndex(oldItem => oldItem._id == item._id), 1);\r\n\r\n            setSelectedCollectionTemplateList([...tempList]);\r\n\r\n        }, [selectedCollectionTemplateList, setSelectedCollectionTemplateList ]);\r\n\r\n        const removeMemberHandler = useCallback((item) =>\r\n        {\r\n            let tempList = selectedMemberList;\r\n\r\n            tempList.splice(selectedMemberList.findIndex(oldItem => oldItem._id == item._id), 1);\r\n\r\n            setSelectedMemberList([...tempList]);\r\n\r\n        }, [selectedMemberList, setSelectedMemberList ]);\r\n\r\n        const closeHandler = useCallback(() => {\r\n            setCreateMemberCollectionDialog(false);\r\n        }, [ setCreateMemberCollectionDialog ]);\r\n\r\n\r\n        const createHandler = useCallback(() => {\r\n            try{\r\n                setCreateMemberCollectionDialogExecuting(true);\r\n                createMemberCollection();\r\n                setCreateMemberCollectionDialogExecuting(false);\r\n                setCreateMemberCollectionDialog(false);\r\n            }\r\n            catch{\r\n\r\n            }\r\n        }, [ setCreateMemberCollectionDialogExecuting, createMemberCollection, setCreateMemberCollectionDialog, setParentAlert]);\r\n\r\n\r\n    // Hooks ===\r\n\r\n    \r\n        // Fetch User List | First Render Only\r\n        useEffect( () =>\r\n        {\r\n            getCollectionTemplateList();\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            getCollectionTemplateList();\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ createMemberCollectionDialog ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(selectedCollectionTemplateList.length > 0)\r\n            {\r\n                getMemberList();\r\n            }\r\n            else\r\n            {\r\n                setMemberList(null);\r\n            }\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ selectedCollectionTemplateList, getMemberList]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {createMemberCollectionDialog? (\r\n                    <Dialog id=\"create-membercollection-template-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={createMemberCollectionDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Create Service Instance\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {createMemberCollectionDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <>\r\n                                    <DialogContentText>\r\n                                        Please select <em><u>Service</u></em>, and then <em><u>Member</u></em> to start a working instance of the <em><u>Service</u></em>.\r\n                                    </DialogContentText>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                            {/* <Grid item xs container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1}>\r\n                                                {projectList? (\r\n                                                    <>\r\n                                                        <Grid item xs={11}>\r\n                                                            <FormControl id=\"Projects-options-label\" variant=\"filled\" size=\"small\" fullWidth disabled={!projectList}>\r\n                                                                <InputLabel>\r\n                                                                    Project\r\n                                                                </InputLabel>\r\n                                                                <Select\r\n                                                                    fullWidth\r\n                                                                    labelId=\"Projects-options-label\"\r\n                                                                    value={selectedProject}\r\n                                                                    onChange={(event) => { selectProjectHandler(event); } }\r\n                                                                >\r\n                                                                    <MenuItem value=\"\">\r\n                                                                        <em>None</em>\r\n                                                                    </MenuItem>\r\n                                                                    {projectList.map( (item, index) => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={`SelectOption${item._id}`} value={item._id}\r\n                                                                                disabled={(selectedProjectList.findIndex(oldItem => oldItem._id == item._id) == -1)? false : true}\r\n                                                                            >\r\n                                                                                <em>{item.name}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })}\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={1}>\r\n                                                            <IconButton variant=\"outlined\" size=\"medium\" color=\"inherit\" onClick={ () => { addProjectHandler(); } }\r\n                                                                disabled={selectedProject == \"\"? true : false}>\r\n                                                                <AddCircleIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <CircularProgress />\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                {(selectedProjectList)? (\r\n                                                     <Collapse in={(selectedProjectList.length > 0)? true : false}>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\r\n                                                            <em>{\"The following selected projects\"}</em> <u>{'to be assigned:'}</u>\r\n                                                        </Typography>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"primary\" gutterBottom={true}>\r\n                                                            <ol>\r\n                                                                {selectedProjectList.map((item, index) => {\r\n                                                                    return (\r\n                                                                        <li key={`${item._id}${index}`}>\r\n                                                                            {item.name}\r\n                                                                            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\"\r\n                                                                                onClick={ (item) => { removeProjectHandler(item); } }\r\n                                                                            >\r\n                                                                                <CancelIcon fontSize=\"inherit\" />\r\n                                                                            </IconButton>\r\n                                                                        </li>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </ol>\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                ) : (\r\n                                                    <>\r\n                                                    </>\r\n                                                )}\r\n                                            </Grid> */}\r\n                                            <Grid item xs container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1}>\r\n                                                {collectionTemplateList? (\r\n                                                    <>\r\n                                                        <Grid item xs={11}>\r\n                                                            <FormControl id=\"Services-options-label\" variant=\"filled\" size=\"small\" fullWidth disabled={!collectionTemplateList}>\r\n                                                                <InputLabel>\r\n                                                                    Service\r\n                                                                </InputLabel>\r\n                                                                <Select\r\n                                                                    fullWidth\r\n                                                                    labelId=\"Services-options-label\"\r\n                                                                    value={selectedCollectionTemplate}\r\n                                                                    onChange={(event) => { selectCollectionTemplateHandler(event); } }\r\n                                                                    disabled={selectedCollectionTemplateList.length >= 1? true : false}\r\n                                                                >\r\n                                                                    <MenuItem value=\"\">\r\n                                                                        <em>None</em>\r\n                                                                    </MenuItem>\r\n                                                                    {collectionTemplateList.map( (item, index) => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={`SelectOption${item._id}`} value={item._id}\r\n                                                                                disabled={(selectedCollectionTemplateList.findIndex(oldItem => oldItem._id == item._id) == -1)? false : true}\r\n                                                                            >\r\n                                                                                <em>{item.name}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })}\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={1}>\r\n                                                            <IconButton variant=\"outlined\" size=\"medium\" color=\"inherit\" onClick={ () => { addCollectionTemplateHandler(); } }\r\n                                                                disabled={selectedCollectionTemplate == \"\"? true : false}>\r\n                                                                <AddCircleIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <CircularProgress />\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                {selectedCollectionTemplateList? (\r\n                                                    <Collapse in={(selectedCollectionTemplateList.length > 0)? true : false}>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\r\n                                                            <em>{\"The following selected services\"}</em> <u>{'to be assigned by:'}</u>\r\n                                                        </Typography>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"secondary\" gutterBottom={true}>\r\n                                                            <ol>\r\n                                                                {selectedCollectionTemplateList.map((item, index) => {\r\n                                                                    return (\r\n                                                                        <li key={`${item._id}${index}`}>\r\n                                                                            {item.name}\r\n                                                                            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\"\r\n                                                                                onClick={ (item) => { removeCollectionTemplateHandler(item); } }\r\n                                                                            >\r\n                                                                                <CancelIcon fontSize=\"inherit\" />\r\n                                                                            </IconButton>\r\n                                                                        </li>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </ol>\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                ) : (\r\n                                                    <>\r\n                                                    </>\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1}>\r\n                                                {memberList? (\r\n                                                    <>\r\n                                                        <Grid item xs={11}>\r\n                                                            <FormControl id=\"Member-options-label\" variant=\"filled\" size=\"small\" fullWidth disabled={!memberList}>\r\n                                                                <InputLabel>\r\n                                                                    Member\r\n                                                                </InputLabel>\r\n                                                                <Select\r\n                                                                    fullWidth\r\n                                                                    labelId=\"Member-options-label\"\r\n                                                                    value={selectedMember}\r\n                                                                    onChange={(event) => { selectMemberHandler(event); } }\r\n                                                                    disabled={selectedMemberList.length >= 1? true : false}\r\n                                                                >\r\n                                                                    <MenuItem value=\"\">\r\n                                                                        <em>None</em>\r\n                                                                    </MenuItem>\r\n                                                                    {memberList.map( (item, index) => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={`SelectOption${item._id}`} value={item._id}\r\n                                                                                disabled={(selectedMemberList.findIndex(oldItem => oldItem._id == item._id) == -1)? false : true}\r\n                                                                            >\r\n                                                                                <em>{item.name}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })}\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={1}>\r\n                                                            <IconButton variant=\"outlined\" size=\"medium\" color=\"inherit\" onClick={ () => { addMemberHandler(); } }\r\n                                                                disabled={selectedMember == \"\"? true : false}>\r\n                                                                <AddCircleIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <CircularProgress />\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                {selectedMemberList? (\r\n                                                    <Collapse in={(selectedMemberList.length > 0)? true : false}>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\r\n                                                            <em>{\"The following selected members\"}</em> <u>{'to be assigned by:'}</u>\r\n                                                        </Typography>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"secondary\" gutterBottom={true}>\r\n                                                            <ol>\r\n                                                                {selectedMemberList.map((item, index) => {\r\n                                                                    return (\r\n                                                                        <li key={`${item._id}${index}`}>\r\n                                                                            {item.name}\r\n                                                                            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\"\r\n                                                                                onClick={ (item) => { removeMemberHandler(item); } }\r\n                                                                            >\r\n                                                                                <CancelIcon fontSize=\"inherit\" />\r\n                                                                            </IconButton>\r\n                                                                        </li>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </ol>\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                ) : (\r\n                                                    <>\r\n                                                    </>\r\n                                                )}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </>\r\n                            )}\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={createMemberCollectionDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            {/* <Button color=\"primary\" variant=\"contained\" startIcon={<AddBoxOutlinedIcon />} onClick={() => { createHandler(); }} disabled={createMemberCollectionDialogExecuting || user == \"\"}>\r\n                                Create\r\n                            </Button> */}\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<AddBoxOutlinedIcon />} onClick={() => { createHandler(); }} disabled={createMemberCollectionDialogExecuting || selectedCollectionTemplateList.length == 0 || selectedMemberList.length == 0}>\r\n                                Create\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nCreateMemberCollectionDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    createMemberCollectionDialog: PropTypes.bool.isRequired,\r\n    setCreateMemberCollectionDialog: PropTypes.func.isRequired,\r\n    createMemberCollectionDialogExecuting: PropTypes.bool.isRequired,\r\n    setCreateMemberCollectionDialogExecuting: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nCreateMemberCollectionDialog.defaultProps = \r\n{\r\n    appState: {},\r\n    setParentAlert: () => {},\r\n    getParentData:  () => {},\r\n    setCreateMemberCollectionDialog:  () => {},\r\n    setCreateMemberCollectionDialogExecuting:  () => {}\r\n}\r\n\r\nexport default CreateMemberCollectionDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with AssignMemberDialog\r\n// ================================================\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\nimport get from '../../../../helpers/common/get';\r\nimport post from '../../../../helpers/common/post';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Collapse, Typography } from '@material-ui/core';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// ==================== MUI Icons ====================\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(1),\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst AssignMemberDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, setParentAlert, getParentData, selectedDataItemsList, \r\n            assignMemberDialog, setAssignMemberDialog,\r\n            assignMemberDialogExecuting, setAssignMemberDialogExecuting } = props;\r\n\r\n        const [ currentCollection, setCurrentCollection ] = useState(\"\");\r\n        const [ selectedCollectionList, setSelectedCollectionList ] = useState([]);\r\n        const [ collectionList, setCollectionList ] = useState(null);\r\n\r\n        const [ currentMember, setCurrentMember ] = useState(\"\");\r\n        const [ selectedMemberList, setSelectedMemberList ] = useState([]);\r\n        const [ MemberList, setMemberList ] = useState(null);\r\n\r\n        // const [ userList, setUserList ] = useState(null);\r\n\r\n    // Functions ===\r\n\r\n        const populateCollections = useCallback((data) =>\r\n        {\r\n            let tempArray = new Array();\r\n\r\n            if(data && Array.isArray(data))\r\n            {\r\n                data.forEach(item => {\r\n\r\n                    tempArray.push(\r\n                        {\r\n                            _id: item._id,\r\n                            name: item.name,\r\n                            projectList: item.projectList,\r\n                            memberCollectionList: item.memberCollectionList,\r\n                            surveyList: item.surveyList,\r\n                            createdBy: item.createdBy,\r\n                            createdAt: item.updatedAt,\r\n                            modifiedBy: item.modifiedBy,\r\n                            updatedAt: item.updatedAt\r\n                        });\r\n                });\r\n            }\r\n\r\n            setCollectionList([...tempArray]);\r\n\r\n        }, [ appState, setCollectionList]);\r\n\r\n        const populateUsers = useCallback((data) =>\r\n        {\r\n            let tempArray = new Array();\r\n\r\n            if(data && Array.isArray(data))\r\n            {\r\n                data.forEach(item => {\r\n\r\n                    tempArray.push(\r\n                        {\r\n                            _id: item._id,\r\n                            name: item.info.name,\r\n                            role: item.role,\r\n                            createdAt: item.createdAt\r\n                        });\r\n                });\r\n            }\r\n\r\n            setMemberList([...tempArray]);\r\n\r\n        }, [ appState, setMemberList]);\r\n\r\n        // Retrieve the list of Users\r\n        const getCollections = useCallback(() => {\r\n\r\n            get(\"collections/\", appState.token, (err, res) => \r\n            {\r\n                if(err)\r\n                {   \r\n                    //Bad callback call\r\n                    //setParentAlert(new AlertType(err.message, \"error\"));\r\n                    setParentAlert(new AlertType('Unable to retrieve Services. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(res.status === 200)\r\n                    {\r\n                        populateCollections(res.data.collectionList);\r\n                    }\r\n                    else\r\n                    {\r\n                        //Bad HTTP Response\r\n                        setParentAlert(new AlertType('Unable to retrieve Services. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n\r\n            });\r\n        }, [ appState, populateUsers, setParentAlert ] );\r\n\r\n        // Retrieve the list of Users\r\n        const getUsers = useCallback(() => {\r\n\r\n            get(\"users/\", appState.token, (err, res) => \r\n            {\r\n                if(err)\r\n                {   \r\n                    //Bad callback call\r\n                    //setParentAlert(new AlertType(err.message, \"error\"));\r\n                    setParentAlert(new AlertType('Unable to retrieve Users. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(res.status === 200)\r\n                    {\r\n                        populateUsers(res.data.response.users);\r\n                    }\r\n                    else\r\n                    {\r\n                        //Bad HTTP Response\r\n                        setParentAlert(new AlertType('Unable to retrieve Users. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n\r\n            });\r\n        }, [ appState, populateUsers, setParentAlert ] );\r\n\r\n        // Insert the new booklet into the database upon creation\r\n        const assignMembers = useCallback(() =>\r\n        {\r\n            if(selectedCollectionList.length > 0 && selectedMemberList.length > 0)\r\n            {\r\n                selectedCollectionList.forEach(collection => \r\n                {\r\n                        const selectedMemberIdList = selectedMemberList.map(item => { return item._id; });\r\n\r\n                        let postBody = {\r\n                            collectionId: collection._id,\r\n                            memberList: selectedMemberIdList\r\n                        };\r\n    \r\n                        post(\"collections/assign/member\", appState.token, postBody, (error, response) => \r\n                        {\r\n                            if(error)\r\n                            {\r\n                                setParentAlert(new AlertType('Unable to update collections. Please refresh and try again.', \"error\"));\r\n                            }\r\n                            else\r\n                            {\r\n                                if(response.status === 200)\r\n                                {\r\n                                    // getParentData();\r\n                                    //  const _id = response.data.survey._id; The id to redirect to if you wish\r\n                                    getParentData();\r\n                                    setParentAlert(new AlertType('Successfully updated collections.', \"success\")); \r\n                                }\r\n                                else\r\n                                {\r\n                                    setParentAlert(new AlertType('Unable to update collections. Please refresh and try again.', \"error\"));\r\n                                }\r\n                            }\r\n                        });\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setParentAlert(new AlertType('Unable to assign members to collection. Please refresh and try again.', \"error\"));\r\n            }\r\n\r\n        }, [ appState, getParentData, setParentAlert, selectedCollectionList, selectedMemberList]);\r\n\r\n        \r\n        const closeHandler = useCallback(() => {\r\n\r\n            setAssignMemberDialog(false);\r\n            setCurrentCollection(\"\");\r\n            setCurrentMember(\"\");\r\n            setSelectedCollectionList(new Array());\r\n            setSelectedMemberList(new Array());\r\n\r\n        }, [ setAssignMemberDialog, setCurrentCollection, setCurrentMember, setSelectedCollectionList, setSelectedMemberList ]);\r\n\r\n\r\n        const createHandler = useCallback(() => {\r\n\r\n            setAssignMemberDialogExecuting(true);\r\n            assignMembers();\r\n            setAssignMemberDialogExecuting(false);\r\n            setAssignMemberDialog(false);\r\n\r\n        }, [ assignMembers, setAssignMemberDialogExecuting, setAssignMemberDialog]);\r\n\r\n        const selectCollectionHandler = useCallback((event) =>\r\n        {\r\n            setCurrentCollection(event.target.value);\r\n\r\n        }, [ setCurrentCollection ]);\r\n\r\n        const selectMemberHandler = useCallback((event) =>\r\n        {\r\n            setCurrentMember(event.target.value);\r\n\r\n        }, [ setCurrentMember ]);\r\n\r\n        const addCollectionButtonHandler = useCallback(() =>\r\n        {\r\n            if(currentCollection && currentCollection != \"\")\r\n            {\r\n                let tempUserObject = collectionList.find(item => item._id == currentCollection);\r\n\r\n                if(tempUserObject != undefined)\r\n                {\r\n                    setSelectedCollectionList([...selectedCollectionList, tempUserObject]);\r\n                    setCurrentCollection(\"\");\r\n                }\r\n            }\r\n\r\n        }, [ currentCollection, collectionList, setSelectedCollectionList, selectedCollectionList, setCurrentCollection ]);\r\n\r\n        const addMemberButtonHandler = useCallback(() =>\r\n        {\r\n            if(currentMember && currentMember != \"\")\r\n            {\r\n                let tempUserObject = MemberList.find(item => item._id == currentMember);\r\n\r\n                if(tempUserObject != undefined)\r\n                {\r\n                    setSelectedMemberList([...selectedMemberList, tempUserObject]);\r\n                    setCurrentMember(\"\");\r\n                }\r\n\r\n            }\r\n\r\n        }, [ currentMember, MemberList, setSelectedMemberList, selectedMemberList, setCurrentMember ]);\r\n\r\n        const removeCollectionButtonHandler = useCallback((item) =>\r\n        {\r\n            let tempList = selectedCollectionList;\r\n\r\n            tempList.splice(selectedCollectionList.findIndex(oldItem => oldItem._id == item._id), 1);\r\n\r\n            setSelectedCollectionList([...tempList]);\r\n\r\n        }, [ selectedCollectionList, setSelectedCollectionList ]);\r\n\r\n        const removeMemberButtonHandler = useCallback((item) =>\r\n        {\r\n            let tempList = selectedMemberList;\r\n\r\n            tempList.splice(selectedMemberList.findIndex(oldItem => oldItem._id == item._id), 1);\r\n\r\n            setSelectedMemberList([...tempList]);\r\n\r\n        }, [selectedMemberList, setSelectedMemberList ]);\r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(assignMemberDialog)\r\n            {\r\n                getCollections();\r\n                getUsers();\r\n            }\r\n            \r\n        }, [ assignMemberDialog, getUsers, getCollections]);\r\n\r\n        // useEffect( () =>\r\n        // {\r\n        //     if(selectedDataItemsList && selectedDataItemsList.length > 0)\r\n        //     {\r\n        //         const tempIdList = selectedDataItemsList.map(item => { return item._id; });\r\n        //         setSelectedCollectionList([...selectedCollectionList, ...tempIdList]);\r\n        //     }\r\n            \r\n        // }, [ selectedCollectionList, selectedDataItemsList ]);\r\n\r\n        // useEffect( () => \r\n        // {\r\n        //     if(userList)\r\n        //     {\r\n        //         //  Set Management User List\r\n        //         let tempManagementUserList = new Array();\r\n                \r\n        //         //  Set Client User List\r\n        //         let tempClientUserList = new Array();\r\n\r\n        //         userList.forEach(item => {\r\n                    \r\n        //             if(item.role == 'Admin' || item.role == 'Coordinator' || item.role == 'Volunteer')\r\n        //             {\r\n        //                 tempManagementUserList.push(item);\r\n        //             }\r\n        //             else if(item.role == 'Patient')\r\n        //             {\r\n        //                 tempClientUserList.push(item);\r\n        //             }\r\n\r\n        //         });\r\n\r\n        //         setCollectionList([...tempManagementUserList]);\r\n        //         setMemberList([...tempClientUserList]);\r\n        //     }\r\n\r\n        // }, [ userList, setCollectionList, setMemberList ]);\r\n\r\n        // useEffect( () => \r\n        // {\r\n        //     if(selectedCollectionList)\r\n        //     {\r\n        //         //  Set Selected Management User List\r\n        //         let tempSelectedManagementUserList = new Array();\r\n                \r\n        //         //  Set Selected Client User List\r\n        //         let tempSelectedClientUserList = new Array();\r\n\r\n        //         selectedCollectionList.forEach(item => {\r\n                    \r\n        //             if(item.role == 'Admin' || item.role == 'Coordinator' || item.role == 'Volunteer')\r\n        //             {\r\n        //                 tempSelectedManagementUserList.push({\r\n        //                     _id: item._id,\r\n        //                     name: item.info.name,\r\n        //                     role: item.role,\r\n        //                     createdAt: item.createdAt\r\n        //                 });\r\n        //             }\r\n        //             else if(item.role == 'Patient')\r\n        //             {\r\n        //                 tempSelectedClientUserList.push({\r\n        //                     _id: item._id,\r\n        //                     name: item.info.name,\r\n        //                     role: item.role,\r\n        //                     createdAt: item.createdAt\r\n        //                 });\r\n        //             }\r\n\r\n        //         });\r\n\r\n        //         setSelectedCollectionList([...tempSelectedManagementUserList]);\r\n        //         setSelectedMemberList([...tempSelectedClientUserList]);\r\n        //     }\r\n\r\n        // }, [ selectedCollectionList, setSelectedCollectionList, setSelectedMemberList ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {assignMemberDialog? (\r\n                    <Dialog id=\"assign-member-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={assignMemberDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Assign Member(s) to Collection(s)\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {assignMemberDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <>\r\n                                    <DialogContentText>\r\n                                        Please select <em><u>Members</u></em> to be assigned to each the following <em><u>Collections</u></em>.\r\n                                    </DialogContentText>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                        <Grid item xs container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1}>\r\n                                                {collectionList? (\r\n                                                    <>\r\n                                                        <Grid item xs={11}>\r\n                                                            <FormControl id=\"Collection-options-label\" variant=\"filled\" size=\"small\" fullWidth disabled={!collectionList}>\r\n                                                                <InputLabel>\r\n                                                                    Collection\r\n                                                                </InputLabel>\r\n                                                                <Select\r\n                                                                    fullWidth\r\n                                                                    labelId=\"Collection-options-label\"\r\n                                                                    value={currentCollection}\r\n                                                                    onChange={(event) => { selectCollectionHandler(event); } }\r\n                                                                    disabled={selectedCollectionList.length >= 1? true: false}\r\n                                                                >\r\n                                                                    <MenuItem value=\"\">\r\n                                                                        <em>None</em>\r\n                                                                    </MenuItem>\r\n                                                                    {collectionList.map( (item, index) => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={`SelectOption${item._id}`} value={item._id}\r\n                                                                                disabled={(selectedCollectionList.findIndex(oldItem => oldItem._id == item._id) == -1)? false : true}\r\n                                                                            >\r\n                                                                                <em>{item.name}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })}\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={1}>\r\n                                                            <IconButton variant=\"outlined\" size=\"medium\" color=\"inherit\" onClick={ () => { addCollectionButtonHandler(); } }\r\n                                                                disabled={currentCollection == \"\"? true : false}>\r\n                                                                <AddCircleIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <CircularProgress />\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                {(selectedCollectionList)? (\r\n                                                     <Collapse in={(selectedCollectionList.length > 0)? true : false}>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\r\n                                                            <em>{\"The following selected collections\"}</em> <u>{'to be assigned:'}</u>\r\n                                                        </Typography>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"primary\" gutterBottom={true}>\r\n                                                            <ol>\r\n                                                                {selectedCollectionList.map((item, index) => {\r\n                                                                    return (\r\n                                                                        <li key={`${item._id}${index}`}>\r\n                                                                            {item.name}\r\n                                                                            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\"\r\n                                                                                onClick={ (item) => { removeCollectionButtonHandler(item); } }\r\n                                                                            >\r\n                                                                                <CancelIcon fontSize=\"inherit\" />\r\n                                                                            </IconButton>\r\n                                                                        </li>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </ol>\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                ) : (\r\n                                                    <>\r\n                                                    </>\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1}>\r\n                                                {MemberList? (\r\n                                                    <>\r\n                                                        <Grid item xs={11}>\r\n                                                            <FormControl id=\"Member-options-label\" variant=\"filled\" size=\"small\" fullWidth disabled={!MemberList}>\r\n                                                                <InputLabel>\r\n                                                                    Member\r\n                                                                </InputLabel>\r\n                                                                <Select\r\n                                                                    fullWidth\r\n                                                                    labelId=\"Member-options-label\"\r\n                                                                    value={currentMember}\r\n                                                                    onChange={(event) => { selectMemberHandler(event); } }\r\n                                                                >\r\n                                                                    <MenuItem value=\"\">\r\n                                                                        <em>None</em>\r\n                                                                    </MenuItem>\r\n                                                                    {MemberList.map( (item, index) => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={`SelectOption${item._id}`} value={item._id}\r\n                                                                                disabled={(selectedMemberList.findIndex(oldItem => oldItem._id == item._id) == -1)? false : true}\r\n                                                                            >\r\n                                                                                <em>{item.name}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })}\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={1}>\r\n                                                            <IconButton variant=\"outlined\" size=\"medium\" color=\"inherit\" onClick={ () => { addMemberButtonHandler(); } }\r\n                                                                disabled={currentMember == \"\"? true : false}>\r\n                                                                <AddCircleIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <CircularProgress />\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                {selectedMemberList? (\r\n                                                    <Collapse in={(selectedMemberList.length > 0)? true : false}>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\r\n                                                            <em>{\"The following selected members\"}</em> <u>{'to be assigned by:'}</u>\r\n                                                        </Typography>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"secondary\" gutterBottom={true}>\r\n                                                            <ol>\r\n                                                                {selectedMemberList.map((item, index) => {\r\n                                                                    return (\r\n                                                                        <li key={`${item._id}${index}`}>\r\n                                                                            {item.name}\r\n                                                                            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\"\r\n                                                                                onClick={ (item) => { removeMemberButtonHandler(item); } }\r\n                                                                            >\r\n                                                                                <CancelIcon fontSize=\"inherit\" />\r\n                                                                            </IconButton>\r\n                                                                        </li>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </ol>\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                ) : (\r\n                                                    <>\r\n                                                    </>\r\n                                                )}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </>\r\n                            )}\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={assignMemberDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<SupervisorAccountIcon />} onClick={() => { createHandler(); }} disabled={assignMemberDialogExecuting}\r\n                                disabled={(selectedCollectionList.length > 0 && selectedMemberList.length > 0)? false : true}\r\n                            >\r\n                                Assign\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nAssignMemberDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    selectedDataItemsList: PropTypes.arrayOf(PropTypes.object),\r\n    assignMemberDialog: PropTypes.bool.isRequired,\r\n    setAssignMemberDialog: PropTypes.func.isRequired,\r\n    assignMemberDialogExecuting: PropTypes.bool.isRequired,\r\n    setAssignMemberDialogExecuting: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nAssignMemberDialog.defaultProps = \r\n{\r\n    appState: {},\r\n    setParentAlert: () => {},\r\n    getParentData:  () => {},\r\n    selectedDataItemsList: {},\r\n    assignMemberDialog: {},\r\n    setAssignMemberDialog: () => {},\r\n    assignMemberDialogExecuting: {},\r\n    setAssignMemberDialogExecuting: () => {}\r\n}\r\n\r\nexport default AssignMemberDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with AssignProjectDialog\r\n// ================================================\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\nimport get from '../../../../helpers/common/get';\r\nimport post from '../../../../helpers/common/post';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Collapse, Typography } from '@material-ui/core';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// ==================== MUI Icons ====================\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(1),\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst AssignProjectDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, setParentAlert, getParentData, selectedDataItemsList, \r\n            assignProjectDialog, setAssignProjectDialog,\r\n            assignProjectDialogExecuting, setAssignProjectDialogExecuting } = props;\r\n\r\n        const [ currentService, setCurrentService ] = useState(\"\");\r\n        const [ selectedServiceList, setSelectedServiceList ] = useState([]);\r\n        const [ ServiceList, setServiceList ] = useState(null);\r\n        \r\n        const [ currentProject, setCurrentProject ] = useState(\"\");\r\n        const [ selectedProjectList, setSelectedProjectList ] = useState([]);\r\n        const [ ProjectList, setProjectList ] = useState(null);\r\n\r\n    // Functions ===\r\n\r\n        const populateProjects = useCallback((data) =>\r\n        {\r\n            let tempArray = new Array();\r\n\r\n            if(data && Array.isArray(data))\r\n            {\r\n                data.forEach(item => {\r\n\r\n                    tempArray.push(\r\n                        {\r\n                            _id: item._id,\r\n                            name: item.name,\r\n                            memberList: item.memberList,\r\n                            collectionList: item.collectionList,\r\n                            createdBy: item.createdBy,\r\n                            createdAt: item.updatedAt,\r\n                            modifiedBy: item.modifiedBy,\r\n                            updatedAt: item.updatedAt\r\n                        });\r\n                });\r\n            }\r\n\r\n            setProjectList([...tempArray]);\r\n\r\n        }, [ appState, setProjectList]);\r\n\r\n        const populateServices = useCallback((data) =>\r\n        {\r\n            let tempArray = new Array();\r\n\r\n            if(data && Array.isArray(data))\r\n            {\r\n                data.forEach(item => {\r\n\r\n                    tempArray.push(\r\n                        {\r\n                            _id: item._id,\r\n                            name: item.name,\r\n                            projectList: item.projectList,\r\n                            memberList: item.memberList,\r\n                            memberCollectionList: item.memberCollectionList,\r\n                            surveyList: item.surveyList,\r\n                            createdBy: item.createdBy,\r\n                            modifiedBy: item.modifiedBy\r\n                        });\r\n                });\r\n            }\r\n\r\n            setServiceList([...tempArray]);\r\n\r\n        }, [ appState, setServiceList]);\r\n\r\n        // Retrieve the list of Users\r\n        const getProjects = useCallback(() => {\r\n\r\n            get(\"projects/\", appState.token, (err, res) => \r\n            {\r\n                if(err)\r\n                {   \r\n                    //Bad callback call\r\n                    //setParentAlert(new AlertType(err.message, \"error\"));\r\n                    setParentAlert(new AlertType('Unable to retrieve Projects. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(res.status === 200)\r\n                    {\r\n                        populateProjects(res.data.projectList);\r\n                    }\r\n                    else\r\n                    {\r\n                        //Bad HTTP Response\r\n                        setParentAlert(new AlertType('Unable to retrieve Projects. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n\r\n            });\r\n        }, [ appState, populateServices, setParentAlert ] );\r\n\r\n        // Retrieve the list of Users\r\n        const getServices = useCallback(() => {\r\n\r\n            get(\"collections/\", appState.token, (err, res) => \r\n            {\r\n                if(err)\r\n                {   \r\n                    //Bad callback call\r\n                    //setParentAlert(new AlertType(err.message, \"error\"));\r\n                    setParentAlert(new AlertType('Unable to retrieve Services. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(res.status === 200)\r\n                    {\r\n                        populateServices(res.data.collectionList);\r\n                    }\r\n                    else\r\n                    {\r\n                        //Bad HTTP Response\r\n                        setParentAlert(new AlertType('Unable to retrieve Services. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n\r\n            });\r\n        }, [ appState, populateServices, setParentAlert ] );\r\n\r\n        // Insert the new booklet into the database upon creation\r\n        const assignProjects = useCallback(() =>\r\n        {\r\n            if(selectedServiceList.length > 0 && selectedServiceList.length > 0)\r\n            {\r\n                selectedServiceList.forEach(collection => \r\n                {\r\n                        const selectedProjectIdList = selectedProjectList.map(item => { return item._id; });\r\n\r\n                        let patchBody = {\r\n                            collectionId: collection._id,\r\n                            projectList: selectedProjectIdList\r\n                        };\r\n    \r\n                        post(\"collections/assign/project\", appState.token, patchBody, (error, response) => \r\n                        {\r\n                            if(error)\r\n                            {\r\n                                setParentAlert(new AlertType('Unable to update collections. Please refresh and try again.', \"error\"));\r\n                            }\r\n                            else\r\n                            {\r\n                                if(response.status === 200)\r\n                                {\r\n                                    // getParentData();\r\n                                    //  const _id = response.data.survey._id; The id to redirect to if you wish\r\n                                    getParentData();\r\n                                    setParentAlert(new AlertType('Successfully updated collections.', \"success\")); \r\n                                }\r\n                                else\r\n                                {\r\n                                    setParentAlert(new AlertType('Unable to update collections. Please refresh and try again.', \"error\"));\r\n                                }\r\n                            }\r\n                        });\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setParentAlert(new AlertType('Unable to assign Projects to collections. Please refresh and try again.', \"error\"));\r\n            }\r\n\r\n        }, [ appState, getParentData, setParentAlert, selectedProjectList, selectedServiceList]);\r\n\r\n        \r\n        const closeHandler = useCallback(() => {\r\n\r\n            setAssignProjectDialog(false);\r\n            setCurrentProject(\"\");\r\n            setCurrentService(\"\");\r\n            setSelectedProjectList(new Array());\r\n            setSelectedServiceList(new Array());\r\n\r\n        }, [ setAssignProjectDialog, setCurrentProject, setCurrentService, setSelectedProjectList, setSelectedServiceList ]);\r\n\r\n\r\n        const createHandler = useCallback(() => {\r\n\r\n            setAssignProjectDialogExecuting(true);\r\n            assignProjects();\r\n            setAssignProjectDialogExecuting(false);\r\n            setAssignProjectDialog(false);\r\n\r\n        }, [ assignProjects, setAssignProjectDialogExecuting, setAssignProjectDialog]);\r\n\r\n        const selectProjectHandler = useCallback((event) =>\r\n        {\r\n            setCurrentProject(event.target.value);\r\n\r\n        }, [ setCurrentProject ]);\r\n\r\n        const selectServiceHandler = useCallback((event) =>\r\n        {\r\n            setCurrentService(event.target.value);\r\n\r\n        }, [ setCurrentService ]);\r\n\r\n        const addProjectButtonHandler = useCallback(() =>\r\n        {\r\n            if(currentProject && currentProject != \"\")\r\n            {\r\n                let tempUserObject = ProjectList.find(item => item._id == currentProject);\r\n\r\n                if(tempUserObject != undefined)\r\n                {\r\n                    setSelectedProjectList([...selectedProjectList, tempUserObject]);\r\n                    setCurrentProject(\"\");\r\n                }\r\n            }\r\n\r\n        }, [ currentProject, ProjectList, setSelectedProjectList, selectedProjectList, setCurrentProject ]);\r\n\r\n        const addServiceButtonHandler = useCallback(() =>\r\n        {\r\n            if(currentService && currentService != \"\")\r\n            {\r\n                let tempUserObject = ServiceList.find(item => item._id == currentService);\r\n\r\n                if(tempUserObject != undefined)\r\n                {\r\n                    setSelectedServiceList([...selectedServiceList, tempUserObject]);\r\n                    setCurrentService(\"\");\r\n                }\r\n\r\n            }\r\n\r\n        }, [ currentService, ServiceList, setSelectedServiceList, selectedServiceList, setCurrentService ]);\r\n\r\n        const removeProjectButtonHandler = useCallback((item) =>\r\n        {\r\n            let tempList = selectedProjectList;\r\n\r\n            tempList.splice(selectedProjectList.findIndex(oldItem => oldItem._id == item._id), 1);\r\n\r\n            setSelectedProjectList([...tempList]);\r\n\r\n        }, [ selectedProjectList, setSelectedProjectList ]);\r\n\r\n        const removeServiceButtonHandler = useCallback((item) =>\r\n        {\r\n            let tempList = selectedServiceList;\r\n\r\n            tempList.splice(selectedServiceList.findIndex(oldItem => oldItem._id == item._id), 1);\r\n\r\n            setSelectedServiceList([...tempList]);\r\n\r\n        }, [selectedServiceList, setSelectedServiceList ]);\r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(assignProjectDialog)\r\n            {\r\n                getProjects();\r\n                getServices();\r\n            }\r\n            \r\n        }, [ assignProjectDialog, getServices, getProjects]);\r\n\r\n        // useEffect( () =>\r\n        // {\r\n        //     if(selectedDataItemsList)\r\n        //     {\r\n        //         const tempIdList = selectedDataItemsList.map(item => { return item._id; });\r\n        //         setSelectedProjectList([...selectedDataItemsList, ...tempIdList]);\r\n        //     }\r\n            \r\n        // }, [ selectedDataItemsList ]);\r\n\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {assignProjectDialog? (\r\n                    <Dialog id=\"assign-project-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={assignProjectDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Assign Project(s) to Service(s)\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {assignProjectDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <>\r\n                                    <DialogContentText>\r\n                                        Please select <em><u>Projects</u></em> to be assigned to each the following <em><u>Service</u></em>.\r\n                                    </DialogContentText>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                        <Grid item xs container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1}>\r\n                                                {ServiceList? (\r\n                                                    <>\r\n                                                        <Grid item xs={11}>\r\n                                                            <FormControl id=\"Services-options-label\" variant=\"filled\" size=\"small\" fullWidth disabled={!ServiceList}>\r\n                                                                <InputLabel>\r\n                                                                    Service\r\n                                                                </InputLabel>\r\n                                                                <Select\r\n                                                                    fullWidth\r\n                                                                    labelId=\"Services-options-label\"\r\n                                                                    value={currentService}\r\n                                                                    onChange={(event) => { selectServiceHandler(event); } }\r\n                                                                    disabled={selectedServiceList.length >= 1? true: false}\r\n                                                                >\r\n                                                                    <MenuItem value=\"\">\r\n                                                                        <em>None</em>\r\n                                                                    </MenuItem>\r\n                                                                    {ServiceList.map( (item, index) => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={`SelectOption${item._id}`} value={item._id}\r\n                                                                                disabled={(selectedServiceList.findIndex(oldItem => oldItem._id == item._id) == -1)? false : true}\r\n                                                                            >\r\n                                                                                <em>{item.name}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })}\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={1}>\r\n                                                            <IconButton variant=\"outlined\" size=\"medium\" color=\"inherit\" onClick={ () => { addServiceButtonHandler(); } }\r\n                                                                disabled={currentService == \"\"? true : false}>\r\n                                                                <AddCircleIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <CircularProgress />\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                {(selectedServiceList)? (\r\n                                                     <Collapse in={(selectedServiceList.length > 0)? true : false}>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\r\n                                                            <em>{\"The following selected services\"}</em> <u>{'to be assigned:'}</u>\r\n                                                        </Typography>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"primary\" gutterBottom={true}>\r\n                                                            <ol>\r\n                                                                {selectedServiceList.map((item, index) => {\r\n                                                                    return (\r\n                                                                        <li key={`${item._id}${index}`}>\r\n                                                                            {item.name}\r\n                                                                            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\"\r\n                                                                                onClick={ (item) => { removeServiceButtonHandler(item); } }\r\n                                                                            >\r\n                                                                                <CancelIcon fontSize=\"inherit\" />\r\n                                                                            </IconButton>\r\n                                                                        </li>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </ol>\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                ) : (\r\n                                                    <>\r\n                                                    </>\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1}>\r\n                                                {ProjectList? (\r\n                                                    <>\r\n                                                        <Grid item xs={11}>\r\n                                                            <FormControl id=\"Projects-options-label\" variant=\"filled\" size=\"small\" fullWidth disabled={!ProjectList}>\r\n                                                                <InputLabel>\r\n                                                                    Project\r\n                                                                </InputLabel>\r\n                                                                <Select\r\n                                                                    fullWidth\r\n                                                                    labelId=\"Projects-options-label\"\r\n                                                                    value={currentProject}\r\n                                                                    onChange={(event) => { selectProjectHandler(event); } }\r\n                                                                >\r\n                                                                    <MenuItem value=\"\">\r\n                                                                        <em>None</em>\r\n                                                                    </MenuItem>\r\n                                                                    {ProjectList.map( (item, index) => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={`SelectOption${item._id}`} value={item._id}\r\n                                                                                disabled={(selectedProjectList.findIndex(oldItem => oldItem._id == item._id) == -1)? false : true}\r\n                                                                            >\r\n                                                                                <em>{item.name}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })}\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={1}>\r\n                                                            <IconButton variant=\"outlined\" size=\"medium\" color=\"inherit\" onClick={ () => { addProjectButtonHandler(); } }\r\n                                                                disabled={currentProject == \"\"? true : false}>\r\n                                                                <AddCircleIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <CircularProgress />\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                {selectedProjectList? (\r\n                                                    <Collapse in={(selectedProjectList.length > 0)? true : false}>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\r\n                                                            <em>{\"The following selected projects\"}</em> <u>{'to be assigned by:'}</u>\r\n                                                        </Typography>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"secondary\" gutterBottom={true}>\r\n                                                            <ol>\r\n                                                                {selectedProjectList.map((item, index) => {\r\n                                                                    return (\r\n                                                                        <li key={`${item._id}${index}`}>\r\n                                                                            {item.name}\r\n                                                                            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\"\r\n                                                                                onClick={ (item) => { removeProjectButtonHandler(item); } }\r\n                                                                            >\r\n                                                                                <CancelIcon fontSize=\"inherit\" />\r\n                                                                            </IconButton>\r\n                                                                        </li>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </ol>\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                ) : (\r\n                                                    <>\r\n                                                    </>\r\n                                                )}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </>\r\n                            )}\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={assignProjectDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<SupervisorAccountIcon />} onClick={() => { createHandler(); }} disabled={assignProjectDialogExecuting}\r\n                                disabled={(selectedServiceList.length > 0 && selectedProjectList.length > 0)? false : true}\r\n                            >\r\n                                Assign\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nAssignProjectDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    selectedDataItemsList: PropTypes.arrayOf(PropTypes.object),\r\n    assignProjectDialog: PropTypes.bool.isRequired,\r\n    setAssignProjectDialog: PropTypes.func.isRequired,\r\n    assignProjectDialogExecuting: PropTypes.bool.isRequired,\r\n    setAssignProjectDialogExecuting: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nAssignProjectDialog.defaultProps = \r\n{\r\n    appState: {},\r\n    setParentAlert: () => {},\r\n    getParentData:  () => {},\r\n    selectedDataItemsList: {},\r\n    assignProjectDialog: {},\r\n    setAssignProjectDialog: () => {},\r\n    assignProjectDialogExecuting: {},\r\n    setAssignProjectDialogExecuting: () => {}\r\n}\r\n\r\nexport default AssignProjectDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with the Collections Management page.\r\n// Displays all existing collections created and allows\r\n// user to delete, edit and preview them\r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Components ====================\r\nimport AlertMessage from '../../../../components/AlertMessage';\r\n\r\nimport CollectionsManagementControlPanel from '../Components/CollectionsManagementControlPanel/CollectionsManagementControlPanel';\r\nimport CollectionTable from '../Components/CollectionTable/CollectionTable';\r\n\r\nimport CreateCollectionTemplateDialog from '../Dialog/CreateCollectionTemplateDialog';\r\nimport CreateMemberCollectionDialog from '../Dialog/CreateMemberCollectionTemplate';\r\nimport ExportCollectionDialog from '../Dialog/ExportCollectionDialog';\r\nimport DeleteCollectionDialog from '../Dialog/DeleteCollectionDialog';\r\nimport AssignMemberDialog from '../Dialog/AssignMemberDialog';\r\nimport AssignProjectDialog from '../Dialog/AssignProjectDialog';\r\n\r\n// ==================== Helpers ====================\r\nimport get from '../../../../helpers/common/get';\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI ====================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n// ==================== Styles ====================\r\nconst useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n({\r\n    root: {\r\n        flexGrow: 1     // CSS determined this way, flexbox properties\r\n    }\r\n}));\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst CollectionsManagement = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, ToggleDrawerClose, CheckAuthenticationValidity } = props;\r\n\r\n        // Template or User Chapters boolean\r\n        const [isTemplates, setIsTemplates] = useState(true);\r\n        \r\n        // IsDense ; is the template table in compact form\r\n        const [isDense, setIsDense] = useState(true);\r\n\r\n        // Current dataList variable\r\n        const [dataList, setDataList] = useState(null);\r\n\r\n        // Current dataList variable\r\n        const [searchFilteredDataList, setSearchFilteredDataList] = useState(null);\r\n\r\n        // Current selected items dataList variable\r\n        const [selectedDataItemsList, setSelectedDataItemsList] = useState(null);\r\n\r\n        // Create Collection Template Dialog Logic variables\r\n        const [createCollectionTemplateDialog, setCreateCollectionTemplateDialog] = useState(false);\r\n        const [createCollectionTemplateDialogExecuting, setCreateCollectionTemplateDialogExecuting] = useState(false);\r\n\r\n        // Create Member Collection Dialog Logic variables\r\n        const [createMemberCollectionDialog, setCreateMemberCollectionDialog] = useState(false);\r\n        const [createMemberCollectionDialogExecuting, setCreateMemberCollectionDialogExecuting] = useState(false);\r\n\r\n        // Export Collection Chapter Dialog Logic variables\r\n        const [exportCollectionDialog, setExportCollectionDialog] = useState(false);\r\n        const [exportCollectionDialogExecuting, setExportCollectionDialogExecuting] = useState(false);\r\n\r\n        // Delete Collection Dialog Logic variables\r\n        const [deleteCollectionDialog, setDeleteCollectionDialog] = useState(false);\r\n        const [deleteCollectionDialogExecuting, setDeleteCollectionDialogExecuting] = useState(false);\r\n\r\n        // Assign Member Collection Dialog Logic variables\r\n        const [assignMemberDialog, setAssignMemberDialog] = useState(false);\r\n        const [assignMemberDialogExecuting, setAssignMemberDialogExecuting] = useState(false);\r\n\r\n        // Assign Project Collection Dialog Logic variables\r\n        const [assignProjectDialog, setAssignProjectDialog] = useState(false);\r\n        const [assignProjectDialogExecuting, setAssignProjectDialogExecuting] = useState(false);\r\n\r\n\r\n        // Alert variable\r\n        const [alert, setAlert] = useState(new AlertType());\r\n\r\n    // Functions ===\r\n\r\n        const populateList = useCallback((data) => \r\n        {\r\n            let tempArray = new Array();\r\n\r\n            if(data && Array.isArray(data))\r\n            {\r\n                if(isTemplates) {\r\n                    \r\n                    data.forEach(item => {\r\n\r\n                        tempArray.push(\r\n                        {\r\n                            _id: item._id,\r\n                            name: item.name,\r\n                            projectList: item.projectList,\r\n                            memberList: item.memberList,\r\n                            memberCollectionList: item.memberCollectionList,\r\n                            surveyList: item.surveyList,\r\n                            createdBy: item.createdBy,\r\n                            createdAt: item.createdAt,\r\n                            modifiedBy: item.modifiedBy,\r\n                            updatedAt: item.updatedAt\r\n                        });\r\n\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    data.forEach(item => {\r\n\r\n                        tempArray.push(\r\n                        {\r\n                            _id: item._id,\r\n                            collectionTemplate: item.collectionTemplate,\r\n                            completeness: item.completeness,\r\n                            memberSurveyList: item.memberSurveyList,\r\n                            member: item.member,\r\n                            createdBy: item.createdBy,\r\n                            createdAt: item.createdAt,\r\n                            modifiedBy: item.modifiedBy,\r\n                            updatedAt: item.updatedAt\r\n                        });\r\n                        \r\n                    });\r\n                }\r\n                \r\n            }\r\n\r\n                \r\n            setDataList([...tempArray]);\r\n            setSearchFilteredDataList([...tempArray]);\r\n            setSelectedDataItemsList([]);\r\n\r\n        }, [ isTemplates ] );\r\n\r\n        // Retrieve the list of Collections\r\n        const getCollectionTemplates = useCallback(() => {\r\n\r\n            setDataList(null);\r\n\r\n            get(\"collections/\", appState.token, (err, res) => \r\n            {\r\n                if(err)\r\n                {   \r\n                    //Bad callback call\r\n                    //setAlert(new AlertType(err.message, \"error\"));\r\n                    setAlert(new AlertType('Unable to retrieve Collections Templates. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(res.status === 200)\r\n                    {\r\n                        populateList(res.data.collectionList);\r\n                    }\r\n                    else\r\n                    {\r\n                        //Bad HTTP Response\r\n                        setAlert(new AlertType('Unable to retrieve Collections Templates. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n\r\n            });\r\n        }, [ populateList, appState.token ] );\r\n\r\n        // Retrieve the list of Collections\r\n        const getMemberCollections = useCallback(() => {\r\n\r\n            setDataList(null);\r\n\r\n            get(\"membercollections/\", appState.token, (err, res) => \r\n            {\r\n                if(err)\r\n                {   \r\n                    //Bad callback call\r\n                    //setAlert(new AlertType(err.message, \"error\"));\r\n                    setAlert(new AlertType('Unable to retrieve Member Collections. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(res.status === 200)\r\n                    {\r\n                        populateList(res.data.memberCollectionList);\r\n                    }\r\n                    else\r\n                    {\r\n                        //Bad HTTP Response\r\n                        setAlert(new AlertType('Unable to retrieve Member Collections. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n\r\n            });\r\n        }, [ populateList, appState.token ] );\r\n\r\n        const getData = useCallback(() => {\r\n            // console.log(\"Get Data Invoked\", new Date());\r\n            isTemplates? getCollectionTemplates() : getMemberCollections();\r\n        }, [ isTemplates, getCollectionTemplates, getMemberCollections ] );\r\n\r\n    // Hooks ===\r\n\r\n        // Fetch DataList | First Render Only\r\n        useEffect( () =>\r\n        {\r\n            ToggleDrawerClose();\r\n            setTimeout(() => {\r\n                CheckAuthenticationValidity( (tokenValid) => \r\n                {\r\n                    if(tokenValid)\r\n                    {\r\n                        getData();\r\n                    }\r\n                    else {\r\n                        //Bad HTTP Response\r\n                        setAlert(null);\r\n                    }\r\n                });\r\n            }, 200);\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ ]);\r\n\r\n        useEffect( () => {\r\n            getData();\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ isTemplates ] );\r\n\r\n        useEffect( () => {\r\n            \r\n            setSearchFilteredDataList(dataList);\r\n            setSelectedDataItemsList([]);\r\n\r\n        }, [ dataList ] );\r\n\r\n    // Component Render Section ===\r\n    return (\r\n        alert != null? (\r\n            // Notice the shorthand React render Fragment <> & </> instead of <div> & </div>, both work the same\r\n            <div className={classes.root}>\r\n                <Grid container\r\n                direction=\"row\"\r\n                justifyContent=\"flex-start\"\r\n                alignItems=\"stretch\"\r\n                style={ {\"height\": \"100%\"} }\r\n                spacing={1}\r\n                >\r\n                    <Grid item xs={5}>\r\n                        <Box mx={1} my={1}>\r\n                            <Typography variant=\"h5\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                                Manage Services\r\n                            </Typography>\r\n                        </Box> \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Box mx={1} my={1}>\r\n                            <AlertMessage alert={alert} setParentAlert={setAlert} />\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Box mx={1} my={1} boxShadow={3}>\r\n                            <Card raised={true}>\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"column\"\r\n                                    justifyContent=\"flex-start\"\r\n                                    alignItems=\"stretch\"\r\n                                    spacing={0}\r\n                                >\r\n                                    {dataList && searchFilteredDataList && selectedDataItemsList? (\r\n                                        <Grid item xs={12}>\r\n                                            <CollectionsManagementControlPanel\r\n                                                isDense={isDense}\r\n                                                setIsDense={setIsDense}\r\n                                                isTemplates={isTemplates}\r\n                                                setIsTemplates={setIsTemplates}\r\n                                                dataList={dataList}\r\n                                                getParentData={getCollectionTemplates}\r\n                                                setSearchFilteredDataList={setSearchFilteredDataList}\r\n                                                setCreateCollectionTemplateDialog={setCreateCollectionTemplateDialog}\r\n                                                setCreateMemberCollectionDialog={setCreateMemberCollectionDialog}\r\n                                                setAssignMemberDialog={setAssignMemberDialog}\r\n                                                setAssignProjectDialog={setAssignProjectDialog}\r\n                                                setParentAlert={setAlert}\r\n                                            />\r\n                                            <CollectionTable\r\n                                                isDense={isDense}\r\n                                                isTemplates={isTemplates}\r\n                                                searchFilteredDataList={searchFilteredDataList}\r\n                                                selectedDataItemsList={selectedDataItemsList}\r\n                                                setSelectedDataItemsList={setSelectedDataItemsList}\r\n                                                setParentDeleteCollectionDialog={setDeleteCollectionDialog}\r\n                                                setParentExportCollectionDialog={setExportCollectionDialog}\r\n                                            />\r\n                                        </Grid>\r\n                                    ) : (\r\n                                        <Grid item xs={12} container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1}>\r\n                                            <Grid item>\r\n                                                <Box mx={1} my={1} boxShadow={0}>\r\n                                                    <CircularProgress />\r\n                                                </Box>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    )}\r\n                                </Grid>\r\n                            </Card>\r\n                        </Box>    \r\n                    </Grid>\r\n                </Grid>\r\n                <CreateCollectionTemplateDialog\r\n                    createCollectionTemplateDialog={createCollectionTemplateDialog}\r\n                    setCreateCollectionTemplateDialog={setCreateCollectionTemplateDialog}\r\n                    createCollectionTemplateDialogExecuting={createCollectionTemplateDialogExecuting}\r\n                    setCreateCollectionTemplateDialogExecuting={setCreateCollectionTemplateDialogExecuting}\r\n                    setParentAlert={setAlert}\r\n                    getParentData={getCollectionTemplates}\r\n                    appState={appState}\r\n                />\r\n                <CreateMemberCollectionDialog\r\n                    createMemberCollectionDialog={createMemberCollectionDialog}\r\n                    setCreateMemberCollectionDialog={setCreateMemberCollectionDialog}\r\n                    createMemberCollectionDialogExecuting={createMemberCollectionDialogExecuting}\r\n                    setCreateMemberCollectionDialogExecuting={setCreateMemberCollectionDialogExecuting}\r\n                    setParentAlert={setAlert}\r\n                    getParentData={getMemberCollections}\r\n                    appState={appState}\r\n                />\r\n                <AssignMemberDialog\r\n                    assignMemberDialog={assignMemberDialog}\r\n                    setAssignMemberDialog={setAssignMemberDialog}\r\n                    assignMemberDialogExecuting={assignMemberDialogExecuting}\r\n                    setAssignMemberDialogExecuting={setAssignMemberDialogExecuting}\r\n                    setParentAlert={setAlert}\r\n                    getParentData={getCollectionTemplates}\r\n                    selectedDataItemsList={selectedDataItemsList}\r\n                    appState={appState}\r\n                />\r\n                <AssignProjectDialog\r\n                    assignProjectDialog={assignProjectDialog}\r\n                    setAssignProjectDialog={setAssignProjectDialog}\r\n                    assignProjectDialogExecuting={assignProjectDialogExecuting}\r\n                    setAssignProjectDialogExecuting={setAssignProjectDialogExecuting}\r\n                    setParentAlert={setAlert}\r\n                    getParentData={getCollectionTemplates}\r\n                    selectedDataItemsList={selectedDataItemsList}\r\n                    appState={appState}\r\n                />\r\n                <ExportCollectionDialog\r\n                    exportCollectionDialog={exportCollectionDialog}\r\n                    setExportCollectionDialog={setExportCollectionDialog}\r\n                    exportCollectionDialogExecuting={exportCollectionDialogExecuting}\r\n                    setExportCollectionDialogExecuting={setExportCollectionDialogExecuting}\r\n                    selectedDataItemsList={selectedDataItemsList}\r\n                    setParentAlert={setAlert}\r\n                    getParentData={getCollectionTemplates}\r\n                    isTemplates={isTemplates}\r\n                />\r\n                <DeleteCollectionDialog\r\n                    isTemplates={isTemplates}\r\n                    deleteCollectionDialog={deleteCollectionDialog}\r\n                    setDeleteCollectionDialog={setDeleteCollectionDialog}\r\n                    deleteCollectionDialogExecuting={deleteCollectionDialogExecuting}\r\n                    setDeleteCollectionDialogExecuting={setDeleteCollectionDialogExecuting}\r\n                    selectedDataItemsList={selectedDataItemsList}\r\n                    setSelectedDataItemsList={setSelectedDataItemsList}\r\n                    setParentAlert={setAlert}\r\n                    getParentData={getCollectionTemplates}\r\n                    appState={appState}\r\n                />\r\n            </div>\r\n        ) : (\r\n            <Typography variant=\"h6\" color=\"inherit\" align=\"center\" gutterBottom>\r\n                Not Authorized. Please refresh and try again.\r\n            </Typography>\r\n        )\r\n        \r\n    );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nCollectionsManagement.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    ToggleDrawerClose: PropTypes.func.isRequired,\r\n    CheckAuthenticationValidity: PropTypes.func.isRequired\r\n}\r\n\r\nCollectionsManagement.defaultProps = {\r\n    appState: {},\r\n    ToggleDrawerClose: () => {},\r\n    CheckAuthenticationValidity: () => {}\r\n}\r\n\r\nexport default CollectionsManagement;  // You can even shorthand this line by adding this at the function [Component] declaration stage","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst LinearProgressWithLabel = (props) => {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nexport default LinearProgressWithLabel;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst CircularProgressWithLabel = (props) => {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} color=\"secondary\"/>\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate variant.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default CircularProgressWithLabel;","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\nimport AlertMessage from '../../../../components/AlertMessage';\r\n\r\nimport LinearProgressWithLabel from '../Components/LinearProgressWithLabel/LinearProgressWithLabel';\r\nimport CircularProgressWithLabel from '../Components/CircularProgressWithLabel/CircularProgressWithLabel';\r\nimport * as Survey from \"survey-react\";\r\nimport \"survey-react/survey.css\";\r\n\r\n// ==================== Helpers =====================\r\nimport get from  '../../../../helpers/common/get';\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport { TextField } from '@material-ui/core';\r\n\r\n// ==================== MUI Icons ====================\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\nimport Ballot from '@material-ui/icons/Ballot';\r\n\r\n// ================= Static Variables ================\r\nconst editUserChapterBaseLinkAdministration = \"/administration/booklets/\";\r\nconst editUserChapterBaseLinkStaff = \"/staff/booklets/\";\r\nconst editUserChapterBaseLinkClient = \"/client/booklets/\";\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\nconst backLink = \"/administration/collections/management\";\r\n\r\nconst surveyStyle = \"default\";\r\n \r\n// const surveyOptions = {\r\n\r\n// };\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst ViewCollection = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, CollectionID, ToggleDrawerClose, CheckAuthenticationValidity } = props;\r\n\r\n        const [collectionOriginal, setCollectionOriginal] = useState(null);\r\n\r\n        const [collectionEdit, setCollectionEdit] = useState(null);\r\n\r\n        // Alert variable\r\n        const [alert, setAlert] = useState(new AlertType());\r\n\r\n    // Functions ===\r\n\r\n        // Loads existing booklet chosen by user from the database\r\n        const getCollection = useCallback(() =>\r\n        {\r\n\r\n            if(CollectionID != null)\r\n            {\r\n                get(\"collections/\" + CollectionID, appState.token, (error, response) => \r\n                {\r\n                    if(error)\r\n                    {\r\n                        setAlert(new AlertType('Unable to retrieve Collection. Please refresh and try again.', \"error\"));\r\n                    }\r\n                    else\r\n                    {\r\n                        if(response.status === 200 || response.status === 304)\r\n                        {\r\n                            setCollectionOriginal(response.data.collection);\r\n                            setAlert(new AlertType('Successfully pulled Collection.', \"success\"));\r\n                        }\r\n                        else\r\n                        {\r\n                            setAlert(new AlertType('Unable to retrieve Collection. Please refresh and try again.', \"error\"));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setAlert(new AlertType('Unable to retrieve Collection. Please refresh and try again.', \"error\"));\r\n            }\r\n        }, [ CollectionID, appState ]);\r\n\r\n    // Hooks ===\r\n\r\n        // First Render only because of the [ ] empty array tracking with the useEffect\r\n        useEffect( () =>\r\n        {\r\n            ToggleDrawerClose();\r\n            setTimeout(() => {\r\n                CheckAuthenticationValidity( (tokenValid) => \r\n                {\r\n                    if(tokenValid)\r\n                    {\r\n                        // Load or Do Something\r\n                        getCollection();\r\n                    }\r\n                    else {\r\n\r\n                        // Bad Response\r\n                        setAlert(null);\r\n                    }\r\n                });\r\n            }, 200);    //\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ ]);\r\n\r\n        useEffect( () => \r\n        {\r\n            setCollectionEdit(collectionOriginal);\r\n        }, [ collectionOriginal ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            alert != null? (\r\n\r\n                // Notice the shorthand React render Fragment <> & </> instead of <div> & </div>, both work the same\r\n                <div className={classes.root}>\r\n                    <Grid container\r\n                    className={classes.rootGrid}\r\n                    direction=\"row\"\r\n                    justifyContent=\"flex-start\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={1}\r\n                    >\r\n                        <Grid item xs={5}>\r\n                            <Box mx={1} my={1}>\r\n                                <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                    {/* <Grid item>\r\n                                        <IconButton component={Link} to={backLink}>\r\n                                            <ArrowBackIosIcon />\r\n                                        </IconButton>\r\n                                    </Grid> */}\r\n                                    <Grid item xs>\r\n                                        <Typography variant=\"h4\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                                            Viewing Collection {collectionOriginal? `\"${collectionOriginal._id}\"` : null}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box> \r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Box mx={1} my={1}>\r\n                                <AlertMessage alert={alert} setParentAlert={setAlert} />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Card raised={true}>\r\n                                <Box mx={2} my={1} boxShadow={0}>\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"column\"\r\n                                        justifyContent=\"flex-start\"\r\n                                        alignItems=\"stretch\"\r\n                                        spacing={1}\r\n                                    >\r\n                                        {collectionEdit?\r\n                                        (\r\n                                            <>\r\n                                                <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"h6\" component=\"h6\">\r\n                                                            Collection properties\r\n                                                        </Typography>\r\n                                                        <Divider />\r\n                                                    </Grid>\r\n                                                    <Grid item xs>\r\n                                                        <Box mx={3} my={1} boxShadow={0}>\r\n                                                            <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                                                {/* <Grid item>\r\n                                                                    <Tooltip\r\n                                                                        placement=\"bottom\"\r\n                                                                        title=\"Edit Chapter\"\r\n                                                                    >\r\n                                                                        <Button \r\n                                                                            size=\"small\" \r\n                                                                            variant=\"contained\" \r\n                                                                            color=\"secondary\"\r\n                                                                            startIcon={<EditIcon />}\r\n                                                                            component={Link}\r\n                                                                            to={`/administration/booklets/user/edit/${CollectionID}`}\r\n                                                                        >\r\n                                                                            Edit\r\n                                                                        </Button>\r\n                                                                    </Tooltip>\r\n                                                                </Grid> */}\r\n                                                                 <Grid item>\r\n                                                                    <Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n                                                                        <Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"secondary\" align=\"left\" gutterBottom>\r\n                                                                            Patient:&nbsp;\r\n                                                                        </Typography>\r\n                                                                        <Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"textSecondary\" align=\"left\" gutterBottom>\r\n                                                                            {`${collectionEdit.patientId.info.name}`}\r\n                                                                        </Typography>\r\n                                                                    </Typography>\r\n                                                                </Grid>\r\n                                                                <Grid item>\r\n                                                                    <Typography display=\"block\" component=\"div\" align=\"left\" gutterBottom>\r\n                                                                        <Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"secondary\" align=\"left\" gutterBottom>\r\n                                                                            Patient ID:&nbsp;\r\n                                                                        </Typography>\r\n                                                                        <Typography display=\"inline\" variant=\"body1\" component=\"div\" color=\"textSecondary\" align=\"left\" gutterBottom>\r\n                                                                            {`${collectionEdit.patientId._id}`}\r\n                                                                        </Typography>\r\n                                                                    </Typography>\r\n                                                                </Grid>\r\n                                                            </Grid>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Tooltip\r\n                                                            placement=\"left\"\r\n                                                            title=\"This page is to view the selected collection.\"\r\n                                                        >\r\n                                                            <IconButton>\r\n                                                                <HelpOutlineIcon />\r\n                                                            </IconButton>\r\n                                                        </Tooltip>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item xs={12}>\r\n                                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                                        <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>            \r\n                                                            {/* <Grid item xs={2}>\r\n                                                                <TextField label=\"Collection ID\"\r\n                                                                    size=\"small\"\r\n                                                                    variant=\"filled\"\r\n                                                                    error={collectionEdit._id === \"\"? true : false}\r\n                                                                    fullWidth\r\n                                                                    value={collectionEdit._id? collectionEdit._id : \"\"}\r\n                                                                    onChange={ (event) => { nameHandler(event); }}\r\n                                                                />\r\n                                                            </Grid> */}\r\n                                                            <Grid item xs={2}>\r\n                                                                <TextField label=\"Collection ID\"\r\n                                                                    disabled\r\n                                                                    size=\"small\"\r\n                                                                    variant=\"filled\"\r\n                                                                    fullWidth\r\n                                                                    value={collectionEdit._id}\r\n                                                                />\r\n                                                            </Grid>\r\n                                                            <Grid item xs={2}>\r\n                                                                <TextField label=\"Updated\"\r\n                                                                    disabled\r\n                                                                    size=\"small\"\r\n                                                                    fullWidth\r\n                                                                    variant=\"filled\"\r\n                                                                    value={new Date(collectionEdit.updatedAt).toLocaleString()}\r\n                                                                    InputProps={{\r\n                                                                        readOnly: true,\r\n                                                                    }}\r\n                                                                />\r\n                                                            </Grid>\r\n                                                            <Grid item xs={2}>\r\n                                                                <TextField label=\"Updated By\"\r\n                                                                    disabled\r\n                                                                    size=\"small\"\r\n                                                                    fullWidth\r\n                                                                    variant=\"filled\"\r\n                                                                    value={collectionEdit.modifiedBy}\r\n                                                                    InputProps={{\r\n                                                                        readOnly: true,\r\n                                                                    }}\r\n                                                                />\r\n                                                            </Grid>\r\n                                                            <Grid item xs={2}>\r\n                                                                <TextField label=\"Created\"\r\n                                                                    disabled\r\n                                                                    size=\"small\"\r\n                                                                    fullWidth\r\n                                                                    variant=\"filled\" \r\n                                                                    value={new Date(collectionEdit.createdAt).toLocaleString()}\r\n                                                                    InputProps={{\r\n                                                                        readOnly: true,\r\n                                                                    }}\r\n                                                                />\r\n                                                            </Grid>\r\n                                                            <Grid item xs={2}>\r\n                                                                <TextField label=\"Created By\"\r\n                                                                    disabled\r\n                                                                    size=\"small\"\r\n                                                                    fullWidth\r\n                                                                    variant=\"filled\" \r\n                                                                    value={collectionEdit.createdBy}\r\n                                                                    InputProps={{\r\n                                                                        readOnly: true,\r\n                                                                    }}\r\n                                                                />\r\n                                                            </Grid>       \r\n                                                        </Grid>\r\n                                                    </Box>\r\n                                                </Grid>\r\n                                                <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"h6\" component=\"h6\" className={classes.button}>\r\n                                                            Collection chapters\r\n                                                        </Typography>\r\n                                                        <Divider />\r\n                                                    </Grid>\r\n                                                    <Grid item xs>\r\n                                                        <Box mx={3} my={1} boxShadow={0}>\r\n                                                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                                {`${collectionEdit.chapterTemplates.length} total chapter${(collectionEdit.chapterTemplates.length > 1)? 's' : ''}`}\r\n                                                            </Typography>\r\n                                                            <LinearProgressWithLabel value={collectionEdit.overallCompleteness} />\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    {/* <Grid item xs container direction=\"column\" justifyContent=\"center\" alignItems=\"flex-end\" spacing={1}>\r\n                                                        <Typography variant=\"body2\" color=\"inherit\">\r\n                                                           Overall completeness\r\n                                                        </Typography>\r\n                                                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                            {`${Math.round(collectionEdit.overallCompleteness)}%`}\r\n                                                        </Typography>\r\n                                                    </Grid> */}\r\n                                                </Grid>\r\n                                                <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                                                    <Grid item>\r\n                                                        <List dense={false}>\r\n                                                            {collectionEdit.memberChapters.map(item => {\r\n\r\n                                                                let link = appState.role === \"Admin\"? editUserChapterBaseLinkAdministration : \"\";\r\n                                                                link = appState.role === \"Coordinator\"? editUserChapterBaseLinkStaff : link;\r\n                                                                link = appState.role === \"Volunteer\"? editUserChapterBaseLinkStaff : link;\r\n                                                                link = appState.role === \"Patient\"? editUserChapterBaseLinkClient : link;\r\n\r\n                                                                return (\r\n                                                                    <ListItem key={item._id} dense={false} divider={true}>\r\n                                                                        <ListItemAvatar>\r\n                                                                            {/* <Avatar>\r\n                                                                                <Ballot />\r\n                                                                            </Avatar> */}\r\n                                                                            <CircularProgressWithLabel value={item.completeStatus}/>\r\n                                                                        </ListItemAvatar>\r\n                                                                        <ListItemText\r\n                                                                            primary={item.name}\r\n                                                                            // secondary={`${item.completeStatus}%`}\r\n                                                                            secondary={item._id}\r\n                                                                        />\r\n                                                                        <ListItemSecondaryAction>\r\n                                                                            <Tooltip\r\n                                                                                placement=\"right\"\r\n                                                                                title=\"Fill in Chapter\"\r\n                                                                            >\r\n                                                                                <IconButton edge=\"end\" aria-label=\"edit\" size=\"small\" component={Link} to={link + \"user/edit/\" + item._id} >\r\n                                                                                    <EditIcon />\r\n                                                                                </IconButton>\r\n                                                                            </Tooltip>\r\n                                                                        </ListItemSecondaryAction>\r\n                                                                    </ListItem> \r\n                                                                );\r\n                                                            })}\r\n                                                        </List>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </>\r\n                                        ) : (\r\n                                            <Grid item xs={12} container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1}>\r\n                                                <Grid item>\r\n                                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                                        <CircularProgress />\r\n                                                    </Box>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        )}   \r\n                                        {/* <Grid item xs={12}>\r\n                                            <Box mx={1} my={1} boxShadow={0}>\r\n                                                <Collapse in={!surveyJSloading}>\r\n                                                    {survey != null?\r\n                                                    (\r\n                                                        <Survey.Survey id={surveyContainerID} model={survey} mode=\"display\" />\r\n                                                    ) : (\r\n                                                        null\r\n                                                    )}\r\n                                                </Collapse>\r\n                                            </Box>\r\n                                        </Grid> */}\r\n                                    </Grid>\r\n                                </Box>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            ) : (\r\n                <Typography variant=\"h6\" color=\"inherit\" align=\"center\" gutterBottom>\r\n                    Not Authorized. Please refresh and try again.\r\n                </Typography>\r\n            )\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nViewCollection.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    CollectionID: PropTypes.string.isRequired,\r\n    ToggleDrawerClose: PropTypes.func.isRequired,\r\n    CheckAuthenticationValidity: PropTypes.func.isRequired\r\n}\r\n\r\nViewCollection.defaultProps = \r\n{\r\n    appState: {},\r\n    CollectionID: {},\r\n    ToggleDrawerClose: () => {},\r\n    CheckAuthenticationValidity: () => {}\r\n}\r\n\r\nexport default ViewCollection;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from  '@material-ui/core/ButtonGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n\r\n// ==================== MUI Icons ====================\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport CheckBoxOutlineBlankOutlinedIcon from '@material-ui/icons/CheckBoxOutlineBlankOutlined';\r\nimport ListAltOutlinedIcon from '@material-ui/icons/ListAltOutlined';\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\nconst selectFilterOptionsProjects = [ { key: \"ProjectName\", value: \"projectName\", display: \"Name\"}, \r\n{ key: \"ProjectId\", value: \"projectId\", display: \"ID\"} ];\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst ProjectsManagementControlPanel = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const {  setParentAlert,\r\n            isDense, setIsDense,\r\n            isTemplates, setIsTemplates,\r\n            dataList, getParentData,\r\n            setSearchFilteredDataList,\r\n            setCreateProjectDialog,\r\n            setAssignMemberDialog,\r\n            setAssignServiceDialog } = props;\r\n\r\n        const [selectSearchFilterOption, setSelectSearchFilterOption ] = useState(selectFilterOptionsProjects[0].value);\r\n        const [searchFilter, setSearchFilter] = useState(\"\");\r\n\r\n    // Functions ===\r\n\r\n        const pullHandler = useCallback(() =>\r\n        {\r\n            try\r\n            {\r\n                getParentData();\r\n                setParentAlert(new AlertType('Refreshed initiated...', \"info\"));\r\n            }\r\n            catch\r\n            {\r\n\r\n            }\r\n            \r\n        }, [ getParentData, setParentAlert ]);\r\n\r\n        const createProjectHandler = useCallback(() =>\r\n        {\r\n            setCreateProjectDialog(true);\r\n        }, [ setCreateProjectDialog ]);\r\n\r\n        const AssignMemberHandler = useCallback(() =>\r\n        {\r\n            setAssignMemberDialog(true);\r\n        }, [ setAssignMemberDialog ]);\r\n\r\n        const AssignServiceHandler = useCallback(() =>\r\n        {\r\n            setAssignServiceDialog(true);\r\n        }, [ setAssignServiceDialog ]);\r\n\r\n\r\n        // const createUserHandler = useCallback(() =>\r\n        // {\r\n        //     setCreateChapterUserDialog(true);\r\n        // }, [ setCreateChapterUserDialog ]);\r\n\r\n        const compactHandler = useCallback((event) =>\r\n        {\r\n            setIsDense(event.target.checked);\r\n        }, [ setIsDense ]);\r\n\r\n        // const chapterTemplatesButtonHandler = useCallback(() =>\r\n        // {\r\n        //     setIsTemplates(true);\r\n        //     setSelectSearchFilterOption(selectFilterOptionsProjects[0].value);\r\n        // }, [ setIsTemplates ]);\r\n\r\n        // const userChaptersButtonHandler = useCallback(() =>\r\n        // {\r\n        //     setIsTemplates(false);\r\n        //     setSelectSearchFilterOption(selectFilterOptionsProjects[0].value);\r\n        // }, [ setIsTemplates ]);\r\n\r\n        const selectSearchHandler = useCallback((event) =>\r\n        {\r\n            setSearchFilter(\"\");\r\n            setSelectSearchFilterOption(event.target.value);\r\n\r\n        }, [ setSelectSearchFilterOption ]);\r\n\r\n        const searchHandler = useCallback((event) =>\r\n        {\r\n            let tempFilter = event.target.value.toUpperCase();\r\n            let tempArray = [];\r\n            dataList.forEach( item => \r\n            {\r\n                switch(selectSearchFilterOption)\r\n                {\r\n                    case \"projectName\":\r\n\r\n                        if(item.name.toUpperCase().indexOf(tempFilter) > -1)\r\n                        {\r\n                            tempArray.push(item);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case \"projectId\":\r\n\r\n                        if(item._id.toUpperCase().indexOf(tempFilter) > -1)\r\n                        {\r\n                            tempArray.push(item);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    default:\r\n                }\r\n                \r\n            });\r\n\r\n            setSearchFilter(event.target.value);\r\n            setSearchFilteredDataList(tempArray);\r\n        }, [ dataList, setSearchFilteredDataList, selectSearchFilterOption ]);\r\n\r\n\r\n    // Hooks ===\r\n\r\n        // First Render only because of the [ ] empty array tracking with the useEffect\r\n        useEffect( () =>\r\n        {\r\n            setSearchFilter(\"\");\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ dataList ]);\r\n\r\n        // useEffect( () =>\r\n        // {\r\n        //     setSelectSearchFilterOption(selectFilterOptionsProjects[0].value);\r\n            \r\n        //     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        // }, [ isTemplates ]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(searchFilter === \"\")\r\n            {\r\n                setSearchFilteredDataList(dataList);\r\n            }\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ setSelectSearchFilterOption, searchFilter ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                <Box mx={2} my={1} boxShadow={0}>\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justifyContent=\"flex-start\"\r\n                        alignItems=\"stretch\"\r\n                        spacing={1}\r\n                    >\r\n                        <Grid item xs={12} container direction=\"row\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={1}>\r\n                            <Grid item>\r\n                                <Typography variant=\"h6\" component=\"h6\">\r\n                                    Manage\r\n                                </Typography>\r\n                                <Divider />\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <Box mx={3} my={1} boxShadow={0}>\r\n                                    <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={1}>\r\n                                        {/* <Grid item>\r\n                                            <ButtonGroup size=\"small\" variant=\"contained\" color=\"secondary\">\r\n                                                    <Button \r\n                                                        startIcon={<CheckBoxOutlineBlankOutlinedIcon />}\r\n                                                        disabled={isTemplates}\r\n                                                        onClick={ () => { chapterTemplatesButtonHandler(); }}\r\n                                                    >\r\n                                                        Chapter Templates\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        startIcon={<ListAltOutlinedIcon />}\r\n                                                        disabled={!isTemplates}\r\n                                                        onClick={ () => { userChaptersButtonHandler(); }}\r\n                                                    >\r\n                                                        User Chapters\r\n                                                    </Button>\r\n                                            </ButtonGroup>\r\n                                        </Grid> */}\r\n                                        <Grid item>\r\n                                            <Tooltip\r\n                                                placement=\"bottom\"\r\n                                                title=\"Refresh Online Projects\"\r\n                                            >\r\n                                                <Button \r\n                                                    size=\"small\" \r\n                                                    variant=\"contained\" \r\n                                                    color=\"primary\"\r\n                                                    startIcon={<RefreshIcon />}\r\n                                                    onClick={() => { pullHandler(); }}\r\n                                                >\r\n                                                    Refresh\r\n                                                </Button>\r\n                                            </Tooltip> \r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Tooltip\r\n                                                placement=\"bottom\"\r\n                                                title=\"Create Project\"\r\n                                            >\r\n                                                <Button \r\n                                                    size=\"small\" \r\n                                                    variant=\"contained\" \r\n                                                    color=\"primary\"\r\n                                                    disabled={!isTemplates}\r\n                                                    startIcon={<AddBoxOutlinedIcon />}\r\n                                                    onClick={() => { createProjectHandler(); }}\r\n                                                >\r\n                                                    Create Project\r\n                                                </Button>\r\n                                            </Tooltip> \r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Tooltip\r\n                                                placement=\"bottom\"\r\n                                                title=\"Assign Members to Project\"\r\n                                            >\r\n                                                <Button \r\n                                                    size=\"small\" \r\n                                                    variant=\"contained\" \r\n                                                    color=\"secondary\"\r\n                                                    disabled={!isTemplates}\r\n                                                    startIcon={<AddBoxOutlinedIcon />}\r\n                                                    onClick={() => { AssignMemberHandler(); }}\r\n                                                >\r\n                                                    Assign Member\r\n                                                </Button>\r\n                                            </Tooltip> \r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Tooltip\r\n                                                placement=\"bottom\"\r\n                                                title=\"Assign Services to Project\"\r\n                                            >\r\n                                                <Button \r\n                                                    size=\"small\" \r\n                                                    variant=\"contained\" \r\n                                                    color=\"secondary\"\r\n                                                    disabled={!isTemplates}\r\n                                                    startIcon={<AddBoxOutlinedIcon />}\r\n                                                    onClick={() => { AssignServiceHandler(); }}\r\n                                                >\r\n                                                    Assign Services\r\n                                                </Button>\r\n                                            </Tooltip> \r\n                                        </Grid>\r\n                                        {/* {isTemplates? (\r\n                                            <>\r\n                                                <Grid item>\r\n                                                    <Tooltip\r\n                                                        placement=\"bottom\"\r\n                                                        title=\"Create Chapter Template\"\r\n                                                    >\r\n                                                        <Button \r\n                                                            size=\"small\" \r\n                                                            variant=\"contained\" \r\n                                                            color=\"primary\"\r\n                                                            disabled={!isTemplates}\r\n                                                            startIcon={<AddBoxOutlinedIcon />}\r\n                                                            onClick={() => { createProjectHandler(); }}\r\n                                                        >\r\n                                                            Create Template\r\n                                                        </Button>\r\n                                                    </Tooltip> \r\n                                                </Grid>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <Grid item>\r\n                                                    <Tooltip\r\n                                                        placement=\"bottom\"\r\n                                                        title=\"Start Member Chapter\"\r\n                                                    >\r\n                                                        <Button \r\n                                                            size=\"small\" \r\n                                                            variant=\"contained\" \r\n                                                            color=\"primary\"\r\n                                                            disabled={isTemplates}\r\n                                                            startIcon={<AddBoxOutlinedIcon />}\r\n                                                            onClick={() => { createUserHandler(); }}\r\n                                                        >\r\n                                                            Start Member Chapter\r\n                                                        </Button>\r\n                                                    </Tooltip> \r\n                                                </Grid>\r\n                                            </>\r\n                                        )} */}\r\n                                        \r\n                                    </Grid>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Tooltip\r\n                                    placement=\"left\"\r\n                                    title=\"Use this page to manage your projects. Any information that a patient has answered in a chapter along with its versions exist in the Chapter Tab. Otherwise, created chapter Templates exists in its own tab.\"\r\n                                >\r\n                                    <IconButton>\r\n                                        <HelpOutlineIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                            <Box mx={1} my={1} boxShadow={0}>\r\n                                <Card>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" spacing={3}>\r\n                                            <Grid item>\r\n                                                <Typography color=\"textPrimary\" variant=\"subtitle2\">\r\n                                                    Table Options\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <FormControlLabel\r\n                                                    control={<Switch checked={isDense} onChange={ (event) => { compactHandler(event); }} />}\r\n                                                    label=\"Compact\"\r\n                                                    labelPlacement=\"end\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <FormControl id=\"search-filter-select-label\" variant=\"filled\" size=\"small\" style={{minWidth: 140}}>\r\n                                                    <InputLabel>\r\n                                                        Search Filter\r\n                                                    </InputLabel>\r\n                                                    <Select\r\n                                                        autoWidth={true}\r\n                                                        labelId=\"search-filter-select-label\"\r\n                                                        value={selectSearchFilterOption}\r\n                                                        onChange={(event) => { selectSearchHandler(event); } }\r\n                                                    >\r\n                                                        {selectFilterOptionsProjects.map( item => \r\n                                                        {\r\n                                                            return(\r\n                                                                <MenuItem key={item.key} value={item.value}>\r\n                                                                    <em>{item.display}</em>\r\n                                                                </MenuItem>  \r\n                                                            )\r\n                                                        })}\r\n                                                        \r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                <TextField label=\"Search\"\r\n                                                    type=\"search\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"filled\"\r\n                                                    fullWidth\r\n                                                    value={searchFilter}\r\n                                                    onChange={ (event) => { searchHandler(event); }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Card>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={1}>\r\n                            <Grid item>\r\n                                <Typography variant=\"h6\" component=\"h6\">\r\n                                    Table\r\n                                </Typography>\r\n                                <Divider />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </>\r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nProjectsManagementControlPanel.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    isDense: PropTypes.bool.isRequired,\r\n    setIsDense: PropTypes.func.isRequired,\r\n    isTemplates:PropTypes.bool.isRequired,\r\n    setIsTemplates: PropTypes.func.isRequired,\r\n    dataList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    setSearchFilteredDataList: PropTypes.func.isRequired,\r\n    setCreateProjectDialog: PropTypes.func.isRequired,\r\n    setAssignServiceDialog: PropTypes.func.isRequired\r\n}\r\n\r\nProjectsManagementControlPanel.defaultProps = \r\n{\r\n    setParentAlert: () => {},\r\n    setIsDense: () => {},\r\n    setIsTemplates: () => {},\r\n    dataList: {},\r\n    getParentData: () => {},\r\n    setSearchFilteredDataList: () => {},\r\n    setCreateProjectDialog: () => {},\r\n    setAssignServiceDialog: () => {}\r\n}\r\n\r\nexport default ProjectsManagementControlPanel;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport { TableHead } from '@material-ui/core';\r\nimport { TableRow } from '@material-ui/core';\r\nimport { TableCell } from '@material-ui/core';\r\nimport { TableSortLabel } from '@material-ui/core';\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\n// ==================== MUI Icons ====================\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        visuallyHidden: {\r\n            border: 0,\r\n            clip: 'rect(0 0 0 0)',\r\n            height: 1,\r\n            margin: -1,\r\n            overflow: 'hidden',\r\n            padding: 0,\r\n            position: 'absolute',\r\n            top: 20,\r\n            width: 1,\r\n          }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n    const headCellTitlesProject = [\r\n        { id: 'projectName', numeric: false, disablePadding: true, label: 'Project Name' },\r\n        { id: 'projectId', numeric: false, disablePadding: true, label: 'Project ID' },\r\n        { id: 'memberList', numeric: true, disablePadding: false, label: 'Associated Members' },\r\n        { id: 'collectionList', numeric: true, disablePadding: false, label: 'Associated Services' },\r\n        { id: 'createdAt', numeric: true, disablePadding: false, label: 'Date Created' },\r\n        { id: 'updatedAt', numeric: true, disablePadding: false, label: 'Date Last Modified' },\r\n    ];\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst ProjectTableHead = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { userID, isTemplates, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n\r\n        const [headCells, setHeadCells] = useState(null);\r\n\r\n        \r\n    // Functions ===\r\n\r\n        const createSortHandler = useCallback((property) => (event) => {\r\n            onRequestSort(event, property);\r\n        }, [ onRequestSort ]);\r\n\r\n    // Hooks ===\r\n\r\n    useEffect( () =>\r\n        {\r\n            setHeadCells(headCellTitlesProject);\r\n            \r\n        }, [ userID, isTemplates ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                            checked={rowCount > 0 && numSelected === rowCount}\r\n                            onChange={onSelectAllClick}\r\n                            inputProps={{ 'aria-label': 'select all' }}\r\n                        />\r\n                    </TableCell>\r\n                    {headCells? ( \r\n                        headCells.map((headCell) => (\r\n                            <TableCell\r\n                                key={headCell.id}\r\n                                align={headCell.numeric ? 'right' : 'left'}\r\n                                padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                                sortDirection={orderBy === headCell.id ? order : false}\r\n                            >\r\n                                <TableSortLabel\r\n                                    active={orderBy === headCell.id}\r\n                                    direction={orderBy === headCell.id ? order : 'asc'}\r\n                                    onClick={createSortHandler(headCell.id)}\r\n                                >\r\n                                {headCell.label}\r\n                                {orderBy === headCell.id ? (\r\n                                    <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                    </span>\r\n                                ) : null}\r\n                                </TableSortLabel>\r\n                            </TableCell>\r\n                        ))\r\n                    ) : ( \r\n                        null\r\n                    )}\r\n                </TableRow>\r\n            </TableHead>\r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nProjectTableHead.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    userID: PropTypes.string,\r\n    isTemplates: PropTypes.bool.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n}\r\n\r\nProjectTableHead.defaultProps = \r\n{\r\n    userID: null,\r\n    isTemplates: true,\r\n    numSelected: {},\r\n    onRequestSort: () => {},\r\n    onSelectAllClick: () => {},\r\n    order: {},\r\n    orderBy: {},\r\n    rowCount: {},\r\n}\r\n\r\nexport default ProjectTableHead;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with \r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';                // Used for link navigation to other areas on the website\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\nimport clsx from 'clsx';                                // Constructing className strings conditionally. Used for render logic\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport { lighten } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// ==================== MUI Icons ====================\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(1),\r\n          },\r\n          highlight:\r\n            theme.palette.type === 'light'\r\n              ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n                }\r\n              : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n                },\r\n          title: {\r\n            flex: '1 1 100%',\r\n          }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n// const viewCollectionBaseLinkAdministration = \"/administration/collections/\";\r\n// const viewCollectionBaseLinkStaff = \"/staff/collections/\";\r\n// const viewCollectionBaseLinkClient = \"/client/collections/\";\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst ProjectTableToolbar = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, isTemplates, selectedDataItemsList, setParentDeleteProjectDialog} = props;\r\n        \r\n        // const [viewUrl, setViewUrl] = useState(\"\");\r\n        // const [editUrl, setEditUrl] = useState(\"\");\r\n\r\n        const [toolNone, setToolNone] = useState(false);\r\n        const [toolOne, setToolOne] = useState(false);\r\n        const [toolMultiple, setToolMultiple] = useState(false);\r\n\r\n    // Functions ===\r\n    \r\n        const toolHandler = useCallback(() => {\r\n            if(selectedDataItemsList.length === 0) {\r\n                setToolNone(true);\r\n                setToolOne(false);\r\n                setToolMultiple(false);\r\n            }\r\n            else if(selectedDataItemsList.length === 1) {\r\n                setToolNone(false);\r\n                setToolOne(true);\r\n                setToolMultiple(false);\r\n            }\r\n            else if(selectedDataItemsList.length > 1) {\r\n                setToolNone(false);\r\n                setToolOne(false);\r\n                setToolMultiple(true);\r\n            }\r\n        }, [ selectedDataItemsList, setToolNone, setToolOne, setToolMultiple]);\r\n    \r\n\r\n        const deleteHandler = useCallback(() => {\r\n            setParentDeleteProjectDialog(true);\r\n        }, [ setParentDeleteProjectDialog ]);\r\n\r\n        // const exportHandler = useCallback(() => {\r\n        //     setParentExportCollectionDialog(true);\r\n        // }, [ setParentExportCollectionDialog ]);\r\n        \r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () =>\r\n        {\r\n            toolHandler();  \r\n        }, [ selectedDataItemsList, toolHandler ]);\r\n\r\n        useEffect( () => {\r\n            \r\n            if(toolNone || toolMultiple)\r\n            {\r\n                // setViewUrl(\"\");\r\n            }\r\n            else if(toolOne)\r\n            {\r\n                // if(appState.role === \"Admin\")\r\n                // {\r\n                //     setViewUrl(viewCollectionBaseLinkAdministration + \"view/\" + selectedDataItemsList[0]._id);\r\n                // }\r\n                // else if(appState.role === \"Coordinator\" || appState.role === \"Volunteer\")\r\n                // {\r\n                //     setViewUrl(viewCollectionBaseLinkStaff + \"view/\" + selectedDataItemsList[0]._id);\r\n                // }\r\n                // else\r\n                // {\r\n                //     setViewUrl(viewCollectionBaseLinkClient + \"view/\" + selectedDataItemsList[0]._id);\r\n                // }\r\n\r\n                \r\n            }\r\n\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [toolNone, toolOne, toolMultiple, isTemplates ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <Toolbar\r\n                className={clsx(classes.root, { [classes.highlight]: selectedDataItemsList.length > 0 } )}\r\n            >\r\n                {selectedDataItemsList.length > 0 ? (\r\n                    <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                        {selectedDataItemsList.length} Selected Item{selectedDataItemsList.length > 1 ? \"s\" : null}\r\n                    </Typography>\r\n                ) : (\r\n                    <Typography className={classes.title} variant=\"h6\" component=\"div\">\r\n                        Project Results\r\n                    </Typography>\r\n                )}\r\n\r\n                {toolNone ? (\r\n                    <>\r\n                        <Tooltip title=\"Filter list\">\r\n                            <IconButton aria-label=\"filter list\">\r\n                                <FilterListIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                ) : (null)}\r\n                \r\n                {toolOne? (\r\n                    <>\r\n                        {/* <Tooltip title=\"View\">\r\n                            <IconButton aria-label=\"view\" component={Link} to={viewUrl} disabled>\r\n                                <VisibilityIcon/>\r\n                            </IconButton>\r\n                        </Tooltip> */}\r\n                            \r\n                        {/* <Tooltip title=\"Edit\">\r\n                            <IconButton aria-label=\"edit\" component={Link} to={editUrl} >\r\n                                <EditIcon/>\r\n                            </IconButton>\r\n                        </Tooltip> */}\r\n                            \r\n                        {/* <Tooltip title=\"Export\" onClick={() => exportHandler()}>\r\n                            <IconButton aria-label=\"export\">\r\n                                <SystemUpdateAltIcon/>\r\n                            </IconButton>\r\n                        </Tooltip> */}\r\n                            \r\n                        <Tooltip title=\"Delete\">\r\n                            <IconButton aria-label=\"delete\" onClick={() => deleteHandler()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                ) : (null)}\r\n                {toolMultiple ? (\r\n                    <>\r\n                        {/* <Tooltip title=\"Export\">\r\n                            <IconButton aria-label=\"export\" onClick={() => exportHandler()}>\r\n                                <SystemUpdateAltIcon/>\r\n                            </IconButton>\r\n                        </Tooltip> */}\r\n\r\n                        <Tooltip title=\"Delete\">\r\n                            <IconButton aria-label=\"delete\" onClick={() => deleteHandler()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                ) : (null)}\r\n            </Toolbar>\r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nProjectTableToolbar.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    selectedDataItemsList: PropTypes.array.isRequired,\r\n    setParentDeleteProjectDialog: PropTypes.func.isRequired,\r\n    isTemplates: PropTypes.bool.isRequired\r\n}\r\n\r\nProjectTableToolbar.defaultProps = \r\n{\r\n    appState: {},\r\n    selectedDataItemsList: {},\r\n    setParentDeleteProjectDialog: () => {},\r\n    isTemplates: true\r\n}\r\n\r\nexport default ProjectTableToolbar;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with Templates Table Component.\r\n// Displays all existing Templates created and allows\r\n// user to delete, edit and preview the Templates\r\n// survey questions.\r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// ===================== Components ======================\r\nimport ProjectTableHead from './ProjectTableHead';\r\nimport ProjectTableToolbar from './ProjectTableToolbar';\r\n\r\n// ==================== Helpers ====================\r\n\r\n// ==================== MUI ====================\r\nimport Box from '@material-ui/core/Box';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// ==================== Icons ====================\r\n\r\n// ==================== Static Helper Functions ====================\r\n\r\n    const descendingComparator = (a, b, orderBy) => {    // Establishing the result of a comparison between two objects in an array\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n    }\r\n\r\n    const getComparator = (order, orderBy) => {            // Deciding asc or desc comparison, notice the negative version of the funcion above\r\n\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    const stableSort = (array, comparator) => {\r\n\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(1),\r\n        },\r\n        tableRow: {\r\n            cursor: \"pointer\"\r\n        }\r\n    }));\r\n\r\n// ==================== Static Variables ====================\r\n\r\n//=================================================== TemplateTable Component ===================================================\r\nexport default function ProjectTable(props) {\r\n\r\n  // Variables ===\r\n\r\n         // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        const { appState, isDense, isTemplates, userID, searchFilteredDataList, setParentDeleteProjectDialog,\r\n            selectedDataItemsList, setSelectedDataItemsList } = props;\r\n\r\n        // Responsive Table variables\r\n        const [order, setOrder] = useState('asc');\r\n        const [orderBy, setOrderBy] = useState('collectionId');\r\n        const [page, setPage] = useState(0);\r\n        const [rowsPerPage, setRowsPerPage] = useState(20);\r\n\r\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, searchFilteredDataList.length - page * rowsPerPage);\r\n\r\n\r\n    // Functions ===\r\n\r\n        const handleRequestSort = useCallback((event, property) => {\r\n\r\n            // console.log(property);\r\n\r\n            let isAsc = orderBy === property && order === 'asc';\r\n            setOrder(isAsc ? 'desc' : 'asc');\r\n            setOrderBy(property);\r\n\r\n        }, [ order, setOrder, orderBy, setOrderBy ]);\r\n\r\n        const handleSelectAllClick = useCallback((event) => {\r\n\r\n            if (event.target.checked) {\r\n\r\n                let newSelecteds = []\r\n                \r\n                searchFilteredDataList.forEach(elem => \r\n                {\r\n                    newSelecteds.push(elem);\r\n                });\r\n                \r\n                setSelectedDataItemsList(newSelecteds);\r\n                \r\n                return;\r\n\r\n            }\r\n\r\n            setSelectedDataItemsList([]);\r\n        }, [ searchFilteredDataList, setSelectedDataItemsList ]);\r\n\r\n        const handleClick = useCallback((event, item) => {\r\n            \r\n            let previousSelectedIds = selectedDataItemsList.map(elem => elem._id);\r\n            let selectedIndex = previousSelectedIds.indexOf(item._id);\r\n            let newSelected = [];\r\n\r\n            if (selectedIndex === -1)\r\n            {\r\n                newSelected = newSelected.concat(selectedDataItemsList, item);\r\n            }\r\n            else if (selectedIndex === 0)\r\n            {\r\n                newSelected = newSelected.concat(selectedDataItemsList.slice(1));\r\n            }\r\n            else if (selectedIndex === selectedDataItemsList.length - 1)\r\n            {\r\n                newSelected = newSelected.concat(selectedDataItemsList.slice(0, -1));\r\n            }\r\n            else if (selectedIndex > 0)\r\n            {\r\n                newSelected = newSelected.concat(\r\n                    selectedDataItemsList.slice(0, selectedIndex),\r\n                    selectedDataItemsList.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            setSelectedDataItemsList(newSelected);\r\n        }, [ selectedDataItemsList, setSelectedDataItemsList ]);\r\n\r\n        const isSelected = useCallback((item) => {\r\n\r\n            let previousSelectedIds = selectedDataItemsList.map(elem => elem._id);\r\n            return previousSelectedIds.indexOf(item._id) !== -1;\r\n\r\n        }, [ selectedDataItemsList ]);\r\n        \r\n        const handleChangePage = useCallback((newPage) => {\r\n\r\n            setPage(newPage);\r\n\r\n        }, [ setPage ]);\r\n\r\n        const handleChangeRowsPerPage = useCallback((event) => {\r\n            setRowsPerPage(parseInt(event.target.value, 10));\r\n            setPage(0);\r\n        }, [ setRowsPerPage, setPage]);\r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () =>\r\n        {\r\n            setPage(0);\r\n        }, [ searchFilteredDataList ]);\r\n\r\n    // Render Section ===\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n        \r\n            <Box mx={1} my={1}>\r\n                <Paper className={classes.paper}>\r\n                    <ProjectTableToolbar\r\n                        appState={appState}\r\n                        isTemplates={isTemplates}\r\n                        selectedDataItemsList={selectedDataItemsList} \r\n                        setParentDeleteProjectDialog={setParentDeleteProjectDialog} \r\n                    />\r\n                    <TableContainer>\r\n                        <Table\r\n                            className={classes.table}\r\n                            aria-labelledby=\"tableTitle\"\r\n                            size={isDense ? 'small' : 'medium'}\r\n                            aria-label=\"enhanced table\"\r\n                        >\r\n                            <ProjectTableHead\r\n                                userID={userID}\r\n                                numSelected={selectedDataItemsList.length}\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                onSelectAllClick={handleSelectAllClick}\r\n                                onRequestSort={handleRequestSort}\r\n                                rowCount={searchFilteredDataList.length}\r\n                                isTemplates={isTemplates}\r\n                            />\r\n\r\n                            <TableBody>\r\n                                {stableSort(searchFilteredDataList, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((item, index) => {\r\n                                    const isItemSelected = isSelected(item);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            className={classes.tableRow}\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, item)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={`row${index}-${item._id}`}\r\n                                            selected={isItemSelected}\r\n\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </TableCell>\r\n\r\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                                <Typography color=\"textPrimary\" variant=\"subtitle2\" noWrap style={{display: 'inline-block', width: '240px'}}>\r\n                                                    {item.name}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"left\" padding=\"none\">\r\n                                                <Typography color=\"secondary\" variant=\"body2\" noWrap style={{display: 'inline-block', width: '120px'}}>\r\n                                                    {item._id}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n\r\n                                            {item.memberList && item.collectionList? (\r\n                                                <>\r\n                                                    <TableCell align=\"right\" padding=\"normal\">\r\n                                                        <Tooltip title={\r\n                                                            <>\r\n                                                                <Typography color=\"inherit\">Members</Typography>\r\n                                                                <ol>\r\n                                                                    {item.memberList.map((subItem, index) => {\r\n                                                                        return (\r\n                                                                            <li key={`subrow${index}-${subItem._id}`}>\r\n                                                                                {subItem.info.name}\r\n                                                                            </li>\r\n                                                                        );\r\n                                                                    })}\r\n                                                                </ol>\r\n                                                                <em>{\"Members apart of this\"}</em> <b>{'Project'}</b>.{' '}\r\n                                                            </>\r\n                                                        } placement=\"top\">\r\n                                                            <Button>\r\n                                                                <Typography color=\"secondary\" variant=\"body2\" noWrap style={{display: 'inline-block', width: '120px'}}>\r\n                                                                    {item.memberList.length}\r\n                                                                </Typography>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    </TableCell>\r\n\r\n                                                    <TableCell align=\"right\" padding=\"normal\">\r\n                                                        <Tooltip title={\r\n                                                            <>\r\n                                                                <Typography color=\"inherit\">Service Templates</Typography>\r\n                                                                <ol>\r\n                                                                    {item.collectionList.map((subItem, index) => {\r\n                                                                        return (\r\n                                                                            <li key={`subrow${index}-${subItem._id}`}>\r\n                                                                                {subItem.name}\r\n                                                                            </li>\r\n                                                                        );\r\n                                                                    })}\r\n                                                                </ol>\r\n                                                                <em>{\"Services apart of this\"}</em> <b>{'Project'}</b>.{' '}\r\n                                                            </>\r\n                                                        } placement=\"top\">\r\n                                                            <Button>\r\n                                                                <Typography color=\"secondary\" variant=\"body2\" noWrap style={{display: 'inline-block', width: '120px'}}>\r\n                                                                    {item.collectionList.length}\r\n                                                                </Typography>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    </TableCell>\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                </>\r\n                                            )}\r\n\r\n                                            <TableCell align=\"right\">\r\n                                                <Typography color=\"primary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                    {new Date(item.createdAt).toLocaleDateString()}\r\n                                                </Typography>\r\n                                                <Typography color=\"secondary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                    {new Date(item.createdAt).toLocaleTimeString()}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n\r\n\r\n                                            <TableCell align=\"right\">\r\n                                                <Typography color=\"primary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                    {new Date(item.updatedAt).toLocaleDateString()}\r\n                                                </Typography>\r\n                                                <Box component=\"span\" mr={1}/>\r\n                                                <Typography color=\"secondary\" variant=\"body2\" style={{display: 'inline-block', width: '120px'}}>\r\n                                                    {new Date(item.updatedAt).toLocaleTimeString()}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n\r\n                                {emptyRows > 0 && (\r\n                                    <TableRow style={{ height: (isDense ? 33 : 53) * emptyRows }}>\r\n                                        <TableCell colSpan={6} />\r\n                                    </TableRow>\r\n                                )}\r\n\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    {searchFilteredDataList.length > 0? (\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 15, 20, 25]}\r\n                            component=\"div\"\r\n                            count={searchFilteredDataList.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={searchFilteredDataList.length <= rowsPerPage? 0 : page}\r\n                            onPageChange={ (event, pageNumber) => { handleChangePage(pageNumber); }}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    ) : (\r\n                        null\r\n                    )}\r\n                </Paper>\r\n            </Box>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nProjectTable.propTypes = {\r\n    appState: PropTypes.object.isRequired,\r\n    userID: PropTypes.string,\r\n    searchFilteredDataList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    setParentDeleteProjectDialog: PropTypes.func.isRequired,\r\n    selectedDataItemsList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    setSelectedDataItemsList: PropTypes.func.isRequired,\r\n    isTemplates: PropTypes.bool.isRequired,\r\n}\r\n\r\nProjectTable.defaultProps =\r\n{\r\n    appState: {},\r\n    userID: null,\r\n    searchFilteredDataList: {},\r\n    setParentDeleteProjectDialog: () => {},\r\n    selectedDataItemsList: {},\r\n    setSelectedDataItemsList: () => {},\r\n    isTemplates: true\r\n}","// ================================================\r\n// Code associated with SaveChapterDialog\r\n// ================================================\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\nimport get from  '../../../../helpers/common/get';\r\nimport post from '../../../../helpers/common/post'\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { FormControl, InputLabel, Select, MenuItem, Typography } from '@material-ui/core';\r\n\r\n// ==================== MUI Icons ====================\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst CreateProjectDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, setParentAlert, getParentData, userID,\r\n            createProjectDialog, setCreateProjectDialog,\r\n            createProjectDialogExecuting, setCreateProjectDialogExecuting } = props;\r\n    \r\n        // const [userList, setUserList] = useState(null);\r\n\r\n        const [collectionTemplateList, setCollectionTemplateList] = useState(null);\r\n\r\n        const [selectedCollectionTemplate, setSelectedCollectionTemplate] = useState(\"\");\r\n\r\n        const [selectedCollectionTemplatesList, setSelectedCollectionTemplatesList] = useState([]);\r\n\r\n        const [projectName, setProjectName] = useState(\"\");\r\n\r\n        // const [user, setUser] = useState(\"\");\r\n\r\n    // Functions ===\r\n\r\n        const getCollectionTemplates = useCallback(() =>\r\n        {\r\n\r\n            get('collections/', appState.token, (error, response) => \r\n            {\r\n                if(error)\r\n                {\r\n                    setParentAlert(new AlertType('Unable to get public templates. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(response.status === 200)\r\n                    {\r\n                        // console.log(\"Patient Query\", response.data.response);\r\n                        setCollectionTemplateList(response.data.collectionList);\r\n                    }\r\n                    else\r\n                    {\r\n                        setParentAlert(new AlertType('Unable to get public templates. Please refresh and try again.', \"error\"));\r\n\r\n                    }\r\n                }\r\n            });\r\n        }, [ appState ]);\r\n\r\n        // const getPatients = useCallback(() =>\r\n        // {\r\n        //     let query;\r\n\r\n        //     if(userID)\r\n        //     {\r\n        //         query = {\r\n        //             _id: userID\r\n        //         }; \r\n        //     }\r\n        //     else\r\n        //     {\r\n        //        query = {\r\n        //             role: {\r\n        //                 $in: 'Patient'\r\n        //             }\r\n        //         }; \r\n        //     }\r\n            \r\n        //     post('users/query', appState.token, query, (error, response) => \r\n        //     {\r\n        //         if(error)\r\n        //         {\r\n        //             setParentAlert(new AlertType('Unable to get patients. Please refresh and try again.', \"error\"));\r\n        //         }\r\n        //         else\r\n        //         {\r\n        //             if(response.status === 200)\r\n        //             {\r\n        //                 // console.log(\"Patient Query\", response.data.response);\r\n        //                 populateUserData(response.data.response.users); \r\n        //             }\r\n        //             else\r\n        //             {\r\n        //                 setParentAlert(new AlertType('Unable to get patients. Please refresh and try again.', \"error\"));\r\n        //             }\r\n        //         }\r\n        //     });\r\n        // }, [ appState, populateUserData ]);\r\n\r\n        // const populateUserData = useCallback((data) => \r\n        // {\r\n        //     let tempArray = new Array();\r\n\r\n        //     if(data && Array.isArray(data))\r\n        //     {\r\n        //         data.forEach(item => {\r\n\r\n        //             tempArray.push(\r\n        //                 {\r\n        //                     _id: item._id,\r\n        //                     name: item.info.name,\r\n        //                     role: item.role,\r\n        //                     email: item.email,\r\n        //                     createdAt: item.createdAt\r\n        //                 });\r\n        //         });\r\n        //     }\r\n\r\n        //     setUserList([...tempArray]);\r\n\r\n        // }, [ ] );\r\n\r\n        const createProject = useCallback(() =>\r\n        {\r\n            if(!projectName || projectName == \"\")\r\n            {\r\n                // selectedCollectionTemplatesList.length == 0\r\n                setParentAlert(new AlertType('Unable create project. Please make sure Template Name is and selected Chapter Templates are not empty.', \"error\"))\r\n                return;\r\n            }\r\n\r\n            // let tempSelectedCollectionTemplatesList = new Array();\r\n\r\n            // selectedCollectionTemplatesList.forEach(item => {\r\n            //     tempSelectedCollectionTemplatesList.push(item._id);\r\n            // });\r\n\r\n            let data = {\r\n                name: projectName,\r\n                collectionList: [],\r\n                createdBy: appState._id,\r\n                modifiedBy: appState._id,\r\n            }\r\n            \r\n            post(\"projects/\",  appState.token, data, (error, response) => \r\n            {\r\n                if(error)\r\n                {\r\n                    setParentAlert(new AlertType('Unable create project. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(response.status === 201)\r\n                    {\r\n                        getParentData();\r\n                        setParentAlert(new AlertType('Collection created.', \"success\"));\r\n                    }\r\n                    else\r\n                    {\r\n                        setParentAlert(new AlertType('Unable create project. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n            });\r\n\r\n        }, [ appState, projectName, selectedCollectionTemplatesList ] );\r\n\r\n        \r\n        const projectNameHandler = useCallback((event) =>\r\n        {\r\n            setProjectName(event.target.value);\r\n        }, [ ]);\r\n\r\n        // const selectCollectionTemplateHandler = useCallback((event) =>\r\n        // {\r\n        //     setSelectedCollectionTemplate(event.target.value);\r\n        // }, [ ]);\r\n\r\n        // const addCollectionTemplateHandler = useCallback((item) =>\r\n        // {\r\n        //     if(selectedCollectionTemplate && selectedCollectionTemplate != \"\")\r\n        //     {\r\n        //         let tempSurveyObject = collectionTemplateList.find(item => item._id == selectedCollectionTemplate);\r\n\r\n        //         if(tempSurveyObject != undefined)\r\n        //         {\r\n        //             setSelectedCollectionTemplatesList([...selectedCollectionTemplatesList, tempSurveyObject]);\r\n        //             setSelectedCollectionTemplate(\"\");\r\n        //         }\r\n        //     }\r\n\r\n        // }, [ selectedCollectionTemplate, selectedCollectionTemplatesList]);\r\n\r\n        // const removeCollectionTemplateHandler = useCallback((item) =>\r\n        // {\r\n        //     let tempList = selectedCollectionTemplatesList;\r\n\r\n        //     tempList.splice(selectedCollectionTemplatesList.findIndex(oldItem => oldItem._id == item._id), 1);\r\n\r\n        //     setSelectedCollectionTemplatesList([...tempList]);\r\n\r\n        // }, [selectedCollectionTemplatesList, setSelectedCollectionTemplatesList ]);\r\n\r\n        const closeHandler = useCallback(() => {\r\n            setCreateProjectDialog(false);\r\n        }, [ setCreateProjectDialog ]);\r\n\r\n\r\n        const createHandler = useCallback(() => {\r\n            try{\r\n                setCreateProjectDialogExecuting(true);\r\n                createProject();\r\n                setCreateProjectDialogExecuting(false);\r\n                setCreateProjectDialog(false);\r\n            }\r\n            catch{\r\n\r\n            }\r\n        }, [ setCreateProjectDialogExecuting, createProject, setCreateProjectDialog, setParentAlert]);\r\n\r\n        // const patientHandler = useCallback((event) =>\r\n        // {\r\n        //     setUser(event.target.value);\r\n        // }, [ ]);\r\n\r\n    // Hooks ===\r\n\r\n    \r\n        // Fetch User List | First Render Only\r\n        useEffect( () =>\r\n        {\r\n            getCollectionTemplates();\r\n            // getPatients();\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {createProjectDialog? (\r\n                    <Dialog id=\"create-project-template-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={createProjectDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Create Project\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {createProjectDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <>\r\n                                    <DialogContentText>\r\n                                        Please select <em><u>Service(s)</u></em> to be apart of this new <em><u>Project</u></em>.\r\n                                    </DialogContentText>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                            <Grid item>\r\n                                                <TextField label=\"Project Name\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"filled\"\r\n                                                    error={projectName === \"\"? true : false}\r\n                                                    fullWidth\r\n                                                    value={projectName}\r\n                                                    onChange={ (event) => { projectNameHandler(event); }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                    {/* <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                        <Grid item xs container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1}>\r\n                                                {collectionTemplateList? (\r\n                                                    <>\r\n                                                        <Grid item xs={11}>\r\n                                                            <FormControl id=\"services-options\" variant=\"filled\" size=\"small\" fullWidth disabled={!collectionTemplateList}>\r\n                                                                <InputLabel>\r\n                                                                    Services\r\n                                                                </InputLabel>\r\n                                                                <Select\r\n                                                                    fullWidth\r\n                                                                    labelId=\"services-options-label\"\r\n                                                                    value={selectedCollectionTemplate}\r\n                                                                    onChange={(event) => { selectCollectionTemplateHandler(event); } }\r\n                                                                >\r\n                                                                    <MenuItem value=\"\">\r\n                                                                        <em>None</em>\r\n                                                                    </MenuItem>\r\n                                                                    {collectionTemplateList.map( (item, index) => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={`SelectOption${item._id}`} value={item._id}\r\n                                                                                disabled={(selectedCollectionTemplatesList.findIndex(oldItem => oldItem._id == item._id) == -1)? false : true}\r\n                                                                            >\r\n                                                                                <em>{item.name}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })}\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={1}>\r\n                                                            <IconButton variant=\"outlined\" size=\"medium\" color=\"inherit\" onClick={ () => { addCollectionTemplateHandler(); } }\r\n                                                                disabled={selectedCollectionTemplate == \"\"? true : false}>\r\n                                                                <AddCircleIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <CircularProgress />\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                {(selectedCollectionTemplatesList)? (\r\n                                                     <Collapse in={(selectedCollectionTemplatesList.length > 0)? true : false}>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\r\n                                                            <em>{\"The following selected chapter templates\"}</em> <u>{'to be added:'}</u>\r\n                                                        </Typography>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"primary\" gutterBottom={true}>\r\n                                                            <ol>\r\n                                                                {selectedCollectionTemplatesList.map((item, index) => {\r\n                                                                    return (\r\n                                                                        <li key={`${item._id}${index}`}>\r\n                                                                            {item.name}\r\n                                                                            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\"\r\n                                                                                onClick={ (item) => { removeCollectionTemplateHandler(item); } }\r\n                                                                            >\r\n                                                                                <CancelIcon fontSize=\"inherit\" />\r\n                                                                            </IconButton>\r\n                                                                        </li>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </ol>\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                ) : (\r\n                                                    <>\r\n                                                    </>\r\n                                                )}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box> */}\r\n                                </>\r\n                            )}\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={createProjectDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            {/* <Button color=\"primary\" variant=\"contained\" startIcon={<AddBoxOutlinedIcon />} onClick={() => { createHandler(); }} disabled={createProjectDialogExecuting || user == \"\"}>\r\n                                Create\r\n                            </Button> */}\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<AddBoxOutlinedIcon />} onClick={() => { createHandler(); }} disabled={createProjectDialogExecuting || projectName == \"\"}> {/* selectedCollectionTemplatesList.length == 0 || */}\r\n                                Create\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nCreateProjectDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    userID: PropTypes.string,\r\n    createProjectDialog: PropTypes.bool.isRequired,\r\n    setCreateProjectDialog: PropTypes.func.isRequired,\r\n    createProjectDialogExecuting: PropTypes.bool.isRequired,\r\n    setCreateProjectDialogExecuting: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nCreateProjectDialog.defaultProps = \r\n{\r\n    appState: {},\r\n    setParentAlert: () => {},\r\n    getParentData:  () => {},\r\n    userID: null,\r\n    setCreateProjectDialog:  () => {},\r\n    setCreateProjectDialogExecuting:  () => {}\r\n}\r\n\r\nexport default CreateProjectDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with AssignMemberDialog\r\n// ================================================\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\nimport get from '../../../../helpers/common/get';\r\nimport post from '../../../../helpers/common/post';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Collapse, Typography } from '@material-ui/core';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// ==================== MUI Icons ====================\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(1),\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst AssignMemberDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, setParentAlert, getParentData, selectedDataItemsList, \r\n            assignMemberDialog, setAssignMemberDialog,\r\n            assignMemberDialogExecuting, setAssignMemberDialogExecuting } = props;\r\n\r\n        const [ currentProject, setCurrentProject ] = useState(\"\");\r\n        const [ selectedProjectList, setSelectedProjectList ] = useState([]);\r\n        const [ ProjectList, setProjectList ] = useState(null);\r\n\r\n        const [ currentMember, setCurrentMember ] = useState(\"\");\r\n        const [ selectedMemberList, setSelectedMemberList ] = useState([]);\r\n        const [ MemberList, setMemberList ] = useState(null);\r\n\r\n        // const [ userList, setUserList ] = useState(null);\r\n\r\n    // Functions ===\r\n\r\n        const populateProjects = useCallback((data) =>\r\n        {\r\n            let tempArray = new Array();\r\n\r\n            if(data && Array.isArray(data))\r\n            {\r\n                data.forEach(item => {\r\n\r\n                    tempArray.push(\r\n                        {\r\n                            _id: item._id,\r\n                            name: item.name,\r\n                            memberList: item.memberList,\r\n                            collectionList: item.collectionList,\r\n                            createdBy: item.createdBy,\r\n                            createdAt: item.updatedAt,\r\n                            modifiedBy: item.modifiedBy,\r\n                            updatedAt: item.updatedAt\r\n                        });\r\n                });\r\n            }\r\n\r\n            setProjectList([...tempArray]);\r\n\r\n        }, [ appState, setProjectList]);\r\n\r\n        const populateUsers = useCallback((data) =>\r\n        {\r\n            let tempArray = new Array();\r\n\r\n            if(data && Array.isArray(data))\r\n            {\r\n                data.forEach(item => {\r\n\r\n                    tempArray.push(\r\n                        {\r\n                            _id: item._id,\r\n                            name: item.info.name,\r\n                            role: item.role,\r\n                            createdAt: item.createdAt\r\n                        });\r\n                });\r\n            }\r\n\r\n            setMemberList([...tempArray]);\r\n\r\n        }, [ appState, setMemberList]);\r\n\r\n        // Retrieve the list of Users\r\n        const getProjects = useCallback(() => {\r\n\r\n            get(\"projects/\", appState.token, (err, res) => \r\n            {\r\n                if(err)\r\n                {   \r\n                    //Bad callback call\r\n                    //setParentAlert(new AlertType(err.message, \"error\"));\r\n                    setParentAlert(new AlertType('Unable to retrieve Projects. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(res.status === 200)\r\n                    {\r\n                        populateProjects(res.data.projectList);\r\n                    }\r\n                    else\r\n                    {\r\n                        //Bad HTTP Response\r\n                        setParentAlert(new AlertType('Unable to retrieve Projects. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n\r\n            });\r\n        }, [ appState, populateUsers, setParentAlert ] );\r\n\r\n        // Retrieve the list of Users\r\n        const getUsers = useCallback(() => {\r\n            \r\n            if(selectedProjectList.length == 1)\r\n            {\r\n                const queryBody = {\r\n                    collectionList: {\r\n                        $in: selectedProjectList[0].collectionList\r\n                    }\r\n                };\r\n    \r\n                post(\"users/query\", appState.token, queryBody, (err, res) => \r\n                {\r\n                    if(err)\r\n                    {   \r\n                        //Bad callback call\r\n                        //setParentAlert(new AlertType(err.message, \"error\"));\r\n                        setParentAlert(new AlertType('Unable to retrieve Users. Please refresh and try again.', \"error\"));\r\n                    }\r\n                    else\r\n                    {\r\n                        if(res.status === 200)\r\n                        {\r\n                            populateUsers(res.data.response.users);\r\n                        }\r\n                        else\r\n                        {\r\n                            //Bad HTTP Response\r\n                            setParentAlert(new AlertType('Unable to retrieve Users. Please refresh and try again.', \"error\"));\r\n                        }\r\n                    }\r\n    \r\n                });\r\n            }\r\n            \r\n        }, [ appState, populateUsers, setParentAlert, selectedProjectList ] );\r\n\r\n        // Insert the new booklet into the database upon creation\r\n        const assignMembers = useCallback(() =>\r\n        {\r\n            if(selectedProjectList.length > 0 && selectedMemberList.length > 0)\r\n            {\r\n                selectedProjectList.forEach(project => \r\n                {\r\n                        const selectedMemberIdList = selectedMemberList.map(item => { return item._id; });\r\n\r\n                        let postBody = {\r\n                            projectId: project._id,\r\n                            memberList: selectedMemberIdList\r\n                        };\r\n    \r\n                        post(\"projects/assign/member\", appState.token, postBody, (error, response) => \r\n                        {\r\n                            if(error)\r\n                            {\r\n                                setParentAlert(new AlertType('Unable to update projects. Please refresh and try again.', \"error\"));\r\n                            }\r\n                            else\r\n                            {\r\n                                if(response.status === 200)\r\n                                {\r\n                                    // getParentData();\r\n                                    //  const _id = response.data.survey._id; The id to redirect to if you wish\r\n                                    getParentData();\r\n                                    setParentAlert(new AlertType('Successfully updated projects.', \"success\")); \r\n                                }\r\n                                else\r\n                                {\r\n                                    setParentAlert(new AlertType('Unable to update projects. Please refresh and try again.', \"error\"));\r\n                                }\r\n                            }\r\n                        });\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setParentAlert(new AlertType('Unable to assign members to project. Please refresh and try again.', \"error\"));\r\n            }\r\n\r\n        }, [ appState, getParentData, setParentAlert, selectedProjectList, selectedMemberList]);\r\n\r\n        \r\n        const closeHandler = useCallback(() => {\r\n\r\n            setAssignMemberDialog(false);\r\n            setCurrentProject(\"\");\r\n            setCurrentMember(\"\");\r\n            setSelectedProjectList(new Array());\r\n            setSelectedMemberList(new Array());\r\n\r\n        }, [ setAssignMemberDialog, setCurrentProject, setCurrentMember, setSelectedProjectList, setSelectedMemberList ]);\r\n\r\n\r\n        const createHandler = useCallback(() => {\r\n\r\n            setAssignMemberDialogExecuting(true);\r\n            assignMembers();\r\n            setAssignMemberDialogExecuting(false);\r\n            setAssignMemberDialog(false);\r\n\r\n        }, [ assignMembers, setAssignMemberDialogExecuting, setAssignMemberDialog]);\r\n\r\n        const selectProjectHandler = useCallback((event) =>\r\n        {\r\n            setCurrentProject(event.target.value);\r\n\r\n        }, [ setCurrentProject ]);\r\n\r\n        const selectMemberHandler = useCallback((event) =>\r\n        {\r\n            setCurrentMember(event.target.value);\r\n\r\n        }, [ setCurrentMember ]);\r\n\r\n        const addProjectButtonHandler = useCallback(() =>\r\n        {\r\n            if(currentProject && currentProject != \"\")\r\n            {\r\n                let tempUserObject = ProjectList.find(item => item._id == currentProject);\r\n\r\n                if(tempUserObject != undefined)\r\n                {\r\n                    setSelectedProjectList([...selectedProjectList, tempUserObject]);\r\n                    setCurrentProject(\"\");\r\n                }\r\n            }\r\n\r\n        }, [ currentProject, ProjectList, setSelectedProjectList, selectedProjectList, setCurrentProject ]);\r\n\r\n        const addMemberButtonHandler = useCallback(() =>\r\n        {\r\n            if(currentMember && currentMember != \"\")\r\n            {\r\n                let tempUserObject = MemberList.find(item => item._id == currentMember);\r\n\r\n                if(tempUserObject != undefined)\r\n                {\r\n                    setSelectedMemberList([...selectedMemberList, tempUserObject]);\r\n                    setCurrentMember(\"\");\r\n                }\r\n\r\n            }\r\n\r\n        }, [ currentMember, MemberList, setSelectedMemberList, selectedMemberList, setCurrentMember ]);\r\n\r\n        const removeProjectButtonHandler = useCallback((item) =>\r\n        {\r\n            let tempList = selectedProjectList;\r\n\r\n            tempList.splice(selectedProjectList.findIndex(oldItem => oldItem._id == item._id), 1);\r\n\r\n            setSelectedProjectList([...tempList]);\r\n\r\n        }, [ selectedProjectList, setSelectedProjectList ]);\r\n\r\n        const removeMemberButtonHandler = useCallback((item) =>\r\n        {\r\n            let tempList = selectedMemberList;\r\n\r\n            tempList.splice(selectedMemberList.findIndex(oldItem => oldItem._id == item._id), 1);\r\n\r\n            setSelectedMemberList([...tempList]);\r\n\r\n        }, [selectedMemberList, setSelectedMemberList ]);\r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(assignMemberDialog)\r\n            {\r\n                getProjects();\r\n            }\r\n            \r\n        }, [ assignMemberDialog, getUsers, getProjects]);\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(selectedProjectList.length > 0)\r\n            {\r\n                getUsers();\r\n            }\r\n            else\r\n            {\r\n                setSelectedMemberList([]);\r\n                setMemberList(null);\r\n            }\r\n            \r\n        }, [ selectedProjectList ])\r\n\r\n        // useEffect( () =>\r\n        // {\r\n        //     if(selectedDataItemsList && selectedDataItemsList.length > 0)\r\n        //     {\r\n        //         const tempIdList = selectedDataItemsList.map(item => { return item._id; });\r\n        //         setSelectedProjectList([...selectedProjectList, ...tempIdList]);\r\n        //     }\r\n            \r\n        // }, [ selectedProjectList, selectedDataItemsList ]);\r\n\r\n        // useEffect( () => \r\n        // {\r\n        //     if(userList)\r\n        //     {\r\n        //         //  Set Management User List\r\n        //         let tempManagementUserList = new Array();\r\n                \r\n        //         //  Set Client User List\r\n        //         let tempClientUserList = new Array();\r\n\r\n        //         userList.forEach(item => {\r\n                    \r\n        //             if(item.role == 'Admin' || item.role == 'Coordinator' || item.role == 'Volunteer')\r\n        //             {\r\n        //                 tempManagementUserList.push(item);\r\n        //             }\r\n        //             else if(item.role == 'Patient')\r\n        //             {\r\n        //                 tempClientUserList.push(item);\r\n        //             }\r\n\r\n        //         });\r\n\r\n        //         setProjectList([...tempManagementUserList]);\r\n        //         setMemberList([...tempClientUserList]);\r\n        //     }\r\n\r\n        // }, [ userList, setProjectList, setMemberList ]);\r\n\r\n        // useEffect( () => \r\n        // {\r\n        //     if(selectedProjectList)\r\n        //     {\r\n        //         //  Set Selected Management User List\r\n        //         let tempSelectedManagementUserList = new Array();\r\n                \r\n        //         //  Set Selected Client User List\r\n        //         let tempSelectedClientUserList = new Array();\r\n\r\n        //         selectedProjectList.forEach(item => {\r\n                    \r\n        //             if(item.role == 'Admin' || item.role == 'Coordinator' || item.role == 'Volunteer')\r\n        //             {\r\n        //                 tempSelectedManagementUserList.push({\r\n        //                     _id: item._id,\r\n        //                     name: item.info.name,\r\n        //                     role: item.role,\r\n        //                     createdAt: item.createdAt\r\n        //                 });\r\n        //             }\r\n        //             else if(item.role == 'Patient')\r\n        //             {\r\n        //                 tempSelectedClientUserList.push({\r\n        //                     _id: item._id,\r\n        //                     name: item.info.name,\r\n        //                     role: item.role,\r\n        //                     createdAt: item.createdAt\r\n        //                 });\r\n        //             }\r\n\r\n        //         });\r\n\r\n        //         setSelectedProjectList([...tempSelectedManagementUserList]);\r\n        //         setSelectedMemberList([...tempSelectedClientUserList]);\r\n        //     }\r\n\r\n        // }, [ selectedProjectList, setSelectedProjectList, setSelectedMemberList ]);\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {assignMemberDialog? (\r\n                    <Dialog id=\"assign-member-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={assignMemberDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Assign Member(s) to Project(s)\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {assignMemberDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <>\r\n                                    <DialogContentText>\r\n                                        Please select <em><u>Members</u></em> to be assigned to each the following <em><u>Projects</u></em>.\r\n                                    </DialogContentText>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                        <Grid item xs container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1}>\r\n                                                {ProjectList? (\r\n                                                    <>\r\n                                                        <Grid item xs={11}>\r\n                                                            <FormControl id=\"Projects-options-label\" variant=\"filled\" size=\"small\" fullWidth disabled={!ProjectList}>\r\n                                                                <InputLabel>\r\n                                                                    Project\r\n                                                                </InputLabel>\r\n                                                                <Select\r\n                                                                    fullWidth\r\n                                                                    labelId=\"Projects-options-label\"\r\n                                                                    value={currentProject}\r\n                                                                    onChange={(event) => { selectProjectHandler(event); } }\r\n                                                                    disabled={selectedProjectList.length >= 1? true: false}\r\n                                                                >\r\n                                                                    <MenuItem value=\"\">\r\n                                                                        <em>None</em>\r\n                                                                    </MenuItem>\r\n                                                                    {ProjectList.map( (item, index) => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={`SelectOption${item._id}`} value={item._id}\r\n                                                                                disabled={(selectedProjectList.findIndex(oldItem => oldItem._id == item._id) == -1)? false : true}\r\n                                                                            >\r\n                                                                                <em>{item.name}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })}\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={1}>\r\n                                                            <IconButton variant=\"outlined\" size=\"medium\" color=\"inherit\" onClick={ () => { addProjectButtonHandler(); } }\r\n                                                                disabled={currentProject == \"\"? true : false}>\r\n                                                                <AddCircleIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <CircularProgress />\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                {(selectedProjectList)? (\r\n                                                     <Collapse in={(selectedProjectList.length > 0)? true : false}>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\r\n                                                            <em>{\"The following selected projects\"}</em> <u>{'to be assigned:'}</u>\r\n                                                        </Typography>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"primary\" gutterBottom={true}>\r\n                                                            <ol>\r\n                                                                {selectedProjectList.map((item, index) => {\r\n                                                                    return (\r\n                                                                        <li key={`${item._id}${index}`}>\r\n                                                                            {item.name}\r\n                                                                            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\"\r\n                                                                                onClick={ (item) => { removeProjectButtonHandler(item); } }\r\n                                                                            >\r\n                                                                                <CancelIcon fontSize=\"inherit\" />\r\n                                                                            </IconButton>\r\n                                                                        </li>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </ol>\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                ) : (\r\n                                                    <>\r\n                                                    </>\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1}>\r\n                                                {MemberList? (\r\n                                                    <>\r\n                                                        <Grid item xs={11}>\r\n                                                            <FormControl id=\"Member-options-label\" variant=\"filled\" size=\"small\" fullWidth disabled={!MemberList}>\r\n                                                                <InputLabel>\r\n                                                                    Member\r\n                                                                </InputLabel>\r\n                                                                <Select\r\n                                                                    fullWidth\r\n                                                                    labelId=\"Member-options-label\"\r\n                                                                    value={currentMember}\r\n                                                                    onChange={(event) => { selectMemberHandler(event); } }\r\n                                                                >\r\n                                                                    <MenuItem value=\"\">\r\n                                                                        <em>None</em>\r\n                                                                    </MenuItem>\r\n                                                                    {MemberList.map( (item, index) => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={`SelectOption${item._id}`} value={item._id}\r\n                                                                                disabled={(selectedMemberList.findIndex(oldItem => oldItem._id == item._id) == -1)? false : true}\r\n                                                                            >\r\n                                                                                <em>{item.name}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })}\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={1}>\r\n                                                            <IconButton variant=\"outlined\" size=\"medium\" color=\"inherit\" onClick={ () => { addMemberButtonHandler(); } }\r\n                                                                disabled={currentMember == \"\"? true : false}>\r\n                                                                <AddCircleIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <CircularProgress />\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                {selectedMemberList? (\r\n                                                    <Collapse in={(selectedMemberList.length > 0)? true : false}>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\r\n                                                            <em>{\"The following selected members\"}</em> <u>{'to be assigned by:'}</u>\r\n                                                        </Typography>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"secondary\" gutterBottom={true}>\r\n                                                            <ol>\r\n                                                                {selectedMemberList.map((item, index) => {\r\n                                                                    return (\r\n                                                                        <li key={`${item._id}${index}`}>\r\n                                                                            {item.name}\r\n                                                                            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\"\r\n                                                                                onClick={ (item) => { removeMemberButtonHandler(item); } }\r\n                                                                            >\r\n                                                                                <CancelIcon fontSize=\"inherit\" />\r\n                                                                            </IconButton>\r\n                                                                        </li>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </ol>\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                ) : (\r\n                                                    <>\r\n                                                    </>\r\n                                                )}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </>\r\n                            )}\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={assignMemberDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<SupervisorAccountIcon />} onClick={() => { createHandler(); }} disabled={assignMemberDialogExecuting}\r\n                                disabled={(selectedProjectList.length > 0 && selectedMemberList.length > 0)? false : true}\r\n                            >\r\n                                Assign\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nAssignMemberDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    selectedDataItemsList: PropTypes.arrayOf(PropTypes.object),\r\n    assignMemberDialog: PropTypes.bool.isRequired,\r\n    setAssignMemberDialog: PropTypes.func.isRequired,\r\n    assignMemberDialogExecuting: PropTypes.bool.isRequired,\r\n    setAssignMemberDialogExecuting: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nAssignMemberDialog.defaultProps = \r\n{\r\n    appState: {},\r\n    setParentAlert: () => {},\r\n    getParentData:  () => {},\r\n    selectedDataItemsList: {},\r\n    assignMemberDialog: {},\r\n    setAssignMemberDialog: () => {},\r\n    assignMemberDialogExecuting: {},\r\n    setAssignMemberDialogExecuting: () => {}\r\n}\r\n\r\nexport default AssignMemberDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with AssignServiceDialog\r\n// ================================================\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\nimport get from '../../../../helpers/common/get';\r\nimport post from '../../../../helpers/common/post';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Collapse, Typography } from '@material-ui/core';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// ==================== MUI Icons ====================\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n        rootGrid: {\r\n            height: '100%'\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(1),\r\n        }\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst AssignServiceDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, setParentAlert, getParentData, selectedDataItemsList, \r\n            assignServiceDialog, setAssignServiceDialog,\r\n            assignServiceDialogExecuting, setAssignServiceDialogExecuting } = props;\r\n\r\n        const [ currentProject, setCurrentProject ] = useState(\"\");\r\n        const [ selectedProjectList, setSelectedProjectList ] = useState([]);\r\n        const [ ProjectList, setProjectList ] = useState(null);\r\n\r\n        const [ currentService, setCurrentService ] = useState(\"\");\r\n        const [ selectedServiceList, setSelectedServiceList ] = useState([]);\r\n        const [ ServiceList, setServiceList ] = useState(null);\r\n\r\n    // Functions ===\r\n\r\n        const populateProjects = useCallback((data) =>\r\n        {\r\n            let tempArray = new Array();\r\n\r\n            if(data && Array.isArray(data))\r\n            {\r\n                data.forEach(item => {\r\n\r\n                    tempArray.push(\r\n                        {\r\n                            _id: item._id,\r\n                            name: item.name,\r\n                            memberList: item.memberList,\r\n                            collectionList: item.collectionList,\r\n                            createdBy: item.createdBy,\r\n                            createdAt: item.updatedAt,\r\n                            modifiedBy: item.modifiedBy,\r\n                            updatedAt: item.updatedAt\r\n                        });\r\n                });\r\n            }\r\n\r\n            setProjectList([...tempArray]);\r\n\r\n        }, [ appState, setProjectList]);\r\n\r\n        const populateServices = useCallback((data) =>\r\n        {\r\n            let tempArray = new Array();\r\n\r\n            if(data && Array.isArray(data))\r\n            {\r\n                data.forEach(item => {\r\n\r\n                    tempArray.push(\r\n                        {\r\n                            _id: item._id,\r\n                            name: item.name,\r\n                            projectList: item.projectList,\r\n                            memberCollectionList: item.memberCollectionList,\r\n                            surveyList: item.surveyList,\r\n                            createdBy: item.createdBy,\r\n                            modifiedBy: item.modifiedBy\r\n                        });\r\n                });\r\n            }\r\n\r\n            setServiceList([...tempArray]);\r\n\r\n        }, [ appState, setServiceList]);\r\n\r\n        // Retrieve the list of Users\r\n        const getProjects = useCallback(() => {\r\n\r\n            get(\"projects/\", appState.token, (err, res) => \r\n            {\r\n                if(err)\r\n                {   \r\n                    //Bad callback call\r\n                    //setParentAlert(new AlertType(err.message, \"error\"));\r\n                    setParentAlert(new AlertType('Unable to retrieve Projects. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(res.status === 200)\r\n                    {\r\n                        populateProjects(res.data.projectList);\r\n                    }\r\n                    else\r\n                    {\r\n                        //Bad HTTP Response\r\n                        setParentAlert(new AlertType('Unable to retrieve Projects. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n\r\n            });\r\n        }, [ appState, populateServices, setParentAlert ] );\r\n\r\n        // Retrieve the list of Users\r\n        const getServices = useCallback(() => {\r\n\r\n            get(\"collections/\", appState.token, (err, res) => \r\n            {\r\n                if(err)\r\n                {   \r\n                    //Bad callback call\r\n                    //setParentAlert(new AlertType(err.message, \"error\"));\r\n                    setParentAlert(new AlertType('Unable to retrieve Services. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(res.status === 200)\r\n                    {\r\n                        populateServices(res.data.collectionList);\r\n                    }\r\n                    else\r\n                    {\r\n                        //Bad HTTP Response\r\n                        setParentAlert(new AlertType('Unable to retrieve Services. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n\r\n            });\r\n        }, [ appState, populateServices, setParentAlert ] );\r\n\r\n        // Insert the new booklet into the database upon creation\r\n        const assignServices = useCallback(() =>\r\n        {\r\n            if(selectedProjectList.length > 0 && selectedServiceList.length > 0)\r\n            {\r\n                selectedProjectList.forEach(project => \r\n                {\r\n                        const selectedServiceIdList = selectedServiceList.map(item => { return item._id; });\r\n\r\n                        let patchBody = {\r\n                            projectId: project._id,\r\n                            collectionList: selectedServiceIdList\r\n                        };\r\n    \r\n                        post(\"projects/assign/collection\", appState.token, patchBody, (error, response) => \r\n                        {\r\n                            if(error)\r\n                            {\r\n                                setParentAlert(new AlertType('Unable to update projects. Please refresh and try again.', \"error\"));\r\n                            }\r\n                            else\r\n                            {\r\n                                if(response.status === 200)\r\n                                {\r\n                                    // getParentData();\r\n                                    //  const _id = response.data.survey._id; The id to redirect to if you wish\r\n                                    getParentData();\r\n                                    setParentAlert(new AlertType('Successfully updated projects.', \"success\")); \r\n                                }\r\n                                else\r\n                                {\r\n                                    setParentAlert(new AlertType('Unable to update projects. Please refresh and try again.', \"error\"));\r\n                                }\r\n                            }\r\n                        });\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setParentAlert(new AlertType('Unable to assign services to project. Please refresh and try again.', \"error\"));\r\n            }\r\n\r\n        }, [ appState, getParentData, setParentAlert, selectedProjectList, selectedServiceList]);\r\n\r\n        \r\n        const closeHandler = useCallback(() => {\r\n\r\n            setAssignServiceDialog(false);\r\n            setCurrentProject(\"\");\r\n            setCurrentService(\"\");\r\n            setSelectedProjectList(new Array());\r\n            setSelectedServiceList(new Array());\r\n\r\n        }, [ setAssignServiceDialog, setCurrentProject, setCurrentService, setSelectedProjectList, setSelectedServiceList ]);\r\n\r\n\r\n        const createHandler = useCallback(() => {\r\n\r\n            setAssignServiceDialogExecuting(true);\r\n            assignServices();\r\n            setAssignServiceDialogExecuting(false);\r\n            setAssignServiceDialog(false);\r\n\r\n        }, [ assignServices, setAssignServiceDialogExecuting, setAssignServiceDialog]);\r\n\r\n        const selectProjectHandler = useCallback((event) =>\r\n        {\r\n            setCurrentProject(event.target.value);\r\n\r\n        }, [ setCurrentProject ]);\r\n\r\n        const selectServiceHandler = useCallback((event) =>\r\n        {\r\n            setCurrentService(event.target.value);\r\n\r\n        }, [ setCurrentService ]);\r\n\r\n        const addProjectButtonHandler = useCallback(() =>\r\n        {\r\n            if(currentProject && currentProject != \"\")\r\n            {\r\n                let tempUserObject = ProjectList.find(item => item._id == currentProject);\r\n\r\n                if(tempUserObject != undefined)\r\n                {\r\n                    setSelectedProjectList([...selectedProjectList, tempUserObject]);\r\n                    setCurrentProject(\"\");\r\n                }\r\n            }\r\n\r\n        }, [ currentProject, ProjectList, setSelectedProjectList, selectedProjectList, setCurrentProject ]);\r\n\r\n        const addServiceButtonHandler = useCallback(() =>\r\n        {\r\n            if(currentService && currentService != \"\")\r\n            {\r\n                let tempUserObject = ServiceList.find(item => item._id == currentService);\r\n\r\n                if(tempUserObject != undefined)\r\n                {\r\n                    setSelectedServiceList([...selectedServiceList, tempUserObject]);\r\n                    setCurrentService(\"\");\r\n                }\r\n\r\n            }\r\n\r\n        }, [ currentService, ServiceList, setSelectedServiceList, selectedServiceList, setCurrentService ]);\r\n\r\n        const removeProjectButtonHandler = useCallback((item) =>\r\n        {\r\n            let tempList = selectedProjectList;\r\n\r\n            tempList.splice(selectedProjectList.findIndex(oldItem => oldItem._id == item._id), 1);\r\n\r\n            setSelectedProjectList([...tempList]);\r\n\r\n        }, [ selectedProjectList, setSelectedProjectList ]);\r\n\r\n        const removeServiceButtonHandler = useCallback((item) =>\r\n        {\r\n            let tempList = selectedServiceList;\r\n\r\n            tempList.splice(selectedServiceList.findIndex(oldItem => oldItem._id == item._id), 1);\r\n\r\n            setSelectedServiceList([...tempList]);\r\n\r\n        }, [selectedServiceList, setSelectedServiceList ]);\r\n\r\n    // Hooks ===\r\n\r\n        useEffect( () =>\r\n        {\r\n            if(assignServiceDialog)\r\n            {\r\n                getProjects();\r\n                getServices();\r\n            }\r\n            \r\n        }, [ assignServiceDialog, getServices, getProjects]);\r\n\r\n        // useEffect( () =>\r\n        // {\r\n        //     if(selectedDataItemsList)\r\n        //     {\r\n        //         const tempIdList = selectedDataItemsList.map(item => { return item._id; });\r\n        //         setSelectedProjectList([...selectedDataItemsList, ...tempIdList]);\r\n        //     }\r\n            \r\n        // }, [ selectedDataItemsList ]);\r\n\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {assignServiceDialog? (\r\n                    <Dialog id=\"assign-service-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={assignServiceDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Assign Service(s) to Project(s)\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {assignServiceDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <>\r\n                                    <DialogContentText>\r\n                                        Please select <em><u>Services</u></em> to be assigned to each the following <em><u>Projects</u></em>.\r\n                                    </DialogContentText>\r\n                                    <Box mx={1} my={1} boxShadow={0}>\r\n                                        <Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" spacing={1}>\r\n                                        <Grid item xs container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1}>\r\n                                                {ProjectList? (\r\n                                                    <>\r\n                                                        <Grid item xs={11}>\r\n                                                            <FormControl id=\"Projects-options-label\" variant=\"filled\" size=\"small\" fullWidth disabled={!ProjectList}>\r\n                                                                <InputLabel>\r\n                                                                    Project\r\n                                                                </InputLabel>\r\n                                                                <Select\r\n                                                                    fullWidth\r\n                                                                    labelId=\"Projects-options-label\"\r\n                                                                    value={currentProject}\r\n                                                                    onChange={(event) => { selectProjectHandler(event); } }\r\n                                                                    disabled={selectedProjectList.length >= 1? true: false}\r\n                                                                >\r\n                                                                    <MenuItem value=\"\">\r\n                                                                        <em>None</em>\r\n                                                                    </MenuItem>\r\n                                                                    {ProjectList.map( (item, index) => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={`SelectOption${item._id}`} value={item._id}\r\n                                                                                disabled={(selectedProjectList.findIndex(oldItem => oldItem._id == item._id) == -1)? false : true}\r\n                                                                            >\r\n                                                                                <em>{item.name}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })}\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={1}>\r\n                                                            <IconButton variant=\"outlined\" size=\"medium\" color=\"inherit\" onClick={ () => { addProjectButtonHandler(); } }\r\n                                                                disabled={currentProject == \"\"? true : false}>\r\n                                                                <AddCircleIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <CircularProgress />\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                {(selectedProjectList)? (\r\n                                                     <Collapse in={(selectedProjectList.length > 0)? true : false}>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\r\n                                                            <em>{\"The following selected projects\"}</em> <u>{'to be assigned:'}</u>\r\n                                                        </Typography>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"primary\" gutterBottom={true}>\r\n                                                            <ol>\r\n                                                                {selectedProjectList.map((item, index) => {\r\n                                                                    return (\r\n                                                                        <li key={`${item._id}${index}`}>\r\n                                                                            {item.name}\r\n                                                                            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\"\r\n                                                                                onClick={ (item) => { removeProjectButtonHandler(item); } }\r\n                                                                            >\r\n                                                                                <CancelIcon fontSize=\"inherit\" />\r\n                                                                            </IconButton>\r\n                                                                        </li>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </ol>\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                ) : (\r\n                                                    <>\r\n                                                    </>\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1}>\r\n                                                {ServiceList? (\r\n                                                    <>\r\n                                                        <Grid item xs={11}>\r\n                                                            <FormControl id=\"Services-options-label\" variant=\"filled\" size=\"small\" fullWidth disabled={!ServiceList}>\r\n                                                                <InputLabel>\r\n                                                                    Service\r\n                                                                </InputLabel>\r\n                                                                <Select\r\n                                                                    fullWidth\r\n                                                                    labelId=\"Services-options-label\"\r\n                                                                    value={currentService}\r\n                                                                    onChange={(event) => { selectServiceHandler(event); } }\r\n                                                                >\r\n                                                                    <MenuItem value=\"\">\r\n                                                                        <em>None</em>\r\n                                                                    </MenuItem>\r\n                                                                    {ServiceList.map( (item, index) => \r\n                                                                    {\r\n                                                                        return(\r\n                                                                            <MenuItem key={`SelectOption${item._id}`} value={item._id}\r\n                                                                                disabled={(selectedServiceList.findIndex(oldItem => oldItem._id == item._id) == -1)? false : true}\r\n                                                                            >\r\n                                                                                <em>{item.name}</em>\r\n                                                                            </MenuItem>  \r\n                                                                        )\r\n                                                                    })}\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={1}>\r\n                                                            <IconButton variant=\"outlined\" size=\"medium\" color=\"inherit\" onClick={ () => { addServiceButtonHandler(); } }\r\n                                                                disabled={currentService == \"\"? true : false}>\r\n                                                                <AddCircleIcon />\r\n                                                            </IconButton>\r\n                                                        </Grid>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <CircularProgress />\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item xs>\r\n                                                {selectedServiceList? (\r\n                                                    <Collapse in={(selectedServiceList.length > 0)? true : false}>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\r\n                                                            <em>{\"The following selected services\"}</em> <u>{'to be assigned by:'}</u>\r\n                                                        </Typography>\r\n                                                        <Typography component=\"div\" variant=\"body2\" color=\"secondary\" gutterBottom={true}>\r\n                                                            <ol>\r\n                                                                {selectedServiceList.map((item, index) => {\r\n                                                                    return (\r\n                                                                        <li key={`${item._id}${index}`}>\r\n                                                                            {item.name}\r\n                                                                            <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\"\r\n                                                                                onClick={ (item) => { removeServiceButtonHandler(item); } }\r\n                                                                            >\r\n                                                                                <CancelIcon fontSize=\"inherit\" />\r\n                                                                            </IconButton>\r\n                                                                        </li>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </ol>\r\n                                                        </Typography>\r\n                                                    </Collapse>\r\n                                                ) : (\r\n                                                    <>\r\n                                                    </>\r\n                                                )}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </>\r\n                            )}\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={assignServiceDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<SupervisorAccountIcon />} onClick={() => { createHandler(); }} disabled={assignServiceDialogExecuting}\r\n                                disabled={(selectedProjectList.length > 0 && selectedServiceList.length > 0)? false : true}\r\n                            >\r\n                                Assign\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nAssignServiceDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    selectedDataItemsList: PropTypes.arrayOf(PropTypes.object),\r\n    assignServiceDialog: PropTypes.bool.isRequired,\r\n    setAssignServiceDialog: PropTypes.func.isRequired,\r\n    assignServiceDialogExecuting: PropTypes.bool.isRequired,\r\n    setAssignServiceDialogExecuting: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nAssignServiceDialog.defaultProps = \r\n{\r\n    appState: {},\r\n    setParentAlert: () => {},\r\n    getParentData:  () => {},\r\n    selectedDataItemsList: {},\r\n    assignServiceDialog: {},\r\n    setAssignServiceDialog: () => {},\r\n    assignServiceDialogExecuting: {},\r\n    setAssignServiceDialogExecuting: () => {}\r\n}\r\n\r\nexport default AssignServiceDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with SaveChapterDialog\r\n// ================================================\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Modules =====================\r\n\r\n// ==================== Components ==================\r\n\r\n// ==================== Helpers =====================\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\nimport del from '../../../../helpers/common/delete';\r\n\r\n// ==================== MUI =========================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// ==================== MUI Icons ====================\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// ==================== MUI Styles ===================\r\n\r\n    const useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n    ({\r\n        root: {\r\n            flexGrow: 1,     // CSS determined this way, flexbox properties\r\n            height: '100%'\r\n        },\r\n    }));\r\n\r\n\r\n// ================= Static Variables ================\r\n\r\n// ================= Static Functions ================\r\n\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst DeleteProjectDialog = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, getParentData, setParentAlert,\r\n            deleteProjectDialog, setDeleteProjectDialog,\r\n            deleteProjectDialogExecuting, setDeleteProjectDialogExecuting,\r\n            selectedDataItemsList, setSelectedDataItemsList  } = props;\r\n\r\n\r\n    // Functions ===\r\n\r\n        const deleteSelectedProjects = useCallback(() =>\r\n        {\r\n            if(selectedDataItemsList)\r\n            {\r\n                selectedDataItemsList.forEach(item => {\r\n                    del(\"projects/\" + item._id, appState.token, (error, response) => \r\n                    {\r\n                        if(error)\r\n                        {\r\n                            setDeleteProjectDialog(false);\r\n                            setParentAlert(new AlertType('Unable to delete project(s). Please try again.', \"error\"));\r\n                        }\r\n                        else\r\n                        {\r\n                            if(response.status === 200)\r\n                            {\r\n                                getParentData();\r\n                                setParentAlert(new AlertType('Successfully deleted project(s). You can continue working.', \"success\")); \r\n                            }   \r\n                            else\r\n                            {\r\n                                setDeleteProjectDialog(false);\r\n                                setParentAlert(new AlertType('Unable to delete project(s). Please try again.', \"error\"));\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setDeleteProjectDialog(false);\r\n                setParentAlert(new AlertType('Unable to delete project(s). Please try again.', \"error\"));\r\n            }\r\n\r\n            // window.location.reload(); Last resort, refresh the entire page\r\n        }, [ appState, selectedDataItemsList, setDeleteProjectDialog, setParentAlert, getParentData]);\r\n\r\n        \r\n        const closeHandler = useCallback(() => {\r\n            setDeleteProjectDialog(false);\r\n        }, [ setDeleteProjectDialog ]);\r\n\r\n\r\n        const deleteHandler = useCallback(() => {\r\n            try{\r\n                setDeleteProjectDialogExecuting(true);\r\n                deleteSelectedProjects();\r\n                setDeleteProjectDialogExecuting(false);\r\n                setDeleteProjectDialog(false);\r\n                setSelectedDataItemsList([]);\r\n            }\r\n            catch{\r\n\r\n            }\r\n        }, [ setDeleteProjectDialogExecuting, deleteSelectedProjects, setSelectedDataItemsList, setDeleteProjectDialog]);\r\n\r\n\r\n    // Hooks ===\r\n\r\n    // Render Section ===\r\n\r\n        return (\r\n            <>\r\n                {selectedDataItemsList? (\r\n                    <Dialog id=\"delete-project-dialog\"\r\n                        fullWidth\r\n                        maxWidth=\"md\"\r\n                        open={deleteProjectDialog}\r\n                        onClose={() => { closeHandler(); }}\r\n                    >\r\n                        <DialogTitle>\r\n                            Delete project{selectedDataItemsList.length === 1? null : \"s\"}\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {deleteProjectDialogExecuting? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <DialogContentText>\r\n                                    {selectedDataItemsList.length === 1? (\r\n                                        <>\r\n                                            Are you sure you would like to delete the project?\r\n                                        </>\r\n                                        \r\n                                    ) : (\r\n                                        <>\r\n                                            {`Are you sure you would like to delete ${selectedDataItemsList.length} projects?`}\r\n                                        </>\r\n                                    )}\r\n                                </DialogContentText>\r\n                            )}\r\n                        \r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={() => { closeHandler(); }} disabled={deleteProjectDialogExecuting}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button color=\"primary\" variant=\"contained\" startIcon={<DeleteIcon />} onClick={() => { deleteHandler(); }} disabled={deleteProjectDialogExecuting}>\r\n                                Delete\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </>\r\n            \r\n        );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nDeleteProjectDialog.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    getParentData: PropTypes.func.isRequired,\r\n    setParentAlert: PropTypes.func.isRequired,\r\n    deleteProjectDialog: PropTypes.bool.isRequired,\r\n    setDeleteProjectDialog: PropTypes.func.isRequired,\r\n    deleteProjectDialogExecuting: PropTypes.bool.isRequired,\r\n    setDeleteProjectDialogExecuting: PropTypes.func.isRequired,\r\n    selectedDataItemsList: PropTypes.arrayOf(PropTypes.object),\r\n    setSelectedDataItemsList: PropTypes.func.isRequired\r\n}\r\n\r\nDeleteProjectDialog.defaultProps = \r\n{\r\n    appState: {},\r\n    getParentData: () => {},\r\n    setParentAlert: () => {},\r\n    deleteProjectDialog: {},\r\n    setDeleteProjectDialog: () => {},\r\n    deleteProjectDialogExecuting: {},\r\n    setDeleteProjectDialogExecuting: () => {},\r\n    selectedDataItemsList: {},\r\n    setSelectedDataItemsList: () => {}\r\n}\r\n\r\nexport default DeleteProjectDialog;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with the Collections Management page.\r\n// Displays all existing collections created and allows\r\n// user to delete, edit and preview them\r\n// ================================================\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';                     //Development Package to validate prop types [Type Checking] passed down\r\n\r\n// ==================== Components ====================\r\nimport AlertMessage from '../../../../components/AlertMessage';\r\n\r\nimport ProjectManagementControlPanel from '../Components/ProjectManagementControlPanel/ProjectManagementControlPanel';\r\nimport ProjectTable from '../Components/ProjectTable/ProjectTable';\r\n\r\nimport CreateProjectDialog from '../Dialog/CreateProjectDialog';\r\nimport AssignMemberDialog from '../Dialog/AssignMemberDialog';\r\nimport AssignServiceDialog from '../Dialog/AssignServiceDialog';\r\nimport DeleteProjectDialog from '../Dialog/DeleteProjectDialog';\r\n// ==================== Helpers ====================\r\nimport get from '../../../../helpers/common/get';\r\nimport AlertType from '../../../../helpers/models/AlertType';\r\n\r\n// ==================== MUI ====================\r\nimport { makeStyles } from '@material-ui/core/styles';  // withStyles can be used for classes and functional componenents but makeStyle is designed for new React with hooks\r\n\r\nimport Grid from '@material-ui/core/Grid';  // Normal Markup with MUI is layout -> Container -> Grid -> Paper etc...\r\nimport Box from '@material-ui/core/Box';    // Padding and margins\r\nimport Card from '@material-ui/core/Card';  //Like the paper module, a visual sheet to place things\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Typography from '@material-ui/core/Typography';  //h1, p replacement Tag\r\n// ==================== Styles ====================\r\nconst useStyles = makeStyles( (theme) =>    //Notice the hook useStyles\r\n({\r\n    root: {\r\n        flexGrow: 1     // CSS determined this way, flexbox properties\r\n    }\r\n}));\r\n\r\n// ======================== React Modern | Functional Component ========================\r\n\r\nconst ProjectsManagement = (props) => { // Notice the arrow function... regular function()  works too\r\n\r\n    // Variables ===\r\n\r\n        // Style variable declaration\r\n        const classes = useStyles();\r\n\r\n        // Declaration of Stateful Variables ===\r\n        const { appState, ToggleDrawerClose, CheckAuthenticationValidity } = props;\r\n\r\n        // Template or User Chapters boolean\r\n        const [isTemplates, setIsTemplates] = useState(true);\r\n        \r\n        // IsDense ; is the template table in compact form\r\n        const [isDense, setIsDense] = useState(true);\r\n\r\n        // Current dataList variable\r\n        const [dataList, setDataList] = useState(null);\r\n\r\n        // Current dataList variable\r\n        const [searchFilteredDataList, setSearchFilteredDataList] = useState(null);\r\n\r\n        // Current selected items dataList variable\r\n        const [selectedDataItemsList, setSelectedDataItemsList] = useState(null);\r\n\r\n        // Create Project Template Dialog Logic variables\r\n        const [createProjectDialog, setCreateProjectDialog] = useState(false);\r\n        const [createProjectDialogExecuting, setCreateProjectDialogExecuting] = useState(false);\r\n\r\n        // Assign Member Project Dialog Logic variables\r\n        const [assignMemberDialog, setAssignMemberDialog] = useState(false);\r\n        const [assignMemberDialogExecuting, setAssignMemberDialogExecuting] = useState(false);\r\n\r\n        // Export Project Chapter Dialog Logic variables\r\n        const [assignServiceDialog, setAssignServiceDialog] = useState(false);\r\n        const [assignServiceDialogExecuting, setAssignServiceDialogExecuting] = useState(false);\r\n\r\n        // Delete Project Dialog Logic variables\r\n        const [deleteProjectDialog, setDeleteProjectDialog] = useState(false);\r\n        const [deleteProjectDialogExecuting, setDeleteProjectDialogExecuting] = useState(false);\r\n\r\n\r\n        // Alert variable\r\n        const [alert, setAlert] = useState(new AlertType());\r\n\r\n    // Functions ===\r\n\r\n        const populateList = useCallback((data) => \r\n        {\r\n            let tempArray = new Array();\r\n\r\n            if(data && Array.isArray(data))\r\n            {\r\n            \r\n                data.forEach(item => {\r\n\r\n                    tempArray.push(\r\n                    {\r\n                        _id: item._id,\r\n                        name: item.name,\r\n                        memberList: item.memberList,\r\n                        collectionList: item.collectionList,\r\n                        createdBy: item.createdBy,\r\n                        createdAt: item.createdAt,\r\n                        modifiedBy: item.modifiedBy,\r\n                        updatedAt: item.updatedAt\r\n                    });\r\n                    \r\n                });\r\n                \r\n            }\r\n\r\n            setDataList([...tempArray]);\r\n            setSearchFilteredDataList([...tempArray]);\r\n            setSelectedDataItemsList([]);\r\n\r\n        }, [ ] );\r\n\r\n        // Retrieve the list of Collections\r\n        const getProjects = useCallback(() => {\r\n\r\n            setDataList(null);\r\n\r\n            get(\"projects/\", appState.token, (err, res) => \r\n            {\r\n                if(err)\r\n                {   \r\n                    //Bad callback call\r\n                    //setAlert(new AlertType(err.message, \"error\"));\r\n                    setAlert(new AlertType('Unable to retrieve Projects. Please refresh and try again.', \"error\"));\r\n                }\r\n                else\r\n                {\r\n                    if(res.status === 200)\r\n                    {\r\n                        populateList(res.data.projectList);\r\n                    }\r\n                    else\r\n                    {\r\n                        //Bad HTTP Response\r\n                        setAlert(new AlertType('Unable to retrieve Projects. Please refresh and try again.', \"error\"));\r\n                    }\r\n                }\r\n\r\n            });\r\n        }, [ populateList, appState.token ] );\r\n\r\n        const getData = useCallback(() => {\r\n            getProjects();\r\n        }, [ getProjects ] );\r\n\r\n    // Hooks ===\r\n\r\n        // Fetch DataList | First Render Only\r\n        useEffect( () =>\r\n        {\r\n            ToggleDrawerClose();\r\n            setTimeout(() => {\r\n                CheckAuthenticationValidity( (tokenValid) => \r\n                {\r\n                    if(tokenValid)\r\n                    {\r\n                        getData();\r\n                    }\r\n                    else {\r\n                        //Bad HTTP Response\r\n                        setAlert(null);\r\n                    }\r\n                });\r\n            }, 200);\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ ]);\r\n\r\n        useEffect( () => {\r\n            getData();\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [ isTemplates ] );\r\n\r\n        useEffect( () => {\r\n\r\n            setSearchFilteredDataList(dataList);\r\n            setSelectedDataItemsList([]);\r\n\r\n        }, [ dataList ] );\r\n\r\n    // Component Render Section ===\r\n    return (\r\n        alert != null? (\r\n            // Notice the shorthand React render Fragment <> & </> instead of <div> & </div>, both work the same\r\n            <div className={classes.root}>\r\n                <Grid container\r\n                direction=\"row\"\r\n                justifyContent=\"flex-start\"\r\n                alignItems=\"stretch\"\r\n                style={ {\"height\": \"100%\"} }\r\n                spacing={1}\r\n                >\r\n                    <Grid item xs={5}>\r\n                        <Box mx={1} my={1}>\r\n                            <Typography variant=\"h5\" color=\"inherit\" align=\"left\" gutterBottom>\r\n                                Manage Projects\r\n                            </Typography>\r\n                        </Box> \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Box mx={1} my={1}>\r\n                            <AlertMessage alert={alert} setParentAlert={setAlert} />\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Box mx={1} my={1} boxShadow={3}>\r\n                            <Card raised={true}>\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"column\"\r\n                                    justifyContent=\"flex-start\"\r\n                                    alignItems=\"stretch\"\r\n                                    spacing={0}\r\n                                >\r\n                                    {dataList && searchFilteredDataList && selectedDataItemsList? (\r\n                                        <Grid item xs={12}>\r\n                                            <ProjectManagementControlPanel\r\n                                                isDense={isDense}\r\n                                                setIsDense={setIsDense}\r\n                                                isTemplates={isTemplates}\r\n                                                setIsTemplates={setIsTemplates}\r\n                                                dataList={dataList}\r\n                                                getParentData={getProjects}\r\n                                                setSearchFilteredDataList={setSearchFilteredDataList}\r\n                                                setCreateProjectDialog={setCreateProjectDialog}\r\n                                                setAssignMemberDialog={setAssignMemberDialog}\r\n                                                setAssignServiceDialog={setAssignServiceDialog}\r\n                                                setParentAlert={setAlert}\r\n                                            />\r\n                                            <ProjectTable\r\n                                                isDense={isDense}\r\n                                                isTemplates={isTemplates}\r\n                                                searchFilteredDataList={searchFilteredDataList}\r\n                                                selectedDataItemsList={selectedDataItemsList}\r\n                                                setSelectedDataItemsList={setSelectedDataItemsList}\r\n                                                setParentDeleteProjectDialog={setDeleteProjectDialog}\r\n                                            />\r\n                                        </Grid>\r\n                                    ) : (\r\n                                        <Grid item xs={12} container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={1}>\r\n                                            <Grid item>\r\n                                                <Box mx={1} my={1} boxShadow={0}>\r\n                                                    <CircularProgress />\r\n                                                </Box>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    )}\r\n                                </Grid>\r\n                            </Card>\r\n                        </Box>    \r\n                    </Grid>\r\n                </Grid>\r\n                <CreateProjectDialog\r\n                    createProjectDialog={createProjectDialog}\r\n                    setCreateProjectDialog={setCreateProjectDialog}\r\n                    createProjectDialogExecuting={createProjectDialogExecuting}\r\n                    setCreateProjectDialogExecuting={setCreateProjectDialogExecuting}\r\n                    setParentAlert={setAlert}\r\n                    getParentData={getProjects}\r\n                    appState={appState}\r\n                />\r\n                <AssignMemberDialog\r\n                    assignMemberDialog={assignMemberDialog}\r\n                    setAssignMemberDialog={setAssignMemberDialog}\r\n                    assignMemberDialogExecuting={assignMemberDialogExecuting}\r\n                    setAssignMemberDialogExecuting={setAssignMemberDialogExecuting}\r\n                    setParentAlert={setAlert}\r\n                    getParentData={getProjects}\r\n                    selectedDataItemsList={selectedDataItemsList}\r\n                    appState={appState}\r\n                />\r\n                <AssignServiceDialog\r\n                    assignServiceDialog={assignServiceDialog}\r\n                    setAssignServiceDialog={setAssignServiceDialog}\r\n                    assignServiceDialogExecuting={assignServiceDialogExecuting}\r\n                    setAssignServiceDialogExecuting={setAssignServiceDialogExecuting}\r\n                    setParentAlert={setAlert}\r\n                    getParentData={getProjects}\r\n                    selectedDataItemsList={selectedDataItemsList}\r\n                    appState={appState}\r\n                />\r\n                 <DeleteProjectDialog\r\n                    deleteProjectDialog={deleteProjectDialog}\r\n                    setDeleteProjectDialog={setDeleteProjectDialog}\r\n                    deleteProjectDialogExecuting={deleteProjectDialogExecuting}\r\n                    setDeleteProjectDialogExecuting={setDeleteProjectDialogExecuting}\r\n                    selectedDataItemsList={selectedDataItemsList}\r\n                    setSelectedDataItemsList={setSelectedDataItemsList}\r\n                    setParentAlert={setAlert}\r\n                    getParentData={getProjects}\r\n                    appState={appState}\r\n                />\r\n            </div>\r\n        ) : (\r\n            <Typography variant=\"h6\" color=\"inherit\" align=\"center\" gutterBottom>\r\n                Not Authorized. Please refresh and try again.\r\n            </Typography>\r\n        )\r\n        \r\n    );\r\n}\r\n\r\n// ======================== Component PropType Check ========================\r\nProjectsManagement.propTypes = \r\n{\r\n    // You can specify the props types in object style with ___.PropTypes.string.isRequired etc...\r\n    appState: PropTypes.object.isRequired,\r\n    ToggleDrawerClose: PropTypes.func.isRequired,\r\n    CheckAuthenticationValidity: PropTypes.func.isRequired\r\n}\r\n\r\nProjectsManagement.defaultProps = {\r\n    appState: {},\r\n    ToggleDrawerClose: () => {},\r\n    CheckAuthenticationValidity: () => {}\r\n}\r\n\r\nexport default ProjectsManagement;  // You can even shorthand this line by adding this at the function [Component] declaration stage","// ================================================\r\n// Code associated with the side bar dashboard\r\n// that contains routes to items such as assigning\r\n// patients to workers, creating booklets, etc.\r\n// depending on the current logged in user's\r\n// authorization level (admin, coordinator, etc.)\r\n// ================================================\r\nimport React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\n// ==================== MUI ====================\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// ==================== Components ====================\r\nimport DrawerContents from './DrawerContents';\r\nimport AppBar from './AppBar';\r\nimport Main from './Main';\r\nimport StartABooklet from './StartABooklet';\r\nimport StartACollection from './StartACollection';\r\nimport Booklet from './Booklet';\r\nimport Reports from '../Reports/Reports';\r\nimport ClientReports from '../Reports/ClientReports';\r\nimport YourPatients from './YourPatients';\r\nimport Search from './Search';\r\nimport ViewProfile from '../Profiles/View';\r\n// import CreatePerson from '../Administration/Users/CreatePerson';\r\n// import PatientAssign from '../Administration/Users/AssignPatient';\r\n// import StaffAssign from '../Administration/Users/AssignStaff';\r\nimport OldUsersManagement from '../Administration/Users/Management';\r\nimport UsersManagement from '../Administration/Users/Pages/UsersManagement';\r\nimport ViewUser from '../Administration/Users/Pages/ViewUser';\r\nimport EditPerson from '../Administration/Users/EditPerson';\r\nimport EnableDisablePerson from '../Administration/Users/EnableDisablePerson';\r\nimport Research from '../Administration/Users/Research';\r\nimport EditChapterTemplate from '../Administration/Booklets/Management/EditChapterTemplate';\r\nimport ViewChapterTemplate from '../Administration/Booklets/Management/ViewChapterTemplate';\r\nimport EditChapterUser from '../Administration/Booklets/Management/EditChapterUser';\r\nimport ViewChapterUser from '../Administration/Booklets/Management/ViewChapterUser';\r\nimport BookletsManagement from '../Administration/Booklets/Pages/Management';\r\n// import TestingGrounds from '../Administration/Booklets/TestingGrounds';\r\nimport Dashboard404 from './404';\r\nimport CollectionsManagement from '../Administration/Collections/Pages/CollectionsManagement';\r\nimport ViewCollection from '../Administration/Collections/Pages/ViewCollection';\r\nimport ProjectsManagement from '../Administration/Projects/Pages/ProjectsManagement';\r\n// import PDFPopup from './PDFPopup';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: 5,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    }\r\n});\r\n\r\nclass Dashboard extends Component \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            drawerOpen: false,\r\n            renderForPDF: false\r\n        };\r\n    }\r\n    \r\n    toggleDrawerOpen = () =>\r\n    {\r\n        this.setState({\r\n            drawerOpen: !this.state.drawerOpen\r\n        });\r\n    }\r\n\r\n    toggleDrawerClose = () =>\r\n    {\r\n        this.setState({\r\n            drawerOpen: false\r\n        });\r\n    }\r\n\r\n    toggleExportRender = () =>\r\n    {\r\n        this.setState({  \r\n            renderForPDF: true\r\n        });\r\n    }  \r\n\r\n    render() \r\n    {\r\n        let { classes } = this.props;\r\n        let { renderForPDF } = this.state;\r\n\r\n        return (\r\n            <BrowserRouter>\r\n                <div className={classes.root}>\r\n                    <CssBaseline />\r\n                    { !renderForPDF &&\r\n                        <AppBar appState={this.props.appState} toggleDrawerOpen={this.toggleDrawerOpen} Logout={this.props.Logout} />\r\n                    }\r\n                        <Drawer\r\n                            className={classes.drawer}\r\n                            variant=\"persistent\"\r\n                            anchor=\"left\"\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                            open={this.state.drawerOpen}\r\n                        >\r\n                            <div className={classes.toolbar} />\r\n                            <Divider />\r\n                            <DrawerContents appState={this.props.appState} />\r\n                        </Drawer>\r\n                    <main\r\n                        className={classNames(classes.content, {\r\n                            [classes.contentShift]: this.state.drawerOpen,\r\n                        })}\r\n                    >\r\n                        <div className={classes.toolbar} />\r\n                        <Switch>\r\n                            <Route exact path=\"/\" render={(props) => <Main {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            {/* <Route path=\"/start/booklet\" render={(props) => <StartABooklet {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            <Route path=\"/start/collection\" render={(props) => <StartACollection {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} /> */}\r\n                            {/* <Route path=\"/booklet/:memberSurveyID\" render={(props) => <Booklet {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} /> */}\r\n                            {/* <Route path=\"/pdf/:memberSurveyID\" render={(props) => <PDFPopup {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose} toggleExportRender={this.toggleExportRender}/>} /> */}\r\n                            {/* <Route path=\"/your\" render={(props) => <YourPatients {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose} UpdateUser={this.props.UpdateUser}/> } /> */}\r\n                            <Route path=\"/client/services/view/:collectionID\" render={(props) => <ViewCollection {...props} CollectionID={props.match.params.collectionID} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            <Route path=\"/client/booklets/user/edit/:bookletID\" render={(props) => <EditChapterUser {...props} ChapterID={props.match.params.bookletID} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose} mode={\"Client\"} />} />\r\n                            <Route path=\"/staff/users/view/:userID\" render={(props) => <ViewUser {...props} userID={props.match.params.userID} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            <Route path=\"/staff/services/view/:collectionID\" render={(props) => <ViewCollection {...props} CollectionID={props.match.params.collectionID} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            <Route path=\"/staff/booklets/user/edit/:bookletID\" render={(props) => <EditChapterUser {...props} ChapterID={props.match.params.bookletID} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} mode={\"Staff\"} />\r\n                            {/* <Route path=\"/search\" render={(props) => <Search {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose} UpdateUser={this.props.UpdateUser}/> } /> */}\r\n                            <Route path=\"/reports\" render={(props) => <Reports {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            <Route path=\"/ClientReports\" render={(props) => <ClientReports {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            <Route path=\"/profile\" render={(props) => <ViewUser {...props} userID={this.props.appState._id} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            <Route path=\"/members\" render={(props) => <UsersManagement {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose} mode={\"Other\"}/>} />\r\n                            {/* <Route path=\"/profile/:profileID?\" render={(props) => <ViewProfile {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} /> */}\r\n                            {/* <Route path=\"/administration/users/invite\" render={(props) => <CreatePerson {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} /> */}\r\n                            {/* <Route path=\"/administration/users/assign/patient\" render={(props) => <PatientAssign {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose} UpdateUser={this.props.UpdateUser}/>} />\r\n                            <Route path=\"/administration/users/assign/staff\" render={(props) => <StaffAssign {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose} UpdateUser={this.props.UpdateUser}/> } /> */}\r\n                            {/* <Route path=\"/administration/users/oldmanagement\" render={(props) => <OldUsersManagement {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} /> */}\r\n                            <Route path=\"/administration/users/edit/:profileID?\" render={(props) => <EditPerson {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            {/* <Route path=\"/administration/users/ed/:profileID?\" render={(props) => <EnableDisablePerson {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} /> */}\r\n                            <Route path=\"/administration/users/research/:profileID?\" render={(props) => <Research {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            <Route path=\"/administration/users/management\" render={(props) => <UsersManagement {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose} mode={\"Admin\"}/>} />\r\n                            <Route path=\"/administration/users/view/:userID\" render={(props) => <ViewUser {...props} userID={props.match.params.userID} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            {/* <Route path=\"/administration/booklets/edit/:bookletID\" render={(props) => <EditBooklet {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} /> */}\r\n                            <Route path=\"/administration/booklets/template/edit/:bookletID\" render={(props) => <EditChapterTemplate {...props} ChapterID={props.match.params.bookletID} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            <Route path=\"/administration/booklets/template/view/:bookletID\" render={(props) => <ViewChapterTemplate {...props} ChapterID={props.match.params.bookletID} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            <Route path=\"/administration/booklets/user/edit/:bookletID\" render={(props) => <EditChapterUser {...props} ChapterID={props.match.params.bookletID} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose} mode={\"Admin\"} />} />\r\n                            <Route path=\"/administration/booklets/user/view/:bookletID\" render={(props) => <ViewChapterUser {...props} ChapterID={props.match.params.bookletID} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            <Route path=\"/administration/booklets/management\" render={(props) => <BookletsManagement {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            {/* <Route path=\"/administration/booklets/testinggrounds\" render={(props) => <TestingGrounds {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} /> */}\r\n                            <Route path=\"/administration/services/management\" render={(props) => <CollectionsManagement {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            <Route path=\"/administration/services/view/:collectionID\" render={(props) => <ViewCollection {...props} CollectionID={props.match.params.collectionID} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            <Route path=\"/administration/projects/management\" render={(props) => <ProjectsManagement {...props} appState={this.props.appState} CheckAuthenticationValidity={this.props.CheckAuthenticationValidity} ToggleDrawerClose={this.toggleDrawerClose}/>} />\r\n                            <Route component={Dashboard404} />\r\n                        </Switch>\r\n                    </main>\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n  \r\nexport default withStyles(styles)(Dashboard);","// ==================== MUI ====================\r\nimport { createTheme } from '@material-ui/core/styles';\r\n\r\n// ==================== Colors ====================\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport red from '@material-ui/core/colors/red';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport green from '@material-ui/core/colors/green';\r\nimport spacing from '@material-ui/core/styles/createSpacing';\r\n\r\n// ============================================\r\n// Generate theme based on options assigned in\r\n// createTheme using the Material-UI API\r\n// ============================================\r\nexport default createTheme({\r\n    palette : {\r\n        primary: {\r\n            light: pink[300],\r\n            main: pink[500],\r\n            dark: pink[700],\r\n            contrastText: '#ffffff'\r\n        },\r\n        secondary: {\r\n            light: purple[300],\r\n            main: purple[500],\r\n            dark: purple[700],\r\n            contrastText: '#ffffff'\r\n        },\r\n        tertiary: {\r\n            light: purple[300],\r\n            main: purple[500],\r\n            dark: purple[700],\r\n            contrastText: '#ffffff'\r\n        }\r\n    },\r\n    alignLeftSpacer: {\r\n        marginLeft: \"auto\",\r\n        marginRight: 0\r\n    },\r\n    button: {\r\n        margin: spacing.unit\r\n    },\r\n    card: {\r\n        marginBottom: 5\r\n    },\r\n    colorGreen: {\r\n        color: green[500]\r\n    },\r\n    colorBlue: {\r\n        color: blue[500]\r\n    },\r\n    colorRed: {\r\n        color: red[800]\r\n    },\r\n    error: {\r\n        color: red[500],\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        marginLeft: 5\r\n    },\r\n    flex: {\r\n        display: 'flex',\r\n    },\r\n    flexWrap: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    marginTop: {\r\n        marginTop: 10\r\n    },\r\n    rightIcon: {\r\n        marginLeft: spacing.unit\r\n    },\r\n    save: {\r\n        color: blue[500]\r\n    },\r\n    spinner: {\r\n        color: green[500]\r\n    },\r\n    success: {\r\n        color: blue[500],\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        marginLeft: 5\r\n    },\r\n    title: {\r\n        marginBottom: 5\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n});","import React, { Component } from 'react';\r\n\r\n// ==================== Helpers ====================\r\nimport validateToken from './helpers/authorization/validateToken';\r\nimport get from './helpers/common/get';\r\n\r\n// ==================== Components ====================\r\nimport Login from './views/Authentication/Login';\r\nimport Dashboard from './views/Dashboard/Dashboard';\r\nimport Theme from './Theme';\r\n\r\n// ==================== MUI ====================\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles';\r\n\r\n// ==================== Colors ====================\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nconst styles = {\r\n\tspinner: {\r\n        color: green[500],\r\n        position: 'absolute',\r\n\t\tleft: '50%',\r\n\t\ttop: '25%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n}\r\n\r\nclass App extends Component \r\n{\r\n\tconstructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n\t\t\t_id: null,\r\n\t\t\tname: null,\r\n\t\t\trole: null,\r\n\t\t\tpatients: [],\r\n\t\t\tworkers: [],\r\n\t\t\ttoken: null,\r\n\t\t\tfacilityId: null,\r\n\t\t\tfacilityName: null,\r\n\t\t\tauthenticated: false,\r\n\t\t\trender: false\r\n        };\r\n\t}\r\n\t\r\n\tcomponentDidMount = () =>\r\n\t{\r\n\t\tthis.CheckAuthentication();\r\n\t}\r\n\r\n\tCheckAuthentication = () =>\r\n\t{\r\n\t\tlet { token } = this.state;\r\n\r\n\t\tif(token === null || token === undefined || token === '')\r\n\t\t{\r\n\t\t\tvar _id = localStorage.getItem('_id');\r\n\t\t\tvar name = localStorage.getItem('name');\r\n\t\t\tvar role = localStorage.getItem('role');\r\n\t\t\tvar patients = JSON.parse(localStorage.getItem('patients'));\r\n\t\t\tvar workers = JSON.parse(localStorage.getItem('workers'));\r\n\t\t\tvar facilityId = localStorage.getItem('facilityId');\r\n\t\t\tvar facilityName = localStorage.getItem('facilityName');\r\n\t\t\tvar _token = localStorage.getItem('token');\r\n\r\n\t\t\tif(_id == null || name == null || role == null || patients == null || workers == null || _token == null || facilityId == null || facilityName == null)\r\n\t\t\t{\r\n\t\t\t\tthis.Logout();\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t_id: _id,\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\trole: role,\r\n\t\t\t\t\tpatients: patients,\r\n\t\t\t\t\tworkers: workers,\r\n\t\t\t\t\tfacilityId: facilityId,\r\n\t\t\t\t\tfacilityName: facilityName,\r\n\t\t\t\t\ttoken: _token\r\n\t\t\t\t}, () => this.CheckAuthenticationValidity(tokenValid => {\r\n\t\t\t\t\tif(tokenValid)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tauthenticated: true,\r\n\t\t\t\t\t\t\trender: true\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.Logout();\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.CheckAuthenticationValidity(tokenValid => {\r\n\t\t\t\tif(!tokenValid)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.Logout();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\tCheckAuthenticationValidity = (callback) =>\r\n\t{\r\n\t\tlet { token } = this.state;\r\n\r\n\t\tvalidateToken(token, (error, response) => \r\n\t\t{\r\n            if(error)\r\n            {\r\n\t\t\t\tcallback(false);\r\n\t\t\t\tthis.Logout();\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(response.status === 200 || response.status === 304)\r\n\t\t\t\t{\r\n\t\t\t\t\tcallback(true);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tcallback(false);\r\n\t\t\t\t\tthis.Logout();\r\n\t\t\t\t}\r\n\t\t\t}\r\n        });\r\n\t}\r\n\r\n\tUpdateUser = () => \r\n\t{\r\n\t\tlet { _id, token } = this.state;\r\n\r\n\t\treturn get('users/' + _id, token, (error, response) => {\r\n\t\t\tif(error) return;\r\n\t\t\tif(response.status === 200 || response.status === 304)\r\n\t\t\t{\r\n\t\t\t\tlocalStorage.setItem(\"patients\", JSON.stringify(response.data.user.patients));\r\n\t\t\t\tlocalStorage.setItem(\"workers\", JSON.stringify(response.data.user.workers));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tLogin = (token, user) =>\r\n\t{\r\n\t\tlocalStorage.setItem(\"_id\",\tuser._id);\r\n\t\tlocalStorage.setItem(\"name\", user.info.name);\r\n\t\tlocalStorage.setItem(\"role\", user.role);\r\n\t\tlocalStorage.setItem(\"patients\", JSON.stringify(user.patients));\r\n\t\tlocalStorage.setItem(\"workers\", JSON.stringify(user.workers));\r\n\t\tlocalStorage.setItem(\"facilityId\", user.facilityId._id);\r\n\t\tlocalStorage.setItem(\"facilityName\", user.facilityId.name);\r\n\t\tlocalStorage.setItem(\"token\", token);\r\n\r\n\t\tthis.setState({\r\n\t\t\t_id: user._id,\r\n\t\t\tname: user.info.name,\r\n\t\t\trole: user.role,\r\n\t\t\tpatients: user.patients,\r\n\t\t\tworkers: user.workers,\r\n\t\t\tfacilityId: user.facilityId._id,\r\n\t\t\tfacilityName: user.facilityId.name,\r\n\t\t\ttoken: token,\r\n\t\t\tauthenticated: true\r\n\t\t});\r\n\t}\r\n\r\n\tLogout = () =>\r\n\t{\r\n\t\tlocalStorage.removeItem(\"_id\");\r\n\t\tlocalStorage.removeItem(\"name\");\r\n\t\tlocalStorage.removeItem(\"role\");\r\n\t\tlocalStorage.removeItem(\"patients\");\r\n\t\tlocalStorage.removeItem(\"workers\");\r\n\t\tlocalStorage.removeItem(\"facilityId\");\r\n\t\tlocalStorage.removeItem(\"facilityName\");\r\n\t\tlocalStorage.removeItem(\"token\");\r\n\t\t\t\t\t\r\n\t\tthis.setState({\r\n\t\t\t_id: null,\r\n\t\t\trole: null,\r\n\t\t\tname: null,\r\n\t\t\ttoken: null,\r\n\t\t\tpatients: null,\r\n\t\t\tworkers: null,\r\n\t\t\tauthenticated: false,\r\n\t\t\trender: true\r\n\t\t});\r\n\t}\r\n\t\r\n\trender()\r\n\t{\r\n\t\tlet { classes } = this.props;\r\n\t\tlet { authenticated, render } = this.state;\r\n\r\n\t\tif(render)\r\n\t\t{\r\n\t\t\tif(authenticated)\r\n\t\t\t{\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MuiThemeProvider theme={Theme}>\r\n\t\t\t\t\t\t<Dashboard\r\n\t\t\t\t\t\t\tappState={this.state} \r\n\t\t\t\t\t\t\tLogout={this.Logout} \r\n\t\t\t\t\t\t\tCheckAuthenticationValidity={this.CheckAuthenticationValidity}\r\n\t\t\t\t\t\t\tUpdateUser={this.UpdateUser}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</MuiThemeProvider>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Login \r\n\t\t\t\t\t\tLogin={this.Login}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn (\r\n\t\t\t\t<div align=\"center\">\r\n\t\t\t\t\t<CircularProgress className={classes.spinner} /> \r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nrequire('dotenv').config();\r\n\r\n<script src=\"https://unpkg.com/chartjs-gauge@0.3.0/dist/chartjs-gauge.js\"></script>\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n\r\nserviceWorker.register();\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}